<html>
<head>
<title>CN2 Rule Learner</title>
<link rel=stylesheet href="../../../style.css" type="text/css" media=screen>
<link rel=stylesheet href="../../../style-print.css" type="text/css" media=print></link>
</head>

<body>

<h1>CN2 Rule Learner</h1>

<img class="screenshot" src="../icons/CN2.png">
<p>CN2: A widget for learning an unordered set of classification if-then rules. </p>

<h2>Channels</h2>

<h3>Inputs</h3>

<DL class=attributes>
<DT>Examples (ExampleTable)</DT>
</dl>

<h3>Outputs</h3>
<DL class=attributes>
<DT>Learner (orange.Learner)</DT>
<DT>Classifier (orange.Classifier)</DT>
<DD>A rule classifier induced from given data. </DD>
<DT>CN2UnorderedClassifier (orngCN2.CN2UnorderedClassifier) </DT>
<DD>The same as "Classifier". </DD></DL>


<h2>Description</h2>

<p>
Use this widget to learn a set of if-then rules from data. The algorithm is based on CN2 algorithm, however the variety of options in widget allows user to implement different kinds of cover-and-remove rule learning algorithms.

<img class="leftscreenshot"
src="CN2.png" alt="CN2 Widget" border=0 align="left">

<p>In the first box user can select between three evaluation functions. The first, <span class="option">Laplace</span>, was originally used in CN2 algorithm. The second function is <span class="option">m-estimate</span> of probability (used in later versions of CN2) and the last is <span class="option">WRACC</span> (weighted relative accuracy), used in CN2-SD algorithm.</p>

<p>In the second box the user can define pre-prunning of rules. The first parameter, <span class="option">Alpha (vs. default rule)</span>, is a parameter of LRS (likelihood ratio statistics). Alpha determines required significance of a rule when compared to the default rule. The second parameter, <span class="option">Stopping Alpha (vs. parent rule)</span>, is also the parameter of LRS, only that in this case the rule is compared to its parent rule: it verifies whether the last specialization of the rule is significant enough. The third parameter, <span class="option">Minimum coverage</span> specifies the minimal number of examples that each induced rule must cover. The last parameter, <span class="option">Maximal rule length</span> limits the length of induced rules.</p>

<p> <span class="option">Beam width</span> is the number of best rules that are, in each step, further specialized. Other rules are discarded. </p>

<p>Covering and removing examples can be done in two different ways. <span class="option">Exclusive covering</span>, as in the original CN2, removes all covered examples and continues learning on remaining examples. Alternative type of covering is <span class="option">weighted covering</span>, which only decreases weight of covered examples instead of removing them. The parameter of weighted covering is the multiplier; the weights of all covered examples are multiplied by this number.</p>

<p>Any changes of arguments must be confirmed by pushing <span class="option">Apply</span> before they are propagated through the schema.</p>

<br clear="all">

<h2>Examples</h2>

<p>The figure shows a simple use of the widget. Rules are learned with CN2 widget and the classifier is sent to the Rules Viewer.</p>

<p><a href="CN2-Interaction-B.png">Click to enlarge<br/><img class="schema"
src="CN2-Interaction-S.png" alt="CN2 - Interaction" border=0/></a></p>

</body>
</html>
