<html>
<head>
<title>Logistic Regression</title>
<link rel=stylesheet href="../../../style.css" type="text/css" media=screen>
<link rel=stylesheet href="../../../style-print.css" type="text/css" media=print></link>
</head>

<body>

<h1>Logistic Regression Learner</h1>

<img class="screenshot" src="../icons/LogisticRegression.png">
<p>Logistic Regression Learner</p>

<h2>Channels</h2>

<h3>Inputs</h3>

<DL class=attributes>
<DT>Examples (ExampleTable)</DT>
<DD>A table with training examples</DD>
</dl>

<h3>Outputs</h3>
<DL class=attributes>
<DT>Learner</DT>
<DD>The logistic regression learning algorithm with settings as specified in the dialog.</DD>

<DT>Logistic Regression Classifier</DT>
<DD>Trained classifier (a subtype of Classifier)</DD>
</dl>

<P>Signal <code>Logistic Regression Classifier</code> sends data only if the learning data (signal <code>Examples</code> is present.</P>

<h2>Description</h2>

<p>This widget provides a graphical interface to the logistic regression classifier.</p>

<p>As all widgets for classification, this widget provides a learner and classifier on the output. Learner is a learning algorithm with settings as specified by the user. It can be fed into widgets for testing learners, for instance <code>Test Learners</code>. Classifier is a logistic regression classifier (a subtype of a general classifier), built from the training examples on the input. If examples are not given, there is no classifier on the output.</p>

<p>The widget requires - due to limitations of the learning algorithm - data with binary class.</p>

<img class="leftscreenshot" src="LogisticRegression.png" alt="Logistic Regression Widget" border=0 />

<P>Learner can be given a name under which it will appear in, say, <code>Test Learners</code>. The default name is "Logistic Regression".</P>

<P>If <span class="option">Stepwise attribute selection</span> is checked, the learner will iteratively add and remove the attributes, one at a time, based on their significance. The thresholds for addition and removal of the attribute are set in <span class="option">Add threshold</span> and <span class="option">Remove threshold</span>. It is also possible to limit the total number of attributes in the model.</P>

<p>Independent of these settings, the learner will always remove singular attributes, for instance the constant attributes or those which can be expressed as a linear combination of other attributes.</p>

<p>Logistic regression has no internal mechanism for dealing with missing values. These thus need to be imputed. The widget offers a number of options: it can impute the average value of the attribute, its minimum and maximum or train a model to predict the attribute's values based on values of other attributes. It can also remove the examples with missing values.</p>

<p>Note that there also exist a separate widget for missing data imputation, <a href="../Data/Impute.htm">Impute</a>.</p>


<h2>Examples</h2>

The widget is used just as any other widget for inducing classifier. See, for instance, the example for the <a href="NaiveBayes.htm">Naive Bayesian Classifier</a>.

</body>
</html>
