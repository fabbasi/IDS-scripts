/* This file was generated by pyxtract 
   Do not edit.*/

#include "externs.px"

PyObject *__addmethod(PyObject *, PyObject *args);
PyObject *__arrayDistance(PyObject *, PyObject *args);
PyObject *__pickleLoaderContDistribution(PyObject *, PyObject *args);
PyObject *__pickleLoaderContingency(PyObject *, PyObject *args);
PyObject *__pickleLoaderContingencyAttrAttr(PyObject *, PyObject *args);
PyObject *__pickleLoaderContingencyAttrClass(PyObject *, PyObject *args);
PyObject *__pickleLoaderContingencyClassAttr(PyObject *, PyObject *args);
PyObject *__pickleLoaderCostMatrix(PyObject *, PyObject *args);
PyObject *__pickleLoaderDiscDistribution(PyObject *, PyObject *args);
PyObject *__pickleLoaderDistanceMap(PyObject *, PyObject *args);
PyObject *__pickleLoaderDomain(PyObject *, PyObject *args);
PyObject *__pickleLoaderEFMDataDescription(PyObject *, PyObject *args);
PyObject *__pickleLoaderEarthClassifier(PyObject *self, PyObject *args);
PyObject *__pickleLoaderEnumVariable(PyObject *, PyObject *args);
PyObject *__pickleLoaderExample(PyObject *, PyObject *args);
PyObject *__pickleLoaderExampleDistVector(PyObject *, PyObject *args);
PyObject *__pickleLoaderExampleReferenceTable(PyObject *, PyObject *args);
PyObject *__pickleLoaderExampleTable(PyObject *, PyObject *args);
PyObject *__pickleLoaderGraphAsList(PyObject *, PyObject *args);
PyObject *__pickleLoaderGraphAsMatrix(PyObject *, PyObject *args);
PyObject *__pickleLoaderGraphAsTree(PyObject *, PyObject *args);
PyObject *__pickleLoaderLinearClassifier(PyObject *, PyObject *args);
PyObject *__pickleLoaderNamedConstants(PyObject *, PyObject *);
PyObject *__pickleLoaderP2NN(PyObject *, PyObject *args);
PyObject *__pickleLoaderRandomGenerator(PyObject *, PyObject *args);
PyObject *__pickleLoaderSimpleTreeClassifier(PyObject *self, PyObject *args);
PyObject *__pickleLoaderSubsetsGeneratorConstSizeIterator(PyObject *, PyObject *args);
PyObject *__pickleLoaderSubsetsGeneratorMinMaxSizeIterator(PyObject *, PyObject *args);
PyObject *__pickleLoaderSymMatrix(PyObject *, PyObject *args);
PyObject *__pickleLoaderValue(PyObject *, PyObject *args);
PyObject *__pickleLoaderValueType(PyObject *, PyObject *args);
PyObject *__pickleLoaderVariable(PyObject *, PyObject *args);
PyObject *__removemethod(PyObject *, PyObject *args);
PyObject *compiletime(PyObject *, PyObject *);
PyObject *frange(PyObject *, PyObject *args);
PyObject *getClassDistribution(PyObject *type, PyObject *args);
PyObject *getRegisteredFileTypes(PyObject *, PyObject *, PyObject *);
PyObject *kaplanMeier(PyObject *, PyObject *args);
PyObject *newmetaid(PyObject *, PyObject *args);
PyObject *registerFileType(PyObject *, PyObject *args);
PyObject *registerPythonVariable(PyObject *, PyObject *vartype);
PyObject *removeoutput(PyObject *, PyObject *args);
PyObject *saveBasket(PyObject *, PyObject *args);
PyObject *saveC45(PyObject *, PyObject *args);
PyObject *saveCsv(PyObject *, PyObject *args, PyObject *keyws);
PyObject *saveTabDelimited(PyObject *, PyObject *args, PyObject *keyws);
PyObject *saveTxt(PyObject *, PyObject *args, PyObject *keyws);
PyObject *select(PyObject *, PyObject *args);
PyObject *setWarningLevel(PyObject *, PyObject *arg);
PyObject *setoutput(PyObject *, PyObject *args);
PyObject *setrandseed(PyObject *, PyObject *args);
PyObject *textCos(PyObject *, PyObject *args);


PyMethodDef orangeFunctions[]={
     {"__addmethod", (binaryfunc)__addmethod, METH_VARARGS, "(type, name, function) -> None"},
     {"__arrayDistance", (binaryfunc)__arrayDistance, METH_VARARGS, "(table1, table2) -> distance"},
     {"__pickleLoaderContDistribution", (binaryfunc)__pickleLoaderContDistribution, METH_VARARGS, "(type, packed_distribution)"},
     {"__pickleLoaderContingency", (binaryfunc)__pickleLoaderContingency, METH_VARARGS, "(list of PDistribution, [packed_floats])"},
     {"__pickleLoaderContingencyAttrAttr", (binaryfunc)__pickleLoaderContingencyAttrAttr, METH_VARARGS, "(list of PDistribution, [packed_floats])"},
     {"__pickleLoaderContingencyAttrClass", (binaryfunc)__pickleLoaderContingencyAttrClass, METH_VARARGS, "(list of PDistribution, [packed_floats])"},
     {"__pickleLoaderContingencyClassAttr", (binaryfunc)__pickleLoaderContingencyClassAttr, METH_VARARGS, "(list of PDistribution, [packed_floats])"},
     {"__pickleLoaderCostMatrix", (binaryfunc)__pickleLoaderCostMatrix, METH_VARARGS, "(type, packed_matrix, dimension)"},
     {"__pickleLoaderDiscDistribution", (binaryfunc)__pickleLoaderDiscDistribution, METH_VARARGS, "(type, packed_distribution)"},
     {"__pickleLoaderDistanceMap", (binaryfunc)__pickleLoaderDistanceMap, METH_VARARGS, "(type, packed_matrix, dimension, elementIndices)"},
     {"__pickleLoaderDomain", (binaryfunc)__pickleLoaderDomain, METH_VARARGS, "(type, attributes, classVar, classVars, req_metas, opt_metas)"},
     {"__pickleLoaderEFMDataDescription", (binaryfunc)__pickleLoaderEFMDataDescription, METH_VARARGS, "(domain, domainDistributions, packed_data)"},
     {"__pickleLoaderEarthClassifier", (binaryfunc)__pickleLoaderEarthClassifier, METH_VARARGS, "(buffer)"},
     {"__pickleLoaderEnumVariable", (binaryfunc)__pickleLoaderEnumVariable, METH_VARARGS, "(type, dictionary)"},
     {"__pickleLoaderExample", (binaryfunc)__pickleLoaderExample, METH_VARARGS, "(domain, packed_values, other_values)"},
     {"__pickleLoaderExampleDistVector", (binaryfunc)__pickleLoaderExampleDistVector, METH_VARARGS, "(type, values)"},
     {"__pickleLoaderExampleReferenceTable", (binaryfunc)__pickleLoaderExampleReferenceTable, METH_VARARGS, "(type, lockedtable, indices)"},
     {"__pickleLoaderExampleTable", (binaryfunc)__pickleLoaderExampleTable, METH_VARARGS, "(type, domain, packed_values, other_values)"},
     {"__pickleLoaderGraphAsList", (binaryfunc)__pickleLoaderGraphAsList, METH_VARARGS, "(type, nVertices, nEdgeTypes, directed, packed_edges)"},
     {"__pickleLoaderGraphAsMatrix", (binaryfunc)__pickleLoaderGraphAsMatrix, METH_VARARGS, "(type, nVertices, nEdgeTypes, directed, packed_edges)"},
     {"__pickleLoaderGraphAsTree", (binaryfunc)__pickleLoaderGraphAsTree, METH_VARARGS, "(type, nVertices, nEdgeTypes, directed, packed_edges)"},
     {"__pickleLoaderLinearClassifier", (binaryfunc)__pickleLoaderLinearClassifier, METH_VARARGS, "(type, packed_data)"},
     {"__pickleLoaderNamedConstants", (binaryfunc)__pickleLoaderNamedConstants, METH_VARARGS},
     {"__pickleLoaderP2NN", (binaryfunc)__pickleLoaderP2NN, METH_VARARGS, "(type, packed_data)"},
     {"__pickleLoaderRandomGenerator", (binaryfunc)__pickleLoaderRandomGenerator, METH_VARARGS, "(type, state, next_offset, left)"},
     {"__pickleLoaderSimpleTreeClassifier", (binaryfunc)__pickleLoaderSimpleTreeClassifier, METH_VARARGS, "(buffer)"},
     {"__pickleLoaderSubsetsGeneratorConstSizeIterator", (binaryfunc)__pickleLoaderSubsetsGeneratorConstSizeIterator, METH_VARARGS, "(type, packed_counter)"},
     {"__pickleLoaderSubsetsGeneratorMinMaxSizeIterator", (binaryfunc)__pickleLoaderSubsetsGeneratorMinMaxSizeIterator, METH_VARARGS, "(type, varList, packed_counter)"},
     {"__pickleLoaderSymMatrix", (binaryfunc)__pickleLoaderSymMatrix, METH_VARARGS, "(type, packed_matrix, dimension)"},
     {"__pickleLoaderValue", (binaryfunc)__pickleLoaderValue, METH_VARARGS, "(variable, packed_values, other_values)"},
     {"__pickleLoaderValueType", (binaryfunc)__pickleLoaderValueType, METH_O},
     {"__pickleLoaderVariable", (binaryfunc)__pickleLoaderVariable, METH_VARARGS, "(type, dictionary)"},
     {"__removemethod", (binaryfunc)__removemethod, METH_VARARGS, "(type, name) -> None"},
     {"compiletime", (binaryfunc)compiletime, METH_NOARGS, "() -> time"},
     {"frange", (binaryfunc)frange, METH_VARARGS, "([[start=step], stop=1.0+step], step) -> [start+i*step]"},
     {"getClassDistribution", (binaryfunc)getClassDistribution, METH_VARARGS, "(examples[, weightID]) -> Distribution"},
     {"getRegisteredFileTypes", (binaryfunc)getRegisteredFileTypes, METH_NOARGS, "() -> ((extension, description, loader, saver), ...)"},
     {"kaplanMeier", (binaryfunc)kaplanMeier, METH_VARARGS, "(examples, outcome attribute, fail value, time attribute[, weightID]) -> survival curve"},
     {"newmetaid", (binaryfunc)newmetaid, METH_VARARGS, "([Variable]) -> int"},
     {"registerFileType", (binaryfunc)registerFileType, METH_VARARGS, "(name, extensions, loader, saver) -> None"},
     {"registerPythonVariable", (binaryfunc)registerPythonVariable, METH_O, "(class) -> None"},
     {"removeoutput", (binaryfunc)removeoutput, METH_VARARGS, "(type, format-name) -> None"},
     {"saveBasket", (binaryfunc)saveBasket, METH_VARARGS, "(filename, examples) -> None"},
     {"saveC45", (binaryfunc)saveC45, METH_VARARGS, "(filename, examples) -> None"},
     {"saveCsv", (binaryfunc)saveCsv, METH_VARARGS | METH_KEYWORDS, "(filename, examples) -> None"},
     {"saveTabDelimited", (binaryfunc)saveTabDelimited, METH_VARARGS | METH_KEYWORDS, "(filename, examples[, list_discrete_values=1]) -> None"},
     {"saveTxt", (binaryfunc)saveTxt, METH_VARARGS | METH_KEYWORDS, "(filename, examples) -> None"},
     {"select", (binaryfunc)select, METH_VARARGS, "(selector, sequence) -> selected-sequence"},
     {"setWarningLevel", (binaryfunc)setWarningLevel, METH_O, "(bool) -> None"},
     {"setoutput", (binaryfunc)setoutput, METH_VARARGS, "(type, format-name, function) -> None"},
     {"setrandseed", (binaryfunc)setrandseed, METH_VARARGS, "(int seed) -> None"},
     {"textCos", (binaryfunc)textCos, METH_VARARGS, "(examples, type = 0-cos, 1-inv-cos, 2-eucl, metaClass = 7) -> SymMatrix"},
     {NULL, NULL}
};

PyObject *ValueTypes();
PyObject *VarTypes();
PyObject *stdRandomGenerator();
int noOforangeClasses=387;

TOrangeType *orangeClasses[]={
    &PyOrAlignmentList_Type,
    &PyOrAssessIMQuality_Type,
    &PyOrAssociationClassifier_Type,
    &PyOrAssociationLearner_Type,
    &PyOrAssociationRule_Type,
    &PyOrAssociationRules_Type,
    &PyOrAssociationRulesInducer_Type,
    &PyOrAssociationRulesSparseInducer_Type,
    &PyOrAttributedBoolList_Type,
    &PyOrAttributedFloatList_Type,
    &PyOrBasicAttrStat_Type,
    &PyOrBasketExampleGenerator_Type,
    &PyOrBasketFeeder_Type,
    &PyOrBayesClassifier_Type,
    &PyOrBayesLearner_Type,
    &PyOrBiModalDiscretization_Type,
    &PyOrBiModalDiscretizer_Type,
    &PyOrBoolList_Type,
    &PyOrC45Classifier_Type,
    &PyOrC45ExampleGenerator_Type,
    &PyOrC45Learner_Type,
    &PyOrC45TreeNode_Type,
    &PyOrC45TreeNodeList_Type,
    &PyOrCartesianClassifier_Type,
    &PyOrClassifier_Type,
    &PyOrClassifierByExampleTable_Type,
    &PyOrClassifierByLookupTable_Type,
    &PyOrClassifierByLookupTable1_Type,
    &PyOrClassifierByLookupTable2_Type,
    &PyOrClassifierByLookupTable3_Type,
    &PyOrClassifierFD_Type,
    &PyOrClassifierFromVar_Type,
    &PyOrClassifierFromVarFD_Type,
    &PyOrClassifierList_Type,
    &PyOrClustersFromDistributions_Type,
    &PyOrClustersFromDistributionsByAssessor_Type,
    &PyOrClustersFromIM_Type,
    &PyOrClustersFromIMByAssessor_Type,
    &PyOrColorIG_Type,
    &PyOrColorIG_MCF_Type,
    &PyOrColoredIG_Type,
    &PyOrColumnAssessor_Type,
    &PyOrColumnAssessor_Kramer_Type,
    &PyOrColumnAssessor_Laplace_Type,
    &PyOrColumnAssessor_Measure_Type,
    &PyOrColumnAssessor_N_Type,
    &PyOrColumnAssessor_Relief_Type,
    &PyOrColumnAssessor_m_Type,
    &PyOrColumnAssessor_mf_Type,
    &PyOrComputeDomainContingency_Type,
    &PyOrConditionalProbabilityEstimator_Type,
    &PyOrConditionalProbabilityEstimatorConstructor_Type,
    &PyOrConditionalProbabilityEstimatorConstructor_ByRows_Type,
    &PyOrConditionalProbabilityEstimatorConstructor_loess_Type,
    &PyOrConditionalProbabilityEstimatorList_Type,
    &PyOrConditionalProbabilityEstimator_ByRows_Type,
    &PyOrConditionalProbabilityEstimator_FromDistribution_Type,
    &PyOrContDistribution_Type,
    &PyOrContingency_Type,
    &PyOrContingencyAttrAttr_Type,
    &PyOrContingencyAttrClass_Type,
    &PyOrContingencyClass_Type,
    &PyOrContingencyClassAttr_Type,
    &PyOrCostLearner_Type,
    &PyOrCostMatrix_Type,
    &PyOrCostWrapperClassifier_Type,
    &PyOrCostWrapperLearner_Type,
    &PyOrDefaultClassifier_Type,
    &PyOrDiscDistribution_Type,
    &PyOrDiscrete2Continuous_Type,
    &PyOrDiscretization_Type,
    &PyOrDiscretizer_Type,
    &PyOrDistanceMap_Type,
    &PyOrDistanceMapConstructor_Type,
    &PyOrDistribution_Type,
    &PyOrDistributionAssessor_Type,
    &PyOrDistributionAssessor_Kramer_Type,
    &PyOrDistributionAssessor_Laplace_Type,
    &PyOrDistributionAssessor_Measure_Type,
    &PyOrDistributionAssessor_Relief_Type,
    &PyOrDistributionAssessor_m_Type,
    &PyOrDistributionAssessor_mf_Type,
    &PyOrDistributionList_Type,
    &PyOrDomain_Type,
    &PyOrDomainBasicAttrStat_Type,
    &PyOrDomainContingency_Type,
    &PyOrDomainContinuizer_Type,
    &PyOrDomainDepot_Type,
    &PyOrDomainDistributions_Type,
    &PyOrDomainTransformerConstructor_Type,
    &PyOrEFMDataDescription_Type,
    &PyOrEVDist_Type,
    &PyOrEVDistGetter_Type,
    &PyOrEVDistGetter_Standard_Type,
    &PyOrEVDistList_Type,
    &PyOrEarthClassifier_Type,
    &PyOrEarthLearner_Type,
    &PyOrEntropyDiscretization_Type,
    &PyOrEnumVariable_Type,
    &PyOrEquiDistDiscretization_Type,
    &PyOrEquiDistDiscretizer_Type,
    &PyOrEquiNDiscretization_Type,
    &PyOrExample_Type,
    &PyOrExampleCluster_Type,
    &PyOrExampleClusters_Type,
    &PyOrExampleDistBySorting_Type,
    &PyOrExampleDistConstructor_Type,
    &PyOrExampleDistVector_Type,
    &PyOrExampleGenerator_Type,
    &PyOrExampleGeneratorList_Type,
    &PyOrExampleTable_Type,
    &PyOrExamplesDistance_Type,
    &PyOrExamplesDistanceConstructor_Type,
    &PyOrExamplesDistanceConstructor_DTW_Type,
    &PyOrExamplesDistanceConstructor_Euclidean_Type,
    &PyOrExamplesDistanceConstructor_Hamming_Type,
    &PyOrExamplesDistanceConstructor_Lp_Type,
    &PyOrExamplesDistanceConstructor_Manhattan_Type,
    &PyOrExamplesDistanceConstructor_Maximal_Type,
    &PyOrExamplesDistanceConstructor_Relief_Type,
    &PyOrExamplesDistance_DTW_Type,
    &PyOrExamplesDistance_Euclidean_Type,
    &PyOrExamplesDistance_Hamming_Type,
    &PyOrExamplesDistance_Lp_Type,
    &PyOrExamplesDistance_Manhattan_Type,
    &PyOrExamplesDistance_Maximal_Type,
    &PyOrExamplesDistance_Normalized_Type,
    &PyOrExamplesDistance_Relief_Type,
    &PyOrFeatureByDistributions_Type,
    &PyOrFeatureByIM_Type,
    &PyOrFeatureByMinComplexity_Type,
    &PyOrFeatureInducer_Type,
    &PyOrFileExampleGenerator_Type,
    &PyOrFilter_Type,
    &PyOrFilterList_Type,
    &PyOrFilter_conjunction_Type,
    &PyOrFilter_disjunction_Type,
    &PyOrFilter_hasClassValue_Type,
    &PyOrFilter_hasMeta_Type,
    &PyOrFilter_hasSpecial_Type,
    &PyOrFilter_isDefined_Type,
    &PyOrFilter_random_Type,
    &PyOrFilter_sameValue_Type,
    &PyOrFilter_values_Type,
    &PyOrFindNearest_Type,
    &PyOrFindNearestConstructor_Type,
    &PyOrFindNearestConstructor_BruteForce_Type,
    &PyOrFindNearest_BruteForce_Type,
    &PyOrFloatFloatList_Type,
    &PyOrFloatList_Type,
    &PyOrFloatListList_Type,
    &PyOrFloatVariable_Type,
    &PyOrGaussianDistribution_Type,
    &PyOrGeneralExampleClustering_Type,
    &PyOrGraph_Type,
    &PyOrGraphAsList_Type,
    &PyOrGraphAsMatrix_Type,
    &PyOrGraphAsTree_Type,
    &PyOrHierarchicalCluster_Type,
    &PyOrHierarchicalClusterList_Type,
    &PyOrHierarchicalClusterOrdering_Type,
    &PyOrHierarchicalClustering_Type,
    &PyOrIG_Type,
    &PyOrIGBySorting_Type,
    &PyOrIGConstructor_Type,
    &PyOrIM_Type,
    &PyOrIMBlurer_Type,
    &PyOrIMByIMByRows_Type,
    &PyOrIMByRelief_Type,
    &PyOrIMByRows_Type,
    &PyOrIMByRowsByRelief_Type,
    &PyOrIMByRowsBySorting_Type,
    &PyOrIMByRowsConstructor_Type,
    &PyOrIMByRowsPreprocessor_Type,
    &PyOrIMBySorting_Type,
    &PyOrIMClustering_Type,
    &PyOrIMConstructor_Type,
    &PyOrImputeClassifier_Type,
    &PyOrImputer_Type,
    &PyOrImputerConstructor_Type,
    &PyOrImputerConstructor_asValue_Type,
    &PyOrImputerConstructor_average_Type,
    &PyOrImputerConstructor_maximal_Type,
    &PyOrImputerConstructor_minimal_Type,
    &PyOrImputerConstructor_model_Type,
    &PyOrImputerConstructor_random_Type,
    &PyOrImputer_asValue_Type,
    &PyOrImputer_defaults_Type,
    &PyOrImputer_model_Type,
    &PyOrImputer_random_Type,
    &PyOrIntFloatList_Type,
    &PyOrIntList_Type,
    &PyOrIntervalDiscretizer_Type,
    &PyOrItemsetNodeProxy_Type,
    &PyOrItemsetsSparseInducer_Type,
    &PyOrKernelFunc_Type,
    &PyOrLearner_Type,
    &PyOrLearnerFD_Type,
    &PyOrLinearClassifier_Type,
    &PyOrLinearLearner_Type,
    &PyOrLogRegClassifier_Type,
    &PyOrLogRegFitter_Type,
    &PyOrLogRegFitter_Cholesky_Type,
    &PyOrLogRegLearner_Type,
    &PyOrLongList_Type,
    &PyOrLookupLearner_Type,
    &PyOrMajorityLearner_Type,
    &PyOrMakeRandomIndices_Type,
    &PyOrMakeRandomIndices2_Type,
    &PyOrMakeRandomIndicesCV_Type,
    &PyOrMakeRandomIndicesMultiple_Type,
    &PyOrMakeRandomIndicesN_Type,
    &PyOrMapIntValue_Type,
    &PyOrMeasureAttribute_Type,
    &PyOrMeasureAttributeFromProbabilities_Type,
    &PyOrMeasureAttribute_IM_Type,
    &PyOrMeasureAttribute_MSE_Type,
    &PyOrMeasureAttribute_chiSquare_Type,
    &PyOrMeasureAttribute_cost_Type,
    &PyOrMeasureAttribute_gainRatio_Type,
    &PyOrMeasureAttribute_gainRatioA_Type,
    &PyOrMeasureAttribute_gini_Type,
    &PyOrMeasureAttribute_info_Type,
    &PyOrMeasureAttribute_logOddsRatio_Type,
    &PyOrMeasureAttribute_relevance_Type,
    &PyOrMeasureAttribute_relief_Type,
    &PyOrNormalizeContinuous_Type,
    &PyOrOrange_Type,
    &PyOrOrdinal2Continuous_Type,
    &PyOrP2NN_Type,
    &PyOrPearsonCorrelation_Type,
    &PyOrPreprocessor_Type,
    &PyOrPreprocessor_addCensorWeight_Type,
    &PyOrPreprocessor_addClassNoise_Type,
    &PyOrPreprocessor_addClassWeight_Type,
    &PyOrPreprocessor_addGaussianClassNoise_Type,
    &PyOrPreprocessor_addGaussianNoise_Type,
    &PyOrPreprocessor_addMissing_Type,
    &PyOrPreprocessor_addMissingClasses_Type,
    &PyOrPreprocessor_addNoise_Type,
    &PyOrPreprocessor_discretize_Type,
    &PyOrPreprocessor_drop_Type,
    &PyOrPreprocessor_dropMissing_Type,
    &PyOrPreprocessor_dropMissingClasses_Type,
    &PyOrPreprocessor_filter_Type,
    &PyOrPreprocessor_ignore_Type,
    &PyOrPreprocessor_imputeByLearner_Type,
    &PyOrPreprocessor_removeDuplicates_Type,
    &PyOrPreprocessor_select_Type,
    &PyOrPreprocessor_shuffle_Type,
    &PyOrPreprocessor_take_Type,
    &PyOrPreprocessor_takeMissing_Type,
    &PyOrPreprocessor_takeMissingClasses_Type,
    &PyOrProbabilityEstimator_Type,
    &PyOrProbabilityEstimatorConstructor_Type,
    &PyOrProbabilityEstimatorConstructor_Laplace_Type,
    &PyOrProbabilityEstimatorConstructor_kernel_Type,
    &PyOrProbabilityEstimatorConstructor_loess_Type,
    &PyOrProbabilityEstimatorConstructor_m_Type,
    &PyOrProbabilityEstimatorConstructor_relative_Type,
    &PyOrProbabilityEstimatorList_Type,
    &PyOrProbabilityEstimator_FromDistribution_Type,
    &PyOrProgressCallback_Type,
    &PyOrPythonValue_Type,
    &PyOrPythonValueSpecial_Type,
    &PyOrPythonVariable_Type,
    &PyOrRandomClassifier_Type,
    &PyOrRandomGenerator_Type,
    &PyOrRandomLearner_Type,
    &PyOrRemoveRedundant_Type,
    &PyOrRemoveRedundantByInduction_Type,
    &PyOrRemoveRedundantByQuality_Type,
    &PyOrRemoveRedundantOneValue_Type,
    &PyOrRemoveUnusedValues_Type,
    &PyOrRule_Type,
    &PyOrRuleBeamCandidateSelector_Type,
    &PyOrRuleBeamCandidateSelector_TakeAll_Type,
    &PyOrRuleBeamFilter_Type,
    &PyOrRuleBeamFilter_Width_Type,
    &PyOrRuleBeamFinder_Type,
    &PyOrRuleBeamInitializer_Type,
    &PyOrRuleBeamInitializer_Default_Type,
    &PyOrRuleBeamRefiner_Type,
    &PyOrRuleBeamRefiner_Selector_Type,
    &PyOrRuleClassifier_Type,
    &PyOrRuleClassifierConstructor_Type,
    &PyOrRuleClassifier_firstRule_Type,
    &PyOrRuleClassifier_logit_Type,
    &PyOrRuleCovererAndRemover_Type,
    &PyOrRuleCovererAndRemover_Default_Type,
    &PyOrRuleDataStoppingCriteria_Type,
    &PyOrRuleDataStoppingCriteria_NoPositives_Type,
    &PyOrRuleEvaluator_Type,
    &PyOrRuleEvaluator_Entropy_Type,
    &PyOrRuleEvaluator_LRS_Type,
    &PyOrRuleEvaluator_Laplace_Type,
    &PyOrRuleEvaluator_mEVC_Type,
    &PyOrRuleFinder_Type,
    &PyOrRuleLearner_Type,
    &PyOrRuleList_Type,
    &PyOrRuleStoppingCriteria_Type,
    &PyOrRuleStoppingCriteria_NegativeDistribution_Type,
    &PyOrRuleValidator_Type,
    &PyOrRuleValidator_LRS_Type,
    &PyOrSVMClassifier_Type,
    &PyOrSVMClassifierSparse_Type,
    &PyOrSVMLearner_Type,
    &PyOrSVMLearnerSparse_Type,
    &PyOrSimpleTreeClassifier_Type,
    &PyOrSimpleTreeLearner_Type,
    &PyOrSomeValue_Type,
    &PyOrStopDistributionClustering_Type,
    &PyOrStopDistributionClustering_binary_Type,
    &PyOrStopDistributionClustering_n_Type,
    &PyOrStopDistributionClustering_noBigChange_Type,
    &PyOrStopDistributionClustering_noProfit_Type,
    &PyOrStopIMClusteringByAssessor_Type,
    &PyOrStopIMClusteringByAssessor_binary_Type,
    &PyOrStopIMClusteringByAssessor_n_Type,
    &PyOrStopIMClusteringByAssessor_noBigChange_Type,
    &PyOrStopIMClusteringByAssessor_noProfit_Type,
    &PyOrStringList_Type,
    &PyOrStringValue_Type,
    &PyOrStringVariable_Type,
    &PyOrSubsetsGenerator_Type,
    &PyOrSubsetsGenerator_constSize_Type,
    &PyOrSubsetsGenerator_constSize_iterator_Type,
    &PyOrSubsetsGenerator_constant_Type,
    &PyOrSubsetsGenerator_constant_iterator_Type,
    &PyOrSubsetsGenerator_iterator_Type,
    &PyOrSubsetsGenerator_minMaxSize_Type,
    &PyOrSubsetsGenerator_minMaxSize_iterator_Type,
    &PyOrSubsetsGenerator_withRestrictions_Type,
    &PyOrSubsetsGenerator_withRestrictions_iterator_Type,
    &PyOrSymMatrix_Type,
    &PyOrTabDelimExampleGenerator_Type,
    &PyOrTableAverager_Type,
    &PyOrThresholdCA_Type,
    &PyOrThresholdDiscretizer_Type,
    &PyOrTransformValue_Type,
    &PyOrTransformValue_IsDefined_Type,
    &PyOrTreeClassifier_Type,
    &PyOrTreeDescender_Type,
    &PyOrTreeDescender_UnknownMergeAsBranchSizes_Type,
    &PyOrTreeDescender_UnknownMergeAsSelector_Type,
    &PyOrTreeDescender_UnknownToBranch_Type,
    &PyOrTreeDescender_UnknownToCommonBranch_Type,
    &PyOrTreeDescender_UnknownToCommonSelector_Type,
    &PyOrTreeExampleSplitter_Type,
    &PyOrTreeExampleSplitter_IgnoreUnknowns_Type,
    &PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Type,
    &PyOrTreeExampleSplitter_UnknownsAsSelector_Type,
    &PyOrTreeExampleSplitter_UnknownsToAll_Type,
    &PyOrTreeExampleSplitter_UnknownsToBranch_Type,
    &PyOrTreeExampleSplitter_UnknownsToCommon_Type,
    &PyOrTreeExampleSplitter_UnknownsToRandom_Type,
    &PyOrTreeLearner_Type,
    &PyOrTreeNode_Type,
    &PyOrTreeNodeList_Type,
    &PyOrTreePruner_Type,
    &PyOrTreePruner_SameMajority_Type,
    &PyOrTreePruner_m_Type,
    &PyOrTreeSplitConstructor_Type,
    &PyOrTreeSplitConstructor_Attribute_Type,
    &PyOrTreeSplitConstructor_Combined_Type,
    &PyOrTreeSplitConstructor_ExhaustiveBinary_Type,
    &PyOrTreeSplitConstructor_Measure_Type,
    &PyOrTreeSplitConstructor_OneAgainstOthers_Type,
    &PyOrTreeSplitConstructor_Threshold_Type,
    &PyOrTreeStopCriteria_Type,
    &PyOrTreeStopCriteria_Python_Type,
    &PyOrTreeStopCriteria_common_Type,
    &PyOrValue_Type,
    &PyOrValueFilter_Type,
    &PyOrValueFilterList_Type,
    &PyOrValueFilter_continuous_Type,
    &PyOrValueFilter_discrete_Type,
    &PyOrValueFilter_string_Type,
    &PyOrValueFilter_stringList_Type,
    &PyOrValueList_Type,
    &PyOrVarList_Type,
    &PyOrVarListList_Type,
    &PyOrVariable_Type,
    &PyOrVariableFilterMap_Type,
    &PyOrVariableFloatMap_Type,
    &PyOrkNNClassifier_Type,
    &PyOrkNNLearner_Type,
    NULL};


void C45TreeNode_addConstants();
void Classifier_addConstants();
void ConditionalProbabilityEstimatorConstructor_loess_addConstants();
void DomainContinuizer_addConstants();
void ExampleTable_addConstants();
void ExamplesDistance_DTW_addConstants();
void FeatureByDistributions_addConstants();
void FeatureByIM_addConstants();
void FeatureByMinComplexity_addConstants();
void Filter_values_addConstants();
void HierarchicalClustering_addConstants();
void LinearLearner_addConstants();
void LogRegFitter_addConstants();
void MakeRandomIndices_addConstants();
void MeasureAttribute_addConstants();
void Preprocessor_addCensorWeight_addConstants();
void ProbabilityEstimatorConstructor_loess_addConstants();
void SVMLearner_addConstants();
void SymMatrix_addConstants();
void Value_addConstants();
void ValueFilter_addConstants();
void Variable_addConstants();
extern PyTypeObject PySymMatrix_Shape_Type;
extern PyTypeObject PyValueFilter_Operator_Type;
extern PyTypeObject PyFilter_values_Operator_Type;
extern PyTypeObject PyC45TreeNode_NodeType_Type;
extern PyTypeObject PyLinearLearner_LIBLINEAR_VERSION_Type;
extern PyTypeObject PyLinearLearner_Lossfunction1_Type;
extern PyTypeObject PyLinearLearner_Lossfunction1_old__Type;
extern PyTypeObject PyFeatureByMinComplexity_Completion_Type;
extern PyTypeObject PyConditionalProbabilityEstimatorConstructor_loess_DistributionMethod_Type;
extern PyTypeObject PyFeatureByIM_Completion_Type;
extern PyTypeObject PyMakeRandomIndices_Stratification_Type;
extern PyTypeObject PyDomainContinuizer_MultinomialTreatment_Type;
extern PyTypeObject PyDomainContinuizer_ClassTreatment_Type;
extern PyTypeObject PyDomainContinuizer_ContinuousTreatment_Type;
extern PyTypeObject PySVMLearner_Kernel_Type;
extern PyTypeObject PySVMLearner_LIBSVM_VERSION_Type;
extern PyTypeObject PySVMLearner_SVMType_Type;
extern PyTypeObject PyExamplesDistance_DTW_DistanceType_Type;
extern PyTypeObject PyMeasureAttribute_Needs_Type;
extern PyTypeObject PyMeasureAttribute_UnknownsTreatment_Type;
extern PyTypeObject PyFeatureByDistributions_Completion_Type;
extern PyTypeObject PyHierarchicalClustering_Linkage_Type;
extern PyTypeObject PyVariable_Type_Type;
extern PyTypeObject PyVariable_MakeStatus_Type;
extern PyTypeObject PyProbabilityEstimatorConstructor_loess_DistributionMethod_Type;
extern PyTypeObject PyPreprocessor_addCensorWeight_Method_Type;
extern PyTypeObject PyLogRegFitter_ErrorCode_Type;

TNamedConstantRecord orangeNamedConstants[] = {
    {"SymMatrix_Shape", &PySymMatrix_Shape_Type},
    {"ValueFilter_Operator", &PyValueFilter_Operator_Type},
    {"Filter_values_Operator", &PyFilter_values_Operator_Type},
    {"C45TreeNode_NodeType", &PyC45TreeNode_NodeType_Type},
    {"LinearLearner_LIBLINEAR_VERSION", &PyLinearLearner_LIBLINEAR_VERSION_Type},
    {"LinearLearner_Lossfunction1", &PyLinearLearner_Lossfunction1_Type},
    {"LinearLearner_Lossfunction1_old_", &PyLinearLearner_Lossfunction1_old__Type},
    {"FeatureByMinComplexity_Completion", &PyFeatureByMinComplexity_Completion_Type},
    {"ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod", &PyConditionalProbabilityEstimatorConstructor_loess_DistributionMethod_Type},
    {"FeatureByIM_Completion", &PyFeatureByIM_Completion_Type},
    {"MakeRandomIndices_Stratification", &PyMakeRandomIndices_Stratification_Type},
    {"DomainContinuizer_MultinomialTreatment", &PyDomainContinuizer_MultinomialTreatment_Type},
    {"DomainContinuizer_ClassTreatment", &PyDomainContinuizer_ClassTreatment_Type},
    {"DomainContinuizer_ContinuousTreatment", &PyDomainContinuizer_ContinuousTreatment_Type},
    {"SVMLearner_Kernel", &PySVMLearner_Kernel_Type},
    {"SVMLearner_LIBSVM_VERSION", &PySVMLearner_LIBSVM_VERSION_Type},
    {"SVMLearner_SVMType", &PySVMLearner_SVMType_Type},
    {"ExamplesDistance_DTW_DistanceType", &PyExamplesDistance_DTW_DistanceType_Type},
    {"MeasureAttribute_Needs", &PyMeasureAttribute_Needs_Type},
    {"MeasureAttribute_UnknownsTreatment", &PyMeasureAttribute_UnknownsTreatment_Type},
    {"FeatureByDistributions_Completion", &PyFeatureByDistributions_Completion_Type},
    {"HierarchicalClustering_Linkage", &PyHierarchicalClustering_Linkage_Type},
    {"Variable_Type", &PyVariable_Type_Type},
    {"Variable_MakeStatus", &PyVariable_MakeStatus_Type},
    {"ProbabilityEstimatorConstructor_loess_DistributionMethod", &PyProbabilityEstimatorConstructor_loess_DistributionMethod_Type},
    {"Preprocessor_addCensorWeight_Method", &PyPreprocessor_addCensorWeight_Method_Type},
    {"LogRegFitter_ErrorCode", &PyLogRegFitter_ErrorCode_Type},
    {NULL, NULL}
};

PyObject *__pickleLoaderNamedConstants(PyObject *, PyObject *args)
{ return unpickleConstant(orangeNamedConstants, args); }


void addorangeConstants(PyObject *mod) {
     PyModule_AddObject(mod, "AttributeWarning", PyExc_OrangeAttributeWarning);
     PyModule_AddObject(mod, "CompatibilityWarning", PyExc_OrangeCompatibilityWarning);
     PyModule_AddObject(mod, "GetBoth", PyInt_FromLong((long)(2)));
     PyModule_AddObject(mod, "GetProbabilities", PyInt_FromLong((long)(1)));
     PyModule_AddObject(mod, "GetValue", PyInt_FromLong((long)(0)));
     PyModule_AddObject(mod, "Illegal_Float", PyFloat_FromDouble((double)(ILLEGAL_FLOAT)));
     PyModule_AddObject(mod, "KernelException", PyExc_OrangeKernel);
     PyModule_AddObject(mod, "KernelWarning", PyExc_OrangeKernelWarning);
     PyModule_AddObject(mod, "MeasureAttribute_retis", (PyObject *)&PyOrMeasureAttribute_MSE_Type);
     PyModule_AddObject(mod, "MeasureAttribute_splitGain", (PyObject *)&PyOrMeasureAttribute_gainRatio_Type);
     PyModule_AddObject(mod, "ValueTypes", ValueTypes());
     PyModule_AddObject(mod, "VarTypes", VarTypes());
     PyModule_AddObject(mod, "Warning", PyExc_OrangeWarning);
     PyModule_AddObject(mod, "globalRandom", stdRandomGenerator());
     PyModule_AddObject(mod, "version", orangeVersion);


     C45TreeNode_addConstants();
     Classifier_addConstants();
     ConditionalProbabilityEstimatorConstructor_loess_addConstants();
     DomainContinuizer_addConstants();
     ExampleTable_addConstants();
     ExamplesDistance_DTW_addConstants();
     FeatureByDistributions_addConstants();
     FeatureByIM_addConstants();
     FeatureByMinComplexity_addConstants();
     Filter_values_addConstants();
     HierarchicalClustering_addConstants();
     LinearLearner_addConstants();
     LogRegFitter_addConstants();
     MakeRandomIndices_addConstants();
     MeasureAttribute_addConstants();
     Preprocessor_addCensorWeight_addConstants();
     ProbabilityEstimatorConstructor_loess_addConstants();
     SVMLearner_addConstants();
     SymMatrix_addConstants();
     Value_addConstants();
     ValueFilter_addConstants();
     Variable_addConstants();


     PyModule_AddObject(mod, "AlignmentList", (PyObject *)&PyOrAlignmentList_Type);
     PyModule_AddObject(mod, "AssessIMQuality", (PyObject *)&PyOrAssessIMQuality_Type);
     PyModule_AddObject(mod, "AssociationClassifier", (PyObject *)&PyOrAssociationClassifier_Type);
     PyModule_AddObject(mod, "AssociationLearner", (PyObject *)&PyOrAssociationLearner_Type);
     PyModule_AddObject(mod, "AssociationRule", (PyObject *)&PyOrAssociationRule_Type);
     PyModule_AddObject(mod, "AssociationRules", (PyObject *)&PyOrAssociationRules_Type);
     PyModule_AddObject(mod, "AssociationRulesInducer", (PyObject *)&PyOrAssociationRulesInducer_Type);
     PyModule_AddObject(mod, "AssociationRulesSparseInducer", (PyObject *)&PyOrAssociationRulesSparseInducer_Type);
     PyModule_AddObject(mod, "AttributedBoolList", (PyObject *)&PyOrAttributedBoolList_Type);
     PyModule_AddObject(mod, "AttributedFloatList", (PyObject *)&PyOrAttributedFloatList_Type);
     PyModule_AddObject(mod, "BasicAttrStat", (PyObject *)&PyOrBasicAttrStat_Type);
     PyModule_AddObject(mod, "BasketExampleGenerator", (PyObject *)&PyOrBasketExampleGenerator_Type);
     PyModule_AddObject(mod, "BasketFeeder", (PyObject *)&PyOrBasketFeeder_Type);
     PyModule_AddObject(mod, "BayesClassifier", (PyObject *)&PyOrBayesClassifier_Type);
     PyModule_AddObject(mod, "BayesLearner", (PyObject *)&PyOrBayesLearner_Type);
     PyModule_AddObject(mod, "BiModalDiscretization", (PyObject *)&PyOrBiModalDiscretization_Type);
     PyModule_AddObject(mod, "BiModalDiscretizer", (PyObject *)&PyOrBiModalDiscretizer_Type);
     PyModule_AddObject(mod, "BoolList", (PyObject *)&PyOrBoolList_Type);
     PyModule_AddObject(mod, "C45Classifier", (PyObject *)&PyOrC45Classifier_Type);
     PyModule_AddObject(mod, "C45ExampleGenerator", (PyObject *)&PyOrC45ExampleGenerator_Type);
     PyModule_AddObject(mod, "C45Learner", (PyObject *)&PyOrC45Learner_Type);
     PyModule_AddObject(mod, "C45TreeNode", (PyObject *)&PyOrC45TreeNode_Type);
     PyModule_AddObject(mod, "C45TreeNodeList", (PyObject *)&PyOrC45TreeNodeList_Type);
     PyModule_AddObject(mod, "CartesianClassifier", (PyObject *)&PyOrCartesianClassifier_Type);
     PyModule_AddObject(mod, "Classifier", (PyObject *)&PyOrClassifier_Type);
     PyModule_AddObject(mod, "ClassifierByExampleTable", (PyObject *)&PyOrClassifierByExampleTable_Type);
     PyModule_AddObject(mod, "ClassifierByLookupTable", (PyObject *)&PyOrClassifierByLookupTable_Type);
     PyModule_AddObject(mod, "ClassifierByLookupTable1", (PyObject *)&PyOrClassifierByLookupTable1_Type);
     PyModule_AddObject(mod, "ClassifierByLookupTable2", (PyObject *)&PyOrClassifierByLookupTable2_Type);
     PyModule_AddObject(mod, "ClassifierByLookupTable3", (PyObject *)&PyOrClassifierByLookupTable3_Type);
     PyModule_AddObject(mod, "ClassifierFD", (PyObject *)&PyOrClassifierFD_Type);
     PyModule_AddObject(mod, "ClassifierFromVar", (PyObject *)&PyOrClassifierFromVar_Type);
     PyModule_AddObject(mod, "ClassifierFromVarFD", (PyObject *)&PyOrClassifierFromVarFD_Type);
     PyModule_AddObject(mod, "ClassifierList", (PyObject *)&PyOrClassifierList_Type);
     PyModule_AddObject(mod, "ClustersFromDistributions", (PyObject *)&PyOrClustersFromDistributions_Type);
     PyModule_AddObject(mod, "ClustersFromDistributionsByAssessor", (PyObject *)&PyOrClustersFromDistributionsByAssessor_Type);
     PyModule_AddObject(mod, "ClustersFromIM", (PyObject *)&PyOrClustersFromIM_Type);
     PyModule_AddObject(mod, "ClustersFromIMByAssessor", (PyObject *)&PyOrClustersFromIMByAssessor_Type);
     PyModule_AddObject(mod, "ColorIG", (PyObject *)&PyOrColorIG_Type);
     PyModule_AddObject(mod, "ColorIG_MCF", (PyObject *)&PyOrColorIG_MCF_Type);
     PyModule_AddObject(mod, "ColoredIG", (PyObject *)&PyOrColoredIG_Type);
     PyModule_AddObject(mod, "ColumnAssessor", (PyObject *)&PyOrColumnAssessor_Type);
     PyModule_AddObject(mod, "ColumnAssessor_Kramer", (PyObject *)&PyOrColumnAssessor_Kramer_Type);
     PyModule_AddObject(mod, "ColumnAssessor_Laplace", (PyObject *)&PyOrColumnAssessor_Laplace_Type);
     PyModule_AddObject(mod, "ColumnAssessor_Measure", (PyObject *)&PyOrColumnAssessor_Measure_Type);
     PyModule_AddObject(mod, "ColumnAssessor_N", (PyObject *)&PyOrColumnAssessor_N_Type);
     PyModule_AddObject(mod, "ColumnAssessor_Relief", (PyObject *)&PyOrColumnAssessor_Relief_Type);
     PyModule_AddObject(mod, "ColumnAssessor_m", (PyObject *)&PyOrColumnAssessor_m_Type);
     PyModule_AddObject(mod, "ColumnAssessor_mf", (PyObject *)&PyOrColumnAssessor_mf_Type);
     PyModule_AddObject(mod, "ComputeDomainContingency", (PyObject *)&PyOrComputeDomainContingency_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimator", (PyObject *)&PyOrConditionalProbabilityEstimator_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimatorConstructor", (PyObject *)&PyOrConditionalProbabilityEstimatorConstructor_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimatorConstructor_ByRows", (PyObject *)&PyOrConditionalProbabilityEstimatorConstructor_ByRows_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimatorConstructor_loess", (PyObject *)&PyOrConditionalProbabilityEstimatorConstructor_loess_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimatorList", (PyObject *)&PyOrConditionalProbabilityEstimatorList_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimator_ByRows", (PyObject *)&PyOrConditionalProbabilityEstimator_ByRows_Type);
     PyModule_AddObject(mod, "ConditionalProbabilityEstimator_FromDistribution", (PyObject *)&PyOrConditionalProbabilityEstimator_FromDistribution_Type);
     PyModule_AddObject(mod, "ContDistribution", (PyObject *)&PyOrContDistribution_Type);
     PyModule_AddObject(mod, "Contingency", (PyObject *)&PyOrContingency_Type);
     PyModule_AddObject(mod, "ContingencyAttrAttr", (PyObject *)&PyOrContingencyAttrAttr_Type);
     PyModule_AddObject(mod, "ContingencyAttrClass", (PyObject *)&PyOrContingencyAttrClass_Type);
     PyModule_AddObject(mod, "ContingencyClass", (PyObject *)&PyOrContingencyClass_Type);
     PyModule_AddObject(mod, "ContingencyClassAttr", (PyObject *)&PyOrContingencyClassAttr_Type);
     PyModule_AddObject(mod, "CostLearner", (PyObject *)&PyOrCostLearner_Type);
     PyModule_AddObject(mod, "CostMatrix", (PyObject *)&PyOrCostMatrix_Type);
     PyModule_AddObject(mod, "CostWrapperClassifier", (PyObject *)&PyOrCostWrapperClassifier_Type);
     PyModule_AddObject(mod, "CostWrapperLearner", (PyObject *)&PyOrCostWrapperLearner_Type);
     PyModule_AddObject(mod, "DefaultClassifier", (PyObject *)&PyOrDefaultClassifier_Type);
     PyModule_AddObject(mod, "DiscDistribution", (PyObject *)&PyOrDiscDistribution_Type);
     PyModule_AddObject(mod, "Discrete2Continuous", (PyObject *)&PyOrDiscrete2Continuous_Type);
     PyModule_AddObject(mod, "Discretization", (PyObject *)&PyOrDiscretization_Type);
     PyModule_AddObject(mod, "Discretizer", (PyObject *)&PyOrDiscretizer_Type);
     PyModule_AddObject(mod, "DistanceMap", (PyObject *)&PyOrDistanceMap_Type);
     PyModule_AddObject(mod, "DistanceMapConstructor", (PyObject *)&PyOrDistanceMapConstructor_Type);
     PyModule_AddObject(mod, "Distribution", (PyObject *)&PyOrDistribution_Type);
     PyModule_AddObject(mod, "DistributionAssessor", (PyObject *)&PyOrDistributionAssessor_Type);
     PyModule_AddObject(mod, "DistributionAssessor_Kramer", (PyObject *)&PyOrDistributionAssessor_Kramer_Type);
     PyModule_AddObject(mod, "DistributionAssessor_Laplace", (PyObject *)&PyOrDistributionAssessor_Laplace_Type);
     PyModule_AddObject(mod, "DistributionAssessor_Measure", (PyObject *)&PyOrDistributionAssessor_Measure_Type);
     PyModule_AddObject(mod, "DistributionAssessor_Relief", (PyObject *)&PyOrDistributionAssessor_Relief_Type);
     PyModule_AddObject(mod, "DistributionAssessor_m", (PyObject *)&PyOrDistributionAssessor_m_Type);
     PyModule_AddObject(mod, "DistributionAssessor_mf", (PyObject *)&PyOrDistributionAssessor_mf_Type);
     PyModule_AddObject(mod, "DistributionList", (PyObject *)&PyOrDistributionList_Type);
     PyModule_AddObject(mod, "Domain", (PyObject *)&PyOrDomain_Type);
     PyModule_AddObject(mod, "DomainBasicAttrStat", (PyObject *)&PyOrDomainBasicAttrStat_Type);
     PyModule_AddObject(mod, "DomainContingency", (PyObject *)&PyOrDomainContingency_Type);
     PyModule_AddObject(mod, "DomainContinuizer", (PyObject *)&PyOrDomainContinuizer_Type);
     PyModule_AddObject(mod, "DomainDepot", (PyObject *)&PyOrDomainDepot_Type);
     PyModule_AddObject(mod, "DomainDistributions", (PyObject *)&PyOrDomainDistributions_Type);
     PyModule_AddObject(mod, "DomainTransformerConstructor", (PyObject *)&PyOrDomainTransformerConstructor_Type);
     PyModule_AddObject(mod, "EFMDataDescription", (PyObject *)&PyOrEFMDataDescription_Type);
     PyModule_AddObject(mod, "EVDist", (PyObject *)&PyOrEVDist_Type);
     PyModule_AddObject(mod, "EVDistGetter", (PyObject *)&PyOrEVDistGetter_Type);
     PyModule_AddObject(mod, "EVDistGetter_Standard", (PyObject *)&PyOrEVDistGetter_Standard_Type);
     PyModule_AddObject(mod, "EVDistList", (PyObject *)&PyOrEVDistList_Type);
     PyModule_AddObject(mod, "EarthClassifier", (PyObject *)&PyOrEarthClassifier_Type);
     PyModule_AddObject(mod, "EarthLearner", (PyObject *)&PyOrEarthLearner_Type);
     PyModule_AddObject(mod, "EntropyDiscretization", (PyObject *)&PyOrEntropyDiscretization_Type);
     PyModule_AddObject(mod, "EnumVariable", (PyObject *)&PyOrEnumVariable_Type);
     PyModule_AddObject(mod, "EquiDistDiscretization", (PyObject *)&PyOrEquiDistDiscretization_Type);
     PyModule_AddObject(mod, "EquiDistDiscretizer", (PyObject *)&PyOrEquiDistDiscretizer_Type);
     PyModule_AddObject(mod, "EquiNDiscretization", (PyObject *)&PyOrEquiNDiscretization_Type);
     PyModule_AddObject(mod, "Example", (PyObject *)&PyOrExample_Type);
     PyModule_AddObject(mod, "ExampleCluster", (PyObject *)&PyOrExampleCluster_Type);
     PyModule_AddObject(mod, "ExampleClusters", (PyObject *)&PyOrExampleClusters_Type);
     PyModule_AddObject(mod, "ExampleDistBySorting", (PyObject *)&PyOrExampleDistBySorting_Type);
     PyModule_AddObject(mod, "ExampleDistConstructor", (PyObject *)&PyOrExampleDistConstructor_Type);
     PyModule_AddObject(mod, "ExampleDistVector", (PyObject *)&PyOrExampleDistVector_Type);
     PyModule_AddObject(mod, "ExampleGenerator", (PyObject *)&PyOrExampleGenerator_Type);
     PyModule_AddObject(mod, "ExampleGeneratorList", (PyObject *)&PyOrExampleGeneratorList_Type);
     PyModule_AddObject(mod, "ExampleTable", (PyObject *)&PyOrExampleTable_Type);
     PyModule_AddObject(mod, "ExamplesDistance", (PyObject *)&PyOrExamplesDistance_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor", (PyObject *)&PyOrExamplesDistanceConstructor_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_DTW", (PyObject *)&PyOrExamplesDistanceConstructor_DTW_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_Euclidean", (PyObject *)&PyOrExamplesDistanceConstructor_Euclidean_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_Hamming", (PyObject *)&PyOrExamplesDistanceConstructor_Hamming_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_Lp", (PyObject *)&PyOrExamplesDistanceConstructor_Lp_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_Manhattan", (PyObject *)&PyOrExamplesDistanceConstructor_Manhattan_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_Maximal", (PyObject *)&PyOrExamplesDistanceConstructor_Maximal_Type);
     PyModule_AddObject(mod, "ExamplesDistanceConstructor_Relief", (PyObject *)&PyOrExamplesDistanceConstructor_Relief_Type);
     PyModule_AddObject(mod, "ExamplesDistance_DTW", (PyObject *)&PyOrExamplesDistance_DTW_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Euclidean", (PyObject *)&PyOrExamplesDistance_Euclidean_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Hamming", (PyObject *)&PyOrExamplesDistance_Hamming_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Lp", (PyObject *)&PyOrExamplesDistance_Lp_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Manhattan", (PyObject *)&PyOrExamplesDistance_Manhattan_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Maximal", (PyObject *)&PyOrExamplesDistance_Maximal_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Normalized", (PyObject *)&PyOrExamplesDistance_Normalized_Type);
     PyModule_AddObject(mod, "ExamplesDistance_Relief", (PyObject *)&PyOrExamplesDistance_Relief_Type);
     PyModule_AddObject(mod, "FeatureByDistributions", (PyObject *)&PyOrFeatureByDistributions_Type);
     PyModule_AddObject(mod, "FeatureByIM", (PyObject *)&PyOrFeatureByIM_Type);
     PyModule_AddObject(mod, "FeatureByMinComplexity", (PyObject *)&PyOrFeatureByMinComplexity_Type);
     PyModule_AddObject(mod, "FeatureInducer", (PyObject *)&PyOrFeatureInducer_Type);
     PyModule_AddObject(mod, "FileExampleGenerator", (PyObject *)&PyOrFileExampleGenerator_Type);
     PyModule_AddObject(mod, "Filter", (PyObject *)&PyOrFilter_Type);
     PyModule_AddObject(mod, "FilterList", (PyObject *)&PyOrFilterList_Type);
     PyModule_AddObject(mod, "Filter_conjunction", (PyObject *)&PyOrFilter_conjunction_Type);
     PyModule_AddObject(mod, "Filter_disjunction", (PyObject *)&PyOrFilter_disjunction_Type);
     PyModule_AddObject(mod, "Filter_hasClassValue", (PyObject *)&PyOrFilter_hasClassValue_Type);
     PyModule_AddObject(mod, "Filter_hasMeta", (PyObject *)&PyOrFilter_hasMeta_Type);
     PyModule_AddObject(mod, "Filter_hasSpecial", (PyObject *)&PyOrFilter_hasSpecial_Type);
     PyModule_AddObject(mod, "Filter_isDefined", (PyObject *)&PyOrFilter_isDefined_Type);
     PyModule_AddObject(mod, "Filter_random", (PyObject *)&PyOrFilter_random_Type);
     PyModule_AddObject(mod, "Filter_sameValue", (PyObject *)&PyOrFilter_sameValue_Type);
     PyModule_AddObject(mod, "Filter_values", (PyObject *)&PyOrFilter_values_Type);
     PyModule_AddObject(mod, "FindNearest", (PyObject *)&PyOrFindNearest_Type);
     PyModule_AddObject(mod, "FindNearestConstructor", (PyObject *)&PyOrFindNearestConstructor_Type);
     PyModule_AddObject(mod, "FindNearestConstructor_BruteForce", (PyObject *)&PyOrFindNearestConstructor_BruteForce_Type);
     PyModule_AddObject(mod, "FindNearest_BruteForce", (PyObject *)&PyOrFindNearest_BruteForce_Type);
     PyModule_AddObject(mod, "FloatFloatList", (PyObject *)&PyOrFloatFloatList_Type);
     PyModule_AddObject(mod, "FloatList", (PyObject *)&PyOrFloatList_Type);
     PyModule_AddObject(mod, "FloatListList", (PyObject *)&PyOrFloatListList_Type);
     PyModule_AddObject(mod, "FloatVariable", (PyObject *)&PyOrFloatVariable_Type);
     PyModule_AddObject(mod, "GaussianDistribution", (PyObject *)&PyOrGaussianDistribution_Type);
     PyModule_AddObject(mod, "GeneralExampleClustering", (PyObject *)&PyOrGeneralExampleClustering_Type);
     PyModule_AddObject(mod, "Graph", (PyObject *)&PyOrGraph_Type);
     PyModule_AddObject(mod, "GraphAsList", (PyObject *)&PyOrGraphAsList_Type);
     PyModule_AddObject(mod, "GraphAsMatrix", (PyObject *)&PyOrGraphAsMatrix_Type);
     PyModule_AddObject(mod, "GraphAsTree", (PyObject *)&PyOrGraphAsTree_Type);
     PyModule_AddObject(mod, "HierarchicalCluster", (PyObject *)&PyOrHierarchicalCluster_Type);
     PyModule_AddObject(mod, "HierarchicalClusterList", (PyObject *)&PyOrHierarchicalClusterList_Type);
     PyModule_AddObject(mod, "HierarchicalClusterOrdering", (PyObject *)&PyOrHierarchicalClusterOrdering_Type);
     PyModule_AddObject(mod, "HierarchicalClustering", (PyObject *)&PyOrHierarchicalClustering_Type);
     PyModule_AddObject(mod, "IG", (PyObject *)&PyOrIG_Type);
     PyModule_AddObject(mod, "IGBySorting", (PyObject *)&PyOrIGBySorting_Type);
     PyModule_AddObject(mod, "IGConstructor", (PyObject *)&PyOrIGConstructor_Type);
     PyModule_AddObject(mod, "IM", (PyObject *)&PyOrIM_Type);
     PyModule_AddObject(mod, "IMBlurer", (PyObject *)&PyOrIMBlurer_Type);
     PyModule_AddObject(mod, "IMByIMByRows", (PyObject *)&PyOrIMByIMByRows_Type);
     PyModule_AddObject(mod, "IMByRelief", (PyObject *)&PyOrIMByRelief_Type);
     PyModule_AddObject(mod, "IMByRows", (PyObject *)&PyOrIMByRows_Type);
     PyModule_AddObject(mod, "IMByRowsByRelief", (PyObject *)&PyOrIMByRowsByRelief_Type);
     PyModule_AddObject(mod, "IMByRowsBySorting", (PyObject *)&PyOrIMByRowsBySorting_Type);
     PyModule_AddObject(mod, "IMByRowsConstructor", (PyObject *)&PyOrIMByRowsConstructor_Type);
     PyModule_AddObject(mod, "IMByRowsPreprocessor", (PyObject *)&PyOrIMByRowsPreprocessor_Type);
     PyModule_AddObject(mod, "IMBySorting", (PyObject *)&PyOrIMBySorting_Type);
     PyModule_AddObject(mod, "IMClustering", (PyObject *)&PyOrIMClustering_Type);
     PyModule_AddObject(mod, "IMConstructor", (PyObject *)&PyOrIMConstructor_Type);
     PyModule_AddObject(mod, "ImputeClassifier", (PyObject *)&PyOrImputeClassifier_Type);
     PyModule_AddObject(mod, "Imputer", (PyObject *)&PyOrImputer_Type);
     PyModule_AddObject(mod, "ImputerConstructor", (PyObject *)&PyOrImputerConstructor_Type);
     PyModule_AddObject(mod, "ImputerConstructor_asValue", (PyObject *)&PyOrImputerConstructor_asValue_Type);
     PyModule_AddObject(mod, "ImputerConstructor_average", (PyObject *)&PyOrImputerConstructor_average_Type);
     PyModule_AddObject(mod, "ImputerConstructor_maximal", (PyObject *)&PyOrImputerConstructor_maximal_Type);
     PyModule_AddObject(mod, "ImputerConstructor_minimal", (PyObject *)&PyOrImputerConstructor_minimal_Type);
     PyModule_AddObject(mod, "ImputerConstructor_model", (PyObject *)&PyOrImputerConstructor_model_Type);
     PyModule_AddObject(mod, "ImputerConstructor_random", (PyObject *)&PyOrImputerConstructor_random_Type);
     PyModule_AddObject(mod, "Imputer_asValue", (PyObject *)&PyOrImputer_asValue_Type);
     PyModule_AddObject(mod, "Imputer_defaults", (PyObject *)&PyOrImputer_defaults_Type);
     PyModule_AddObject(mod, "Imputer_model", (PyObject *)&PyOrImputer_model_Type);
     PyModule_AddObject(mod, "Imputer_random", (PyObject *)&PyOrImputer_random_Type);
     PyModule_AddObject(mod, "IntFloatList", (PyObject *)&PyOrIntFloatList_Type);
     PyModule_AddObject(mod, "IntList", (PyObject *)&PyOrIntList_Type);
     PyModule_AddObject(mod, "IntervalDiscretizer", (PyObject *)&PyOrIntervalDiscretizer_Type);
     PyModule_AddObject(mod, "ItemsetNodeProxy", (PyObject *)&PyOrItemsetNodeProxy_Type);
     PyModule_AddObject(mod, "ItemsetsSparseInducer", (PyObject *)&PyOrItemsetsSparseInducer_Type);
     PyModule_AddObject(mod, "KernelFunc", (PyObject *)&PyOrKernelFunc_Type);
     PyModule_AddObject(mod, "Learner", (PyObject *)&PyOrLearner_Type);
     PyModule_AddObject(mod, "LearnerFD", (PyObject *)&PyOrLearnerFD_Type);
     PyModule_AddObject(mod, "LinearClassifier", (PyObject *)&PyOrLinearClassifier_Type);
     PyModule_AddObject(mod, "LinearLearner", (PyObject *)&PyOrLinearLearner_Type);
     PyModule_AddObject(mod, "LogRegClassifier", (PyObject *)&PyOrLogRegClassifier_Type);
     PyModule_AddObject(mod, "LogRegFitter", (PyObject *)&PyOrLogRegFitter_Type);
     PyModule_AddObject(mod, "LogRegFitter_Cholesky", (PyObject *)&PyOrLogRegFitter_Cholesky_Type);
     PyModule_AddObject(mod, "LogRegLearner", (PyObject *)&PyOrLogRegLearner_Type);
     PyModule_AddObject(mod, "LongList", (PyObject *)&PyOrLongList_Type);
     PyModule_AddObject(mod, "LookupLearner", (PyObject *)&PyOrLookupLearner_Type);
     PyModule_AddObject(mod, "MajorityLearner", (PyObject *)&PyOrMajorityLearner_Type);
     PyModule_AddObject(mod, "MakeRandomIndices", (PyObject *)&PyOrMakeRandomIndices_Type);
     PyModule_AddObject(mod, "MakeRandomIndices2", (PyObject *)&PyOrMakeRandomIndices2_Type);
     PyModule_AddObject(mod, "MakeRandomIndicesCV", (PyObject *)&PyOrMakeRandomIndicesCV_Type);
     PyModule_AddObject(mod, "MakeRandomIndicesMultiple", (PyObject *)&PyOrMakeRandomIndicesMultiple_Type);
     PyModule_AddObject(mod, "MakeRandomIndicesN", (PyObject *)&PyOrMakeRandomIndicesN_Type);
     PyModule_AddObject(mod, "MapIntValue", (PyObject *)&PyOrMapIntValue_Type);
     PyModule_AddObject(mod, "MeasureAttribute", (PyObject *)&PyOrMeasureAttribute_Type);
     PyModule_AddObject(mod, "MeasureAttributeFromProbabilities", (PyObject *)&PyOrMeasureAttributeFromProbabilities_Type);
     PyModule_AddObject(mod, "MeasureAttribute_IM", (PyObject *)&PyOrMeasureAttribute_IM_Type);
     PyModule_AddObject(mod, "MeasureAttribute_MSE", (PyObject *)&PyOrMeasureAttribute_MSE_Type);
     PyModule_AddObject(mod, "MeasureAttribute_chiSquare", (PyObject *)&PyOrMeasureAttribute_chiSquare_Type);
     PyModule_AddObject(mod, "MeasureAttribute_cost", (PyObject *)&PyOrMeasureAttribute_cost_Type);
     PyModule_AddObject(mod, "MeasureAttribute_gainRatio", (PyObject *)&PyOrMeasureAttribute_gainRatio_Type);
     PyModule_AddObject(mod, "MeasureAttribute_gainRatioA", (PyObject *)&PyOrMeasureAttribute_gainRatioA_Type);
     PyModule_AddObject(mod, "MeasureAttribute_gini", (PyObject *)&PyOrMeasureAttribute_gini_Type);
     PyModule_AddObject(mod, "MeasureAttribute_info", (PyObject *)&PyOrMeasureAttribute_info_Type);
     PyModule_AddObject(mod, "MeasureAttribute_logOddsRatio", (PyObject *)&PyOrMeasureAttribute_logOddsRatio_Type);
     PyModule_AddObject(mod, "MeasureAttribute_relevance", (PyObject *)&PyOrMeasureAttribute_relevance_Type);
     PyModule_AddObject(mod, "MeasureAttribute_relief", (PyObject *)&PyOrMeasureAttribute_relief_Type);
     PyModule_AddObject(mod, "NormalizeContinuous", (PyObject *)&PyOrNormalizeContinuous_Type);
     PyModule_AddObject(mod, "OrangeBase", (PyObject *)&PyOrOrange_Type);
     PyModule_AddObject(mod, "Ordinal2Continuous", (PyObject *)&PyOrOrdinal2Continuous_Type);
     PyModule_AddObject(mod, "P2NN", (PyObject *)&PyOrP2NN_Type);
     PyModule_AddObject(mod, "PearsonCorrelation", (PyObject *)&PyOrPearsonCorrelation_Type);
     PyModule_AddObject(mod, "Preprocessor", (PyObject *)&PyOrPreprocessor_Type);
     PyModule_AddObject(mod, "Preprocessor_addCensorWeight", (PyObject *)&PyOrPreprocessor_addCensorWeight_Type);
     PyModule_AddObject(mod, "Preprocessor_addClassNoise", (PyObject *)&PyOrPreprocessor_addClassNoise_Type);
     PyModule_AddObject(mod, "Preprocessor_addClassWeight", (PyObject *)&PyOrPreprocessor_addClassWeight_Type);
     PyModule_AddObject(mod, "Preprocessor_addGaussianClassNoise", (PyObject *)&PyOrPreprocessor_addGaussianClassNoise_Type);
     PyModule_AddObject(mod, "Preprocessor_addGaussianNoise", (PyObject *)&PyOrPreprocessor_addGaussianNoise_Type);
     PyModule_AddObject(mod, "Preprocessor_addMissing", (PyObject *)&PyOrPreprocessor_addMissing_Type);
     PyModule_AddObject(mod, "Preprocessor_addMissingClasses", (PyObject *)&PyOrPreprocessor_addMissingClasses_Type);
     PyModule_AddObject(mod, "Preprocessor_addNoise", (PyObject *)&PyOrPreprocessor_addNoise_Type);
     PyModule_AddObject(mod, "Preprocessor_discretize", (PyObject *)&PyOrPreprocessor_discretize_Type);
     PyModule_AddObject(mod, "Preprocessor_drop", (PyObject *)&PyOrPreprocessor_drop_Type);
     PyModule_AddObject(mod, "Preprocessor_dropMissing", (PyObject *)&PyOrPreprocessor_dropMissing_Type);
     PyModule_AddObject(mod, "Preprocessor_dropMissingClasses", (PyObject *)&PyOrPreprocessor_dropMissingClasses_Type);
     PyModule_AddObject(mod, "Preprocessor_filter", (PyObject *)&PyOrPreprocessor_filter_Type);
     PyModule_AddObject(mod, "Preprocessor_ignore", (PyObject *)&PyOrPreprocessor_ignore_Type);
     PyModule_AddObject(mod, "Preprocessor_imputeByLearner", (PyObject *)&PyOrPreprocessor_imputeByLearner_Type);
     PyModule_AddObject(mod, "Preprocessor_removeDuplicates", (PyObject *)&PyOrPreprocessor_removeDuplicates_Type);
     PyModule_AddObject(mod, "Preprocessor_select", (PyObject *)&PyOrPreprocessor_select_Type);
     PyModule_AddObject(mod, "Preprocessor_shuffle", (PyObject *)&PyOrPreprocessor_shuffle_Type);
     PyModule_AddObject(mod, "Preprocessor_take", (PyObject *)&PyOrPreprocessor_take_Type);
     PyModule_AddObject(mod, "Preprocessor_takeMissing", (PyObject *)&PyOrPreprocessor_takeMissing_Type);
     PyModule_AddObject(mod, "Preprocessor_takeMissingClasses", (PyObject *)&PyOrPreprocessor_takeMissingClasses_Type);
     PyModule_AddObject(mod, "ProbabilityEstimator", (PyObject *)&PyOrProbabilityEstimator_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorConstructor", (PyObject *)&PyOrProbabilityEstimatorConstructor_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorConstructor_Laplace", (PyObject *)&PyOrProbabilityEstimatorConstructor_Laplace_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorConstructor_kernel", (PyObject *)&PyOrProbabilityEstimatorConstructor_kernel_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorConstructor_loess", (PyObject *)&PyOrProbabilityEstimatorConstructor_loess_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorConstructor_m", (PyObject *)&PyOrProbabilityEstimatorConstructor_m_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorConstructor_relative", (PyObject *)&PyOrProbabilityEstimatorConstructor_relative_Type);
     PyModule_AddObject(mod, "ProbabilityEstimatorList", (PyObject *)&PyOrProbabilityEstimatorList_Type);
     PyModule_AddObject(mod, "ProbabilityEstimator_FromDistribution", (PyObject *)&PyOrProbabilityEstimator_FromDistribution_Type);
     PyModule_AddObject(mod, "ProgressCallback", (PyObject *)&PyOrProgressCallback_Type);
     PyModule_AddObject(mod, "PythonValue", (PyObject *)&PyOrPythonValue_Type);
     PyModule_AddObject(mod, "PythonValueSpecial", (PyObject *)&PyOrPythonValueSpecial_Type);
     PyModule_AddObject(mod, "PythonVariable", (PyObject *)&PyOrPythonVariable_Type);
     PyModule_AddObject(mod, "RandomClassifier", (PyObject *)&PyOrRandomClassifier_Type);
     PyModule_AddObject(mod, "RandomGenerator", (PyObject *)&PyOrRandomGenerator_Type);
     PyModule_AddObject(mod, "RandomLearner", (PyObject *)&PyOrRandomLearner_Type);
     PyModule_AddObject(mod, "RemoveRedundant", (PyObject *)&PyOrRemoveRedundant_Type);
     PyModule_AddObject(mod, "RemoveRedundantByInduction", (PyObject *)&PyOrRemoveRedundantByInduction_Type);
     PyModule_AddObject(mod, "RemoveRedundantByQuality", (PyObject *)&PyOrRemoveRedundantByQuality_Type);
     PyModule_AddObject(mod, "RemoveRedundantOneValue", (PyObject *)&PyOrRemoveRedundantOneValue_Type);
     PyModule_AddObject(mod, "RemoveUnusedValues", (PyObject *)&PyOrRemoveUnusedValues_Type);
     PyModule_AddObject(mod, "Rule", (PyObject *)&PyOrRule_Type);
     PyModule_AddObject(mod, "RuleBeamCandidateSelector", (PyObject *)&PyOrRuleBeamCandidateSelector_Type);
     PyModule_AddObject(mod, "RuleBeamCandidateSelector_TakeAll", (PyObject *)&PyOrRuleBeamCandidateSelector_TakeAll_Type);
     PyModule_AddObject(mod, "RuleBeamFilter", (PyObject *)&PyOrRuleBeamFilter_Type);
     PyModule_AddObject(mod, "RuleBeamFilter_Width", (PyObject *)&PyOrRuleBeamFilter_Width_Type);
     PyModule_AddObject(mod, "RuleBeamFinder", (PyObject *)&PyOrRuleBeamFinder_Type);
     PyModule_AddObject(mod, "RuleBeamInitializer", (PyObject *)&PyOrRuleBeamInitializer_Type);
     PyModule_AddObject(mod, "RuleBeamInitializer_Default", (PyObject *)&PyOrRuleBeamInitializer_Default_Type);
     PyModule_AddObject(mod, "RuleBeamRefiner", (PyObject *)&PyOrRuleBeamRefiner_Type);
     PyModule_AddObject(mod, "RuleBeamRefiner_Selector", (PyObject *)&PyOrRuleBeamRefiner_Selector_Type);
     PyModule_AddObject(mod, "RuleClassifier", (PyObject *)&PyOrRuleClassifier_Type);
     PyModule_AddObject(mod, "RuleClassifierConstructor", (PyObject *)&PyOrRuleClassifierConstructor_Type);
     PyModule_AddObject(mod, "RuleClassifier_firstRule", (PyObject *)&PyOrRuleClassifier_firstRule_Type);
     PyModule_AddObject(mod, "RuleClassifier_logit", (PyObject *)&PyOrRuleClassifier_logit_Type);
     PyModule_AddObject(mod, "RuleCovererAndRemover", (PyObject *)&PyOrRuleCovererAndRemover_Type);
     PyModule_AddObject(mod, "RuleCovererAndRemover_Default", (PyObject *)&PyOrRuleCovererAndRemover_Default_Type);
     PyModule_AddObject(mod, "RuleDataStoppingCriteria", (PyObject *)&PyOrRuleDataStoppingCriteria_Type);
     PyModule_AddObject(mod, "RuleDataStoppingCriteria_NoPositives", (PyObject *)&PyOrRuleDataStoppingCriteria_NoPositives_Type);
     PyModule_AddObject(mod, "RuleEvaluator", (PyObject *)&PyOrRuleEvaluator_Type);
     PyModule_AddObject(mod, "RuleEvaluator_Entropy", (PyObject *)&PyOrRuleEvaluator_Entropy_Type);
     PyModule_AddObject(mod, "RuleEvaluator_LRS", (PyObject *)&PyOrRuleEvaluator_LRS_Type);
     PyModule_AddObject(mod, "RuleEvaluator_Laplace", (PyObject *)&PyOrRuleEvaluator_Laplace_Type);
     PyModule_AddObject(mod, "RuleEvaluator_mEVC", (PyObject *)&PyOrRuleEvaluator_mEVC_Type);
     PyModule_AddObject(mod, "RuleFinder", (PyObject *)&PyOrRuleFinder_Type);
     PyModule_AddObject(mod, "RuleLearner", (PyObject *)&PyOrRuleLearner_Type);
     PyModule_AddObject(mod, "RuleList", (PyObject *)&PyOrRuleList_Type);
     PyModule_AddObject(mod, "RuleStoppingCriteria", (PyObject *)&PyOrRuleStoppingCriteria_Type);
     PyModule_AddObject(mod, "RuleStoppingCriteria_NegativeDistribution", (PyObject *)&PyOrRuleStoppingCriteria_NegativeDistribution_Type);
     PyModule_AddObject(mod, "RuleValidator", (PyObject *)&PyOrRuleValidator_Type);
     PyModule_AddObject(mod, "RuleValidator_LRS", (PyObject *)&PyOrRuleValidator_LRS_Type);
     PyModule_AddObject(mod, "SVMClassifier", (PyObject *)&PyOrSVMClassifier_Type);
     PyModule_AddObject(mod, "SVMClassifierSparse", (PyObject *)&PyOrSVMClassifierSparse_Type);
     PyModule_AddObject(mod, "SVMLearner", (PyObject *)&PyOrSVMLearner_Type);
     PyModule_AddObject(mod, "SVMLearnerSparse", (PyObject *)&PyOrSVMLearnerSparse_Type);
     PyModule_AddObject(mod, "SimpleTreeClassifier", (PyObject *)&PyOrSimpleTreeClassifier_Type);
     PyModule_AddObject(mod, "SimpleTreeLearner", (PyObject *)&PyOrSimpleTreeLearner_Type);
     PyModule_AddObject(mod, "SomeValue", (PyObject *)&PyOrSomeValue_Type);
     PyModule_AddObject(mod, "StopDistributionClustering", (PyObject *)&PyOrStopDistributionClustering_Type);
     PyModule_AddObject(mod, "StopDistributionClustering_binary", (PyObject *)&PyOrStopDistributionClustering_binary_Type);
     PyModule_AddObject(mod, "StopDistributionClustering_n", (PyObject *)&PyOrStopDistributionClustering_n_Type);
     PyModule_AddObject(mod, "StopDistributionClustering_noBigChange", (PyObject *)&PyOrStopDistributionClustering_noBigChange_Type);
     PyModule_AddObject(mod, "StopDistributionClustering_noProfit", (PyObject *)&PyOrStopDistributionClustering_noProfit_Type);
     PyModule_AddObject(mod, "StopIMClusteringByAssessor", (PyObject *)&PyOrStopIMClusteringByAssessor_Type);
     PyModule_AddObject(mod, "StopIMClusteringByAssessor_binary", (PyObject *)&PyOrStopIMClusteringByAssessor_binary_Type);
     PyModule_AddObject(mod, "StopIMClusteringByAssessor_n", (PyObject *)&PyOrStopIMClusteringByAssessor_n_Type);
     PyModule_AddObject(mod, "StopIMClusteringByAssessor_noBigChange", (PyObject *)&PyOrStopIMClusteringByAssessor_noBigChange_Type);
     PyModule_AddObject(mod, "StopIMClusteringByAssessor_noProfit", (PyObject *)&PyOrStopIMClusteringByAssessor_noProfit_Type);
     PyModule_AddObject(mod, "StringList", (PyObject *)&PyOrStringList_Type);
     PyModule_AddObject(mod, "StringValue", (PyObject *)&PyOrStringValue_Type);
     PyModule_AddObject(mod, "StringVariable", (PyObject *)&PyOrStringVariable_Type);
     PyModule_AddObject(mod, "SubsetsGenerator", (PyObject *)&PyOrSubsetsGenerator_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_constSize", (PyObject *)&PyOrSubsetsGenerator_constSize_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_constSize_iterator", (PyObject *)&PyOrSubsetsGenerator_constSize_iterator_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_constant", (PyObject *)&PyOrSubsetsGenerator_constant_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_constant_iterator", (PyObject *)&PyOrSubsetsGenerator_constant_iterator_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_iterator", (PyObject *)&PyOrSubsetsGenerator_iterator_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_minMaxSize", (PyObject *)&PyOrSubsetsGenerator_minMaxSize_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_minMaxSize_iterator", (PyObject *)&PyOrSubsetsGenerator_minMaxSize_iterator_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_withRestrictions", (PyObject *)&PyOrSubsetsGenerator_withRestrictions_Type);
     PyModule_AddObject(mod, "SubsetsGenerator_withRestrictions_iterator", (PyObject *)&PyOrSubsetsGenerator_withRestrictions_iterator_Type);
     PyModule_AddObject(mod, "SymMatrix", (PyObject *)&PyOrSymMatrix_Type);
     PyModule_AddObject(mod, "TabDelimExampleGenerator", (PyObject *)&PyOrTabDelimExampleGenerator_Type);
     PyModule_AddObject(mod, "TableAverager", (PyObject *)&PyOrTableAverager_Type);
     PyModule_AddObject(mod, "ThresholdCA", (PyObject *)&PyOrThresholdCA_Type);
     PyModule_AddObject(mod, "ThresholdDiscretizer", (PyObject *)&PyOrThresholdDiscretizer_Type);
     PyModule_AddObject(mod, "TransformValue", (PyObject *)&PyOrTransformValue_Type);
     PyModule_AddObject(mod, "TransformValue_IsDefined", (PyObject *)&PyOrTransformValue_IsDefined_Type);
     PyModule_AddObject(mod, "TreeClassifier", (PyObject *)&PyOrTreeClassifier_Type);
     PyModule_AddObject(mod, "TreeDescender", (PyObject *)&PyOrTreeDescender_Type);
     PyModule_AddObject(mod, "TreeDescender_UnknownMergeAsBranchSizes", (PyObject *)&PyOrTreeDescender_UnknownMergeAsBranchSizes_Type);
     PyModule_AddObject(mod, "TreeDescender_UnknownMergeAsSelector", (PyObject *)&PyOrTreeDescender_UnknownMergeAsSelector_Type);
     PyModule_AddObject(mod, "TreeDescender_UnknownToBranch", (PyObject *)&PyOrTreeDescender_UnknownToBranch_Type);
     PyModule_AddObject(mod, "TreeDescender_UnknownToCommonBranch", (PyObject *)&PyOrTreeDescender_UnknownToCommonBranch_Type);
     PyModule_AddObject(mod, "TreeDescender_UnknownToCommonSelector", (PyObject *)&PyOrTreeDescender_UnknownToCommonSelector_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter", (PyObject *)&PyOrTreeExampleSplitter_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_IgnoreUnknowns", (PyObject *)&PyOrTreeExampleSplitter_IgnoreUnknowns_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_UnknownsAsBranchSizes", (PyObject *)&PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_UnknownsAsSelector", (PyObject *)&PyOrTreeExampleSplitter_UnknownsAsSelector_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_UnknownsToAll", (PyObject *)&PyOrTreeExampleSplitter_UnknownsToAll_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_UnknownsToBranch", (PyObject *)&PyOrTreeExampleSplitter_UnknownsToBranch_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_UnknownsToCommon", (PyObject *)&PyOrTreeExampleSplitter_UnknownsToCommon_Type);
     PyModule_AddObject(mod, "TreeExampleSplitter_UnknownsToRandom", (PyObject *)&PyOrTreeExampleSplitter_UnknownsToRandom_Type);
     PyModule_AddObject(mod, "TreeLearner", (PyObject *)&PyOrTreeLearner_Type);
     PyModule_AddObject(mod, "TreeNode", (PyObject *)&PyOrTreeNode_Type);
     PyModule_AddObject(mod, "TreeNodeList", (PyObject *)&PyOrTreeNodeList_Type);
     PyModule_AddObject(mod, "TreePruner", (PyObject *)&PyOrTreePruner_Type);
     PyModule_AddObject(mod, "TreePruner_SameMajority", (PyObject *)&PyOrTreePruner_SameMajority_Type);
     PyModule_AddObject(mod, "TreePruner_m", (PyObject *)&PyOrTreePruner_m_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor", (PyObject *)&PyOrTreeSplitConstructor_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor_Attribute", (PyObject *)&PyOrTreeSplitConstructor_Attribute_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor_Combined", (PyObject *)&PyOrTreeSplitConstructor_Combined_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor_ExhaustiveBinary", (PyObject *)&PyOrTreeSplitConstructor_ExhaustiveBinary_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor_Measure", (PyObject *)&PyOrTreeSplitConstructor_Measure_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor_OneAgainstOthers", (PyObject *)&PyOrTreeSplitConstructor_OneAgainstOthers_Type);
     PyModule_AddObject(mod, "TreeSplitConstructor_Threshold", (PyObject *)&PyOrTreeSplitConstructor_Threshold_Type);
     PyModule_AddObject(mod, "TreeStopCriteria", (PyObject *)&PyOrTreeStopCriteria_Type);
     PyModule_AddObject(mod, "TreeStopCriteria_Python", (PyObject *)&PyOrTreeStopCriteria_Python_Type);
     PyModule_AddObject(mod, "TreeStopCriteria_common", (PyObject *)&PyOrTreeStopCriteria_common_Type);
     PyModule_AddObject(mod, "Value", (PyObject *)&PyOrValue_Type);
     PyModule_AddObject(mod, "ValueFilter", (PyObject *)&PyOrValueFilter_Type);
     PyModule_AddObject(mod, "ValueFilterList", (PyObject *)&PyOrValueFilterList_Type);
     PyModule_AddObject(mod, "ValueFilter_continuous", (PyObject *)&PyOrValueFilter_continuous_Type);
     PyModule_AddObject(mod, "ValueFilter_discrete", (PyObject *)&PyOrValueFilter_discrete_Type);
     PyModule_AddObject(mod, "ValueFilter_string", (PyObject *)&PyOrValueFilter_string_Type);
     PyModule_AddObject(mod, "ValueFilter_stringList", (PyObject *)&PyOrValueFilter_stringList_Type);
     PyModule_AddObject(mod, "ValueList", (PyObject *)&PyOrValueList_Type);
     PyModule_AddObject(mod, "VarList", (PyObject *)&PyOrVarList_Type);
     PyModule_AddObject(mod, "VarListList", (PyObject *)&PyOrVarListList_Type);
     PyModule_AddObject(mod, "Variable", (PyObject *)&PyOrVariable_Type);
     PyModule_AddObject(mod, "VariableFilterMap", (PyObject *)&PyOrVariableFilterMap_Type);
     PyModule_AddObject(mod, "VariableFloatMap", (PyObject *)&PyOrVariableFloatMap_Type);
     PyModule_AddObject(mod, "kNNClassifier", (PyObject *)&PyOrkNNClassifier_Type);
     PyModule_AddObject(mod, "kNNLearner", (PyObject *)&PyOrkNNLearner_Type);

     PyType_Ready(&PySymMatrix_Shape_Type);
     PySymMatrix_Shape_Type.tp_print = 0;

     PyType_Ready(&PyValueFilter_Operator_Type);
     PyValueFilter_Operator_Type.tp_print = 0;

     PyType_Ready(&PyFilter_values_Operator_Type);
     PyFilter_values_Operator_Type.tp_print = 0;

     PyType_Ready(&PyC45TreeNode_NodeType_Type);
     PyC45TreeNode_NodeType_Type.tp_print = 0;

     PyType_Ready(&PyLinearLearner_LIBLINEAR_VERSION_Type);
     PyLinearLearner_LIBLINEAR_VERSION_Type.tp_print = 0;

     PyType_Ready(&PyLinearLearner_Lossfunction1_Type);
     PyLinearLearner_Lossfunction1_Type.tp_print = 0;

     PyType_Ready(&PyLinearLearner_Lossfunction1_old__Type);
     PyLinearLearner_Lossfunction1_old__Type.tp_print = 0;

     PyType_Ready(&PyFeatureByMinComplexity_Completion_Type);
     PyFeatureByMinComplexity_Completion_Type.tp_print = 0;

     PyType_Ready(&PyConditionalProbabilityEstimatorConstructor_loess_DistributionMethod_Type);
     PyConditionalProbabilityEstimatorConstructor_loess_DistributionMethod_Type.tp_print = 0;

     PyType_Ready(&PyFeatureByIM_Completion_Type);
     PyFeatureByIM_Completion_Type.tp_print = 0;

     PyType_Ready(&PyMakeRandomIndices_Stratification_Type);
     PyMakeRandomIndices_Stratification_Type.tp_print = 0;

     PyType_Ready(&PyDomainContinuizer_MultinomialTreatment_Type);
     PyDomainContinuizer_MultinomialTreatment_Type.tp_print = 0;

     PyType_Ready(&PyDomainContinuizer_ClassTreatment_Type);
     PyDomainContinuizer_ClassTreatment_Type.tp_print = 0;

     PyType_Ready(&PyDomainContinuizer_ContinuousTreatment_Type);
     PyDomainContinuizer_ContinuousTreatment_Type.tp_print = 0;

     PyType_Ready(&PySVMLearner_Kernel_Type);
     PySVMLearner_Kernel_Type.tp_print = 0;

     PyType_Ready(&PySVMLearner_LIBSVM_VERSION_Type);
     PySVMLearner_LIBSVM_VERSION_Type.tp_print = 0;

     PyType_Ready(&PySVMLearner_SVMType_Type);
     PySVMLearner_SVMType_Type.tp_print = 0;

     PyType_Ready(&PyExamplesDistance_DTW_DistanceType_Type);
     PyExamplesDistance_DTW_DistanceType_Type.tp_print = 0;

     PyType_Ready(&PyMeasureAttribute_Needs_Type);
     PyMeasureAttribute_Needs_Type.tp_print = 0;

     PyType_Ready(&PyMeasureAttribute_UnknownsTreatment_Type);
     PyMeasureAttribute_UnknownsTreatment_Type.tp_print = 0;

     PyType_Ready(&PyFeatureByDistributions_Completion_Type);
     PyFeatureByDistributions_Completion_Type.tp_print = 0;

     PyType_Ready(&PyHierarchicalClustering_Linkage_Type);
     PyHierarchicalClustering_Linkage_Type.tp_print = 0;

     PyType_Ready(&PyVariable_Type_Type);
     PyVariable_Type_Type.tp_print = 0;

     PyType_Ready(&PyVariable_MakeStatus_Type);
     PyVariable_MakeStatus_Type.tp_print = 0;

     PyType_Ready(&PyProbabilityEstimatorConstructor_loess_DistributionMethod_Type);
     PyProbabilityEstimatorConstructor_loess_DistributionMethod_Type.tp_print = 0;

     PyType_Ready(&PyPreprocessor_addCensorWeight_Method_Type);
     PyPreprocessor_addCensorWeight_Method_Type.tp_print = 0;

     PyType_Ready(&PyLogRegFitter_ErrorCode_Type);
     PyLogRegFitter_ErrorCode_Type.tp_print = 0;
}


#ifdef _MSC_VER
  #define WIN32_LEAN_AND_MEAN
  #include <windows.h>
  BOOL APIENTRY DllMain( HANDLE, DWORD  ul_reason_for_call, LPVOID)  { return TRUE; }
#endif

extern ORANGE_API PyObject *orangeModule;

ORANGE_API void addClassList(TOrangeType **);

extern "C" ORANGE_API void initorange()
{ 
  if (!initorangeExceptions())
    return;

  for(TOrangeType **type=orangeClasses; *type; type++)
    if (PyType_Ready((PyTypeObject *)*type)<0)
      return;
  addClassList(orangeClasses);

  gcorangeUnsafeStaticInitialization();
  orangeModule = Py_InitModule("orange", orangeFunctions);  
  addorangeConstants(orangeModule);
}
