/* This file was generated by pyxtract 
   Do not edit.*/

#ifdef _MSC_VER
  #define IMPORT_DLL __declspec(dllimport)
#else
  #define IMPORT_DLL
#endif

extern ORANGE_API TOrangeType PyOrAlignmentList_Type;
#define PyOrAlignmentList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAlignmentList_Type)
#define PyOrange_AsAlignmentList(op) (*(GCPtr< TAlignmentList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssessIMQuality_Type;
#define PyOrAssessIMQuality_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssessIMQuality_Type)
#define PyOrange_AsAssessIMQuality(op) (*(GCPtr< TAssessIMQuality > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssociationClassifier_Type;
#define PyOrAssociationClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssociationClassifier_Type)
#define PyOrange_AsAssociationClassifier(op) (*(GCPtr< TAssociationClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssociationLearner_Type;
#define PyOrAssociationLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssociationLearner_Type)
#define PyOrange_AsAssociationLearner(op) (*(GCPtr< TAssociationLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssociationRule_Type;
#define PyOrAssociationRule_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssociationRule_Type)
#define PyOrange_AsAssociationRule(op) (*(GCPtr< TAssociationRule > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssociationRules_Type;
#define PyOrAssociationRules_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssociationRules_Type)
#define PyOrange_AsAssociationRules(op) (*(GCPtr< TAssociationRules > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssociationRulesInducer_Type;
#define PyOrAssociationRulesInducer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssociationRulesInducer_Type)
#define PyOrange_AsAssociationRulesInducer(op) (*(GCPtr< TAssociationRulesInducer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAssociationRulesSparseInducer_Type;
#define PyOrAssociationRulesSparseInducer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAssociationRulesSparseInducer_Type)
#define PyOrange_AsAssociationRulesSparseInducer(op) (*(GCPtr< TAssociationRulesSparseInducer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAttributedBoolList_Type;
#define PyOrAttributedBoolList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAttributedBoolList_Type)
#define PyOrange_AsAttributedBoolList(op) (*(GCPtr< TAttributedBoolList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrAttributedFloatList_Type;
#define PyOrAttributedFloatList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrAttributedFloatList_Type)
#define PyOrange_AsAttributedFloatList(op) (*(GCPtr< TAttributedFloatList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBasicAttrStat_Type;
#define PyOrBasicAttrStat_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBasicAttrStat_Type)
#define PyOrange_AsBasicAttrStat(op) (*(GCPtr< TBasicAttrStat > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBasketExampleGenerator_Type;
#define PyOrBasketExampleGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBasketExampleGenerator_Type)
#define PyOrange_AsBasketExampleGenerator(op) (*(GCPtr< TBasketExampleGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBasketFeeder_Type;
#define PyOrBasketFeeder_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBasketFeeder_Type)
#define PyOrange_AsBasketFeeder(op) (*(GCPtr< TBasketFeeder > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBayesClassifier_Type;
#define PyOrBayesClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBayesClassifier_Type)
#define PyOrange_AsBayesClassifier(op) (*(GCPtr< TBayesClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBayesLearner_Type;
#define PyOrBayesLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBayesLearner_Type)
#define PyOrange_AsBayesLearner(op) (*(GCPtr< TBayesLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBiModalDiscretization_Type;
#define PyOrBiModalDiscretization_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBiModalDiscretization_Type)
#define PyOrange_AsBiModalDiscretization(op) (*(GCPtr< TBiModalDiscretization > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBiModalDiscretizer_Type;
#define PyOrBiModalDiscretizer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBiModalDiscretizer_Type)
#define PyOrange_AsBiModalDiscretizer(op) (*(GCPtr< TBiModalDiscretizer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrBoolList_Type;
#define PyOrBoolList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrBoolList_Type)
#define PyOrange_AsBoolList(op) (*(GCPtr< TBoolList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrC45Classifier_Type;
#define PyOrC45Classifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrC45Classifier_Type)
#define PyOrange_AsC45Classifier(op) (*(GCPtr< TC45Classifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrC45ExampleGenerator_Type;
#define PyOrC45ExampleGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrC45ExampleGenerator_Type)
#define PyOrange_AsC45ExampleGenerator(op) (*(GCPtr< TC45ExampleGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrC45Learner_Type;
#define PyOrC45Learner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrC45Learner_Type)
#define PyOrange_AsC45Learner(op) (*(GCPtr< TC45Learner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrC45TreeNode_Type;
#define PyOrC45TreeNode_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrC45TreeNode_Type)
#define PyOrange_AsC45TreeNode(op) (*(GCPtr< TC45TreeNode > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrC45TreeNodeList_Type;
#define PyOrC45TreeNodeList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrC45TreeNodeList_Type)
#define PyOrange_AsC45TreeNodeList(op) (*(GCPtr< TC45TreeNodeList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrCartesianClassifier_Type;
#define PyOrCartesianClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrCartesianClassifier_Type)
#define PyOrange_AsCartesianClassifier(op) (*(GCPtr< TCartesianClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifier_Type;
#define PyOrClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifier_Type)
#define PyOrange_AsClassifier(op) (*(GCPtr< TClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierByExampleTable_Type;
#define PyOrClassifierByExampleTable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierByExampleTable_Type)
#define PyOrange_AsClassifierByExampleTable(op) (*(GCPtr< TClassifierByExampleTable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierByLookupTable_Type;
#define PyOrClassifierByLookupTable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierByLookupTable_Type)
#define PyOrange_AsClassifierByLookupTable(op) (*(GCPtr< TClassifierByLookupTable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierByLookupTable1_Type;
#define PyOrClassifierByLookupTable1_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierByLookupTable1_Type)
#define PyOrange_AsClassifierByLookupTable1(op) (*(GCPtr< TClassifierByLookupTable1 > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierByLookupTable2_Type;
#define PyOrClassifierByLookupTable2_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierByLookupTable2_Type)
#define PyOrange_AsClassifierByLookupTable2(op) (*(GCPtr< TClassifierByLookupTable2 > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierByLookupTable3_Type;
#define PyOrClassifierByLookupTable3_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierByLookupTable3_Type)
#define PyOrange_AsClassifierByLookupTable3(op) (*(GCPtr< TClassifierByLookupTable3 > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierFD_Type;
#define PyOrClassifierFD_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierFD_Type)
#define PyOrange_AsClassifierFD(op) (*(GCPtr< TClassifierFD > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierFromVar_Type;
#define PyOrClassifierFromVar_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierFromVar_Type)
#define PyOrange_AsClassifierFromVar(op) (*(GCPtr< TClassifierFromVar > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierFromVarFD_Type;
#define PyOrClassifierFromVarFD_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierFromVarFD_Type)
#define PyOrange_AsClassifierFromVarFD(op) (*(GCPtr< TClassifierFromVarFD > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClassifierList_Type;
#define PyOrClassifierList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClassifierList_Type)
#define PyOrange_AsClassifierList(op) (*(GCPtr< TClassifierList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClustersFromDistributions_Type;
#define PyOrClustersFromDistributions_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClustersFromDistributions_Type)
#define PyOrange_AsClustersFromDistributions(op) (*(GCPtr< TClustersFromDistributions > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClustersFromDistributionsByAssessor_Type;
#define PyOrClustersFromDistributionsByAssessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClustersFromDistributionsByAssessor_Type)
#define PyOrange_AsClustersFromDistributionsByAssessor(op) (*(GCPtr< TClustersFromDistributionsByAssessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClustersFromIM_Type;
#define PyOrClustersFromIM_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClustersFromIM_Type)
#define PyOrange_AsClustersFromIM(op) (*(GCPtr< TClustersFromIM > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrClustersFromIMByAssessor_Type;
#define PyOrClustersFromIMByAssessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrClustersFromIMByAssessor_Type)
#define PyOrange_AsClustersFromIMByAssessor(op) (*(GCPtr< TClustersFromIMByAssessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColorIG_Type;
#define PyOrColorIG_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColorIG_Type)
#define PyOrange_AsColorIG(op) (*(GCPtr< TColorIG > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColorIG_MCF_Type;
#define PyOrColorIG_MCF_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColorIG_MCF_Type)
#define PyOrange_AsColorIG_MCF(op) (*(GCPtr< TColorIG_MCF > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColoredIG_Type;
#define PyOrColoredIG_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColoredIG_Type)
#define PyOrange_AsColoredIG(op) (*(GCPtr< TColoredIG > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_Type;
#define PyOrColumnAssessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_Type)
#define PyOrange_AsColumnAssessor(op) (*(GCPtr< TColumnAssessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_Kramer_Type;
#define PyOrColumnAssessor_Kramer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_Kramer_Type)
#define PyOrange_AsColumnAssessor_Kramer(op) (*(GCPtr< TColumnAssessor_Kramer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_Laplace_Type;
#define PyOrColumnAssessor_Laplace_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_Laplace_Type)
#define PyOrange_AsColumnAssessor_Laplace(op) (*(GCPtr< TColumnAssessor_Laplace > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_Measure_Type;
#define PyOrColumnAssessor_Measure_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_Measure_Type)
#define PyOrange_AsColumnAssessor_Measure(op) (*(GCPtr< TColumnAssessor_Measure > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_N_Type;
#define PyOrColumnAssessor_N_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_N_Type)
#define PyOrange_AsColumnAssessor_N(op) (*(GCPtr< TColumnAssessor_N > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_Relief_Type;
#define PyOrColumnAssessor_Relief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_Relief_Type)
#define PyOrange_AsColumnAssessor_Relief(op) (*(GCPtr< TColumnAssessor_Relief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_m_Type;
#define PyOrColumnAssessor_m_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_m_Type)
#define PyOrange_AsColumnAssessor_m(op) (*(GCPtr< TColumnAssessor_m > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrColumnAssessor_mf_Type;
#define PyOrColumnAssessor_mf_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrColumnAssessor_mf_Type)
#define PyOrange_AsColumnAssessor_mf(op) (*(GCPtr< TColumnAssessor_mf > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrComputeDomainContingency_Type;
#define PyOrComputeDomainContingency_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrComputeDomainContingency_Type)
#define PyOrange_AsComputeDomainContingency(op) (*(GCPtr< TComputeDomainContingency > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimator_Type;
#define PyOrConditionalProbabilityEstimator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimator_Type)
#define PyOrange_AsConditionalProbabilityEstimator(op) (*(GCPtr< TConditionalProbabilityEstimator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimatorConstructor_Type;
#define PyOrConditionalProbabilityEstimatorConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimatorConstructor_Type)
#define PyOrange_AsConditionalProbabilityEstimatorConstructor(op) (*(GCPtr< TConditionalProbabilityEstimatorConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimatorConstructor_ByRows_Type;
#define PyOrConditionalProbabilityEstimatorConstructor_ByRows_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimatorConstructor_ByRows_Type)
#define PyOrange_AsConditionalProbabilityEstimatorConstructor_ByRows(op) (*(GCPtr< TConditionalProbabilityEstimatorConstructor_ByRows > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimatorConstructor_loess_Type;
#define PyOrConditionalProbabilityEstimatorConstructor_loess_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimatorConstructor_loess_Type)
#define PyOrange_AsConditionalProbabilityEstimatorConstructor_loess(op) (*(GCPtr< TConditionalProbabilityEstimatorConstructor_loess > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimatorList_Type;
#define PyOrConditionalProbabilityEstimatorList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimatorList_Type)
#define PyOrange_AsConditionalProbabilityEstimatorList(op) (*(GCPtr< TConditionalProbabilityEstimatorList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimator_ByRows_Type;
#define PyOrConditionalProbabilityEstimator_ByRows_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimator_ByRows_Type)
#define PyOrange_AsConditionalProbabilityEstimator_ByRows(op) (*(GCPtr< TConditionalProbabilityEstimator_ByRows > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrConditionalProbabilityEstimator_FromDistribution_Type;
#define PyOrConditionalProbabilityEstimator_FromDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrConditionalProbabilityEstimator_FromDistribution_Type)
#define PyOrange_AsConditionalProbabilityEstimator_FromDistribution(op) (*(GCPtr< TConditionalProbabilityEstimator_FromDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrContDistribution_Type;
#define PyOrContDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrContDistribution_Type)
#define PyOrange_AsContDistribution(op) (*(GCPtr< TContDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrContingency_Type;
#define PyOrContingency_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrContingency_Type)
#define PyOrange_AsContingency(op) (*(GCPtr< TContingency > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrContingencyAttrAttr_Type;
#define PyOrContingencyAttrAttr_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrContingencyAttrAttr_Type)
#define PyOrange_AsContingencyAttrAttr(op) (*(GCPtr< TContingencyAttrAttr > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrContingencyAttrClass_Type;
#define PyOrContingencyAttrClass_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrContingencyAttrClass_Type)
#define PyOrange_AsContingencyAttrClass(op) (*(GCPtr< TContingencyAttrClass > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrContingencyClass_Type;
#define PyOrContingencyClass_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrContingencyClass_Type)
#define PyOrange_AsContingencyClass(op) (*(GCPtr< TContingencyClass > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrContingencyClassAttr_Type;
#define PyOrContingencyClassAttr_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrContingencyClassAttr_Type)
#define PyOrange_AsContingencyClassAttr(op) (*(GCPtr< TContingencyClassAttr > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrCostLearner_Type;
#define PyOrCostLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrCostLearner_Type)
#define PyOrange_AsCostLearner(op) (*(GCPtr< TCostLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrCostMatrix_Type;
#define PyOrCostMatrix_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrCostMatrix_Type)
#define PyOrange_AsCostMatrix(op) (*(GCPtr< TCostMatrix > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrCostWrapperClassifier_Type;
#define PyOrCostWrapperClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrCostWrapperClassifier_Type)
#define PyOrange_AsCostWrapperClassifier(op) (*(GCPtr< TCostWrapperClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrCostWrapperLearner_Type;
#define PyOrCostWrapperLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrCostWrapperLearner_Type)
#define PyOrange_AsCostWrapperLearner(op) (*(GCPtr< TCostWrapperLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDefaultClassifier_Type;
#define PyOrDefaultClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDefaultClassifier_Type)
#define PyOrange_AsDefaultClassifier(op) (*(GCPtr< TDefaultClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDiscDistribution_Type;
#define PyOrDiscDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDiscDistribution_Type)
#define PyOrange_AsDiscDistribution(op) (*(GCPtr< TDiscDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDiscrete2Continuous_Type;
#define PyOrDiscrete2Continuous_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDiscrete2Continuous_Type)
#define PyOrange_AsDiscrete2Continuous(op) (*(GCPtr< TDiscrete2Continuous > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDiscretization_Type;
#define PyOrDiscretization_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDiscretization_Type)
#define PyOrange_AsDiscretization(op) (*(GCPtr< TDiscretization > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDiscretizer_Type;
#define PyOrDiscretizer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDiscretizer_Type)
#define PyOrange_AsDiscretizer(op) (*(GCPtr< TDiscretizer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistanceMap_Type;
#define PyOrDistanceMap_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistanceMap_Type)
#define PyOrange_AsDistanceMap(op) (*(GCPtr< TDistanceMap > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistanceMapConstructor_Type;
#define PyOrDistanceMapConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistanceMapConstructor_Type)
#define PyOrange_AsDistanceMapConstructor(op) (*(GCPtr< TDistanceMapConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistribution_Type;
#define PyOrDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistribution_Type)
#define PyOrange_AsDistribution(op) (*(GCPtr< TDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_Type;
#define PyOrDistributionAssessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_Type)
#define PyOrange_AsDistributionAssessor(op) (*(GCPtr< TDistributionAssessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_Kramer_Type;
#define PyOrDistributionAssessor_Kramer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_Kramer_Type)
#define PyOrange_AsDistributionAssessor_Kramer(op) (*(GCPtr< TDistributionAssessor_Kramer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_Laplace_Type;
#define PyOrDistributionAssessor_Laplace_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_Laplace_Type)
#define PyOrange_AsDistributionAssessor_Laplace(op) (*(GCPtr< TDistributionAssessor_Laplace > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_Measure_Type;
#define PyOrDistributionAssessor_Measure_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_Measure_Type)
#define PyOrange_AsDistributionAssessor_Measure(op) (*(GCPtr< TDistributionAssessor_Measure > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_Relief_Type;
#define PyOrDistributionAssessor_Relief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_Relief_Type)
#define PyOrange_AsDistributionAssessor_Relief(op) (*(GCPtr< TDistributionAssessor_Relief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_m_Type;
#define PyOrDistributionAssessor_m_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_m_Type)
#define PyOrange_AsDistributionAssessor_m(op) (*(GCPtr< TDistributionAssessor_m > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionAssessor_mf_Type;
#define PyOrDistributionAssessor_mf_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionAssessor_mf_Type)
#define PyOrange_AsDistributionAssessor_mf(op) (*(GCPtr< TDistributionAssessor_mf > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDistributionList_Type;
#define PyOrDistributionList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDistributionList_Type)
#define PyOrange_AsDistributionList(op) (*(GCPtr< TDistributionList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDomain_Type;
#define PyOrDomain_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomain_Type)
#define PyOrange_AsDomain(op) (*(GCPtr< TDomain > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDomainBasicAttrStat_Type;
#define PyOrDomainBasicAttrStat_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomainBasicAttrStat_Type)
#define PyOrange_AsDomainBasicAttrStat(op) (*(GCPtr< TDomainBasicAttrStat > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDomainContingency_Type;
#define PyOrDomainContingency_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomainContingency_Type)
#define PyOrange_AsDomainContingency(op) (*(GCPtr< TDomainContingency > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDomainContinuizer_Type;
#define PyOrDomainContinuizer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomainContinuizer_Type)
#define PyOrange_AsDomainContinuizer(op) (*(GCPtr< TDomainContinuizer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDomainDepot_Type;
#define PyOrDomainDepot_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomainDepot_Type)
extern ORANGE_API TOrangeType PyOrDomainDistributions_Type;
#define PyOrDomainDistributions_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomainDistributions_Type)
#define PyOrange_AsDomainDistributions(op) (*(GCPtr< TDomainDistributions > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrDomainTransformerConstructor_Type;
#define PyOrDomainTransformerConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrDomainTransformerConstructor_Type)
#define PyOrange_AsDomainTransformerConstructor(op) (*(GCPtr< TDomainTransformerConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEFMDataDescription_Type;
#define PyOrEFMDataDescription_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEFMDataDescription_Type)
#define PyOrange_AsEFMDataDescription(op) (*(GCPtr< TEFMDataDescription > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEVDist_Type;
#define PyOrEVDist_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEVDist_Type)
#define PyOrange_AsEVDist(op) (*(GCPtr< TEVDist > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEVDistGetter_Type;
#define PyOrEVDistGetter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEVDistGetter_Type)
#define PyOrange_AsEVDistGetter(op) (*(GCPtr< TEVDistGetter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEVDistGetter_Standard_Type;
#define PyOrEVDistGetter_Standard_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEVDistGetter_Standard_Type)
#define PyOrange_AsEVDistGetter_Standard(op) (*(GCPtr< TEVDistGetter_Standard > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEVDistList_Type;
#define PyOrEVDistList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEVDistList_Type)
#define PyOrange_AsEVDistList(op) (*(GCPtr< TEVDistList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEarthClassifier_Type;
#define PyOrEarthClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEarthClassifier_Type)
#define PyOrange_AsEarthClassifier(op) (*(GCPtr< TEarthClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEarthLearner_Type;
#define PyOrEarthLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEarthLearner_Type)
#define PyOrange_AsEarthLearner(op) (*(GCPtr< TEarthLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEntropyDiscretization_Type;
#define PyOrEntropyDiscretization_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEntropyDiscretization_Type)
#define PyOrange_AsEntropyDiscretization(op) (*(GCPtr< TEntropyDiscretization > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEnumVariable_Type;
#define PyOrEnumVariable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEnumVariable_Type)
#define PyOrange_AsEnumVariable(op) (*(GCPtr< TEnumVariable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEquiDistDiscretization_Type;
#define PyOrEquiDistDiscretization_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEquiDistDiscretization_Type)
#define PyOrange_AsEquiDistDiscretization(op) (*(GCPtr< TEquiDistDiscretization > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEquiDistDiscretizer_Type;
#define PyOrEquiDistDiscretizer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEquiDistDiscretizer_Type)
#define PyOrange_AsEquiDistDiscretizer(op) (*(GCPtr< TEquiDistDiscretizer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrEquiNDiscretization_Type;
#define PyOrEquiNDiscretization_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrEquiNDiscretization_Type)
#define PyOrange_AsEquiNDiscretization(op) (*(GCPtr< TEquiNDiscretization > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExample_Type;
#define PyOrExample_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExample_Type)
extern ORANGE_API TOrangeType PyOrExampleCluster_Type;
#define PyOrExampleCluster_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleCluster_Type)
#define PyOrange_AsExampleCluster(op) (*(GCPtr< TExampleCluster > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleClusters_Type;
#define PyOrExampleClusters_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleClusters_Type)
#define PyOrange_AsExampleClusters(op) (*(GCPtr< TExampleClusters > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleDistBySorting_Type;
#define PyOrExampleDistBySorting_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleDistBySorting_Type)
#define PyOrange_AsExampleDistBySorting(op) (*(GCPtr< TExampleDistBySorting > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleDistConstructor_Type;
#define PyOrExampleDistConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleDistConstructor_Type)
#define PyOrange_AsExampleDistConstructor(op) (*(GCPtr< TExampleDistConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleDistVector_Type;
#define PyOrExampleDistVector_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleDistVector_Type)
#define PyOrange_AsExampleDistVector(op) (*(GCPtr< TExampleDistVector > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleGenerator_Type;
#define PyOrExampleGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleGenerator_Type)
#define PyOrange_AsExampleGenerator(op) (*(GCPtr< TExampleGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleGeneratorList_Type;
#define PyOrExampleGeneratorList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleGeneratorList_Type)
#define PyOrange_AsExampleGeneratorList(op) (*(GCPtr< TExampleGeneratorList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExampleTable_Type;
#define PyOrExampleTable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExampleTable_Type)
#define PyOrange_AsExampleTable(op) (*(GCPtr< TExampleTable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Type;
#define PyOrExamplesDistance_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Type)
#define PyOrange_AsExamplesDistance(op) (*(GCPtr< TExamplesDistance > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Type;
#define PyOrExamplesDistanceConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Type)
#define PyOrange_AsExamplesDistanceConstructor(op) (*(GCPtr< TExamplesDistanceConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_DTW_Type;
#define PyOrExamplesDistanceConstructor_DTW_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_DTW_Type)
#define PyOrange_AsExamplesDistanceConstructor_DTW(op) (*(GCPtr< TExamplesDistanceConstructor_DTW > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Euclidean_Type;
#define PyOrExamplesDistanceConstructor_Euclidean_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Euclidean_Type)
#define PyOrange_AsExamplesDistanceConstructor_Euclidean(op) (*(GCPtr< TExamplesDistanceConstructor_Euclidean > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Hamming_Type;
#define PyOrExamplesDistanceConstructor_Hamming_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Hamming_Type)
#define PyOrange_AsExamplesDistanceConstructor_Hamming(op) (*(GCPtr< TExamplesDistanceConstructor_Hamming > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Lp_Type;
#define PyOrExamplesDistanceConstructor_Lp_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Lp_Type)
#define PyOrange_AsExamplesDistanceConstructor_Lp(op) (*(GCPtr< TExamplesDistanceConstructor_Lp > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Manhattan_Type;
#define PyOrExamplesDistanceConstructor_Manhattan_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Manhattan_Type)
#define PyOrange_AsExamplesDistanceConstructor_Manhattan(op) (*(GCPtr< TExamplesDistanceConstructor_Manhattan > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Maximal_Type;
#define PyOrExamplesDistanceConstructor_Maximal_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Maximal_Type)
#define PyOrange_AsExamplesDistanceConstructor_Maximal(op) (*(GCPtr< TExamplesDistanceConstructor_Maximal > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistanceConstructor_Relief_Type;
#define PyOrExamplesDistanceConstructor_Relief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistanceConstructor_Relief_Type)
#define PyOrange_AsExamplesDistanceConstructor_Relief(op) (*(GCPtr< TExamplesDistanceConstructor_Relief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_DTW_Type;
#define PyOrExamplesDistance_DTW_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_DTW_Type)
#define PyOrange_AsExamplesDistance_DTW(op) (*(GCPtr< TExamplesDistance_DTW > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Euclidean_Type;
#define PyOrExamplesDistance_Euclidean_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Euclidean_Type)
#define PyOrange_AsExamplesDistance_Euclidean(op) (*(GCPtr< TExamplesDistance_Euclidean > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Hamming_Type;
#define PyOrExamplesDistance_Hamming_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Hamming_Type)
#define PyOrange_AsExamplesDistance_Hamming(op) (*(GCPtr< TExamplesDistance_Hamming > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Lp_Type;
#define PyOrExamplesDistance_Lp_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Lp_Type)
#define PyOrange_AsExamplesDistance_Lp(op) (*(GCPtr< TExamplesDistance_Lp > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Manhattan_Type;
#define PyOrExamplesDistance_Manhattan_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Manhattan_Type)
#define PyOrange_AsExamplesDistance_Manhattan(op) (*(GCPtr< TExamplesDistance_Manhattan > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Maximal_Type;
#define PyOrExamplesDistance_Maximal_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Maximal_Type)
#define PyOrange_AsExamplesDistance_Maximal(op) (*(GCPtr< TExamplesDistance_Maximal > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Normalized_Type;
#define PyOrExamplesDistance_Normalized_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Normalized_Type)
#define PyOrange_AsExamplesDistance_Normalized(op) (*(GCPtr< TExamplesDistance_Normalized > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrExamplesDistance_Relief_Type;
#define PyOrExamplesDistance_Relief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrExamplesDistance_Relief_Type)
#define PyOrange_AsExamplesDistance_Relief(op) (*(GCPtr< TExamplesDistance_Relief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFeatureByDistributions_Type;
#define PyOrFeatureByDistributions_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFeatureByDistributions_Type)
#define PyOrange_AsFeatureByDistributions(op) (*(GCPtr< TFeatureByDistributions > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFeatureByIM_Type;
#define PyOrFeatureByIM_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFeatureByIM_Type)
#define PyOrange_AsFeatureByIM(op) (*(GCPtr< TFeatureByIM > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFeatureByMinComplexity_Type;
#define PyOrFeatureByMinComplexity_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFeatureByMinComplexity_Type)
#define PyOrange_AsFeatureByMinComplexity(op) (*(GCPtr< TFeatureByMinComplexity > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFeatureInducer_Type;
#define PyOrFeatureInducer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFeatureInducer_Type)
#define PyOrange_AsFeatureInducer(op) (*(GCPtr< TFeatureInducer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFileExampleGenerator_Type;
#define PyOrFileExampleGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFileExampleGenerator_Type)
#define PyOrange_AsFileExampleGenerator(op) (*(GCPtr< TFileExampleGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_Type;
#define PyOrFilter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_Type)
#define PyOrange_AsFilter(op) (*(GCPtr< TFilter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilterList_Type;
#define PyOrFilterList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilterList_Type)
#define PyOrange_AsFilterList(op) (*(GCPtr< TFilterList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_conjunction_Type;
#define PyOrFilter_conjunction_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_conjunction_Type)
#define PyOrange_AsFilter_conjunction(op) (*(GCPtr< TFilter_conjunction > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_disjunction_Type;
#define PyOrFilter_disjunction_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_disjunction_Type)
#define PyOrange_AsFilter_disjunction(op) (*(GCPtr< TFilter_disjunction > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_hasClassValue_Type;
#define PyOrFilter_hasClassValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_hasClassValue_Type)
#define PyOrange_AsFilter_hasClassValue(op) (*(GCPtr< TFilter_hasClassValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_hasMeta_Type;
#define PyOrFilter_hasMeta_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_hasMeta_Type)
#define PyOrange_AsFilter_hasMeta(op) (*(GCPtr< TFilter_hasMeta > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_hasSpecial_Type;
#define PyOrFilter_hasSpecial_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_hasSpecial_Type)
#define PyOrange_AsFilter_hasSpecial(op) (*(GCPtr< TFilter_hasSpecial > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_isDefined_Type;
#define PyOrFilter_isDefined_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_isDefined_Type)
#define PyOrange_AsFilter_isDefined(op) (*(GCPtr< TFilter_isDefined > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_random_Type;
#define PyOrFilter_random_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_random_Type)
#define PyOrange_AsFilter_random(op) (*(GCPtr< TFilter_random > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_sameValue_Type;
#define PyOrFilter_sameValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_sameValue_Type)
#define PyOrange_AsFilter_sameValue(op) (*(GCPtr< TFilter_sameValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFilter_values_Type;
#define PyOrFilter_values_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFilter_values_Type)
#define PyOrange_AsFilter_values(op) (*(GCPtr< TFilter_values > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFindNearest_Type;
#define PyOrFindNearest_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFindNearest_Type)
#define PyOrange_AsFindNearest(op) (*(GCPtr< TFindNearest > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFindNearestConstructor_Type;
#define PyOrFindNearestConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFindNearestConstructor_Type)
#define PyOrange_AsFindNearestConstructor(op) (*(GCPtr< TFindNearestConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFindNearestConstructor_BruteForce_Type;
#define PyOrFindNearestConstructor_BruteForce_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFindNearestConstructor_BruteForce_Type)
#define PyOrange_AsFindNearestConstructor_BruteForce(op) (*(GCPtr< TFindNearestConstructor_BruteForce > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFindNearest_BruteForce_Type;
#define PyOrFindNearest_BruteForce_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFindNearest_BruteForce_Type)
#define PyOrange_AsFindNearest_BruteForce(op) (*(GCPtr< TFindNearest_BruteForce > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFloatFloatList_Type;
#define PyOrFloatFloatList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFloatFloatList_Type)
#define PyOrange_AsFloatFloatList(op) (*(GCPtr< TFloatFloatList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFloatList_Type;
#define PyOrFloatList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFloatList_Type)
#define PyOrange_AsFloatList(op) (*(GCPtr< TFloatList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFloatListList_Type;
#define PyOrFloatListList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFloatListList_Type)
#define PyOrange_AsFloatListList(op) (*(GCPtr< TFloatListList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrFloatVariable_Type;
#define PyOrFloatVariable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrFloatVariable_Type)
#define PyOrange_AsFloatVariable(op) (*(GCPtr< TFloatVariable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrGaussianDistribution_Type;
#define PyOrGaussianDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrGaussianDistribution_Type)
#define PyOrange_AsGaussianDistribution(op) (*(GCPtr< TGaussianDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrGeneralExampleClustering_Type;
#define PyOrGeneralExampleClustering_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrGeneralExampleClustering_Type)
#define PyOrange_AsGeneralExampleClustering(op) (*(GCPtr< TGeneralExampleClustering > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrGraph_Type;
#define PyOrGraph_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrGraph_Type)
#define PyOrange_AsGraph(op) (*(GCPtr< TGraph > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrGraphAsList_Type;
#define PyOrGraphAsList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrGraphAsList_Type)
#define PyOrange_AsGraphAsList(op) (*(GCPtr< TGraphAsList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrGraphAsMatrix_Type;
#define PyOrGraphAsMatrix_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrGraphAsMatrix_Type)
#define PyOrange_AsGraphAsMatrix(op) (*(GCPtr< TGraphAsMatrix > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrGraphAsTree_Type;
#define PyOrGraphAsTree_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrGraphAsTree_Type)
#define PyOrange_AsGraphAsTree(op) (*(GCPtr< TGraphAsTree > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrHierarchicalCluster_Type;
#define PyOrHierarchicalCluster_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrHierarchicalCluster_Type)
#define PyOrange_AsHierarchicalCluster(op) (*(GCPtr< THierarchicalCluster > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrHierarchicalClusterList_Type;
#define PyOrHierarchicalClusterList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrHierarchicalClusterList_Type)
#define PyOrange_AsHierarchicalClusterList(op) (*(GCPtr< THierarchicalClusterList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrHierarchicalClusterOrdering_Type;
#define PyOrHierarchicalClusterOrdering_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrHierarchicalClusterOrdering_Type)
#define PyOrange_AsHierarchicalClusterOrdering(op) (*(GCPtr< THierarchicalClusterOrdering > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrHierarchicalClustering_Type;
#define PyOrHierarchicalClustering_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrHierarchicalClustering_Type)
#define PyOrange_AsHierarchicalClustering(op) (*(GCPtr< THierarchicalClustering > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIG_Type;
#define PyOrIG_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIG_Type)
#define PyOrange_AsIG(op) (*(GCPtr< TIG > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIGBySorting_Type;
#define PyOrIGBySorting_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIGBySorting_Type)
#define PyOrange_AsIGBySorting(op) (*(GCPtr< TIGBySorting > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIGConstructor_Type;
#define PyOrIGConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIGConstructor_Type)
#define PyOrange_AsIGConstructor(op) (*(GCPtr< TIGConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIM_Type;
#define PyOrIM_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIM_Type)
#define PyOrange_AsIM(op) (*(GCPtr< TIM > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMBlurer_Type;
#define PyOrIMBlurer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMBlurer_Type)
#define PyOrange_AsIMBlurer(op) (*(GCPtr< TIMBlurer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByIMByRows_Type;
#define PyOrIMByIMByRows_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByIMByRows_Type)
#define PyOrange_AsIMByIMByRows(op) (*(GCPtr< TIMByIMByRows > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByRelief_Type;
#define PyOrIMByRelief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByRelief_Type)
#define PyOrange_AsIMByRelief(op) (*(GCPtr< TIMByRelief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByRows_Type;
#define PyOrIMByRows_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByRows_Type)
#define PyOrange_AsIMByRows(op) (*(GCPtr< TIMByRows > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByRowsByRelief_Type;
#define PyOrIMByRowsByRelief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByRowsByRelief_Type)
#define PyOrange_AsIMByRowsByRelief(op) (*(GCPtr< TIMByRowsByRelief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByRowsBySorting_Type;
#define PyOrIMByRowsBySorting_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByRowsBySorting_Type)
#define PyOrange_AsIMByRowsBySorting(op) (*(GCPtr< TIMByRowsBySorting > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByRowsConstructor_Type;
#define PyOrIMByRowsConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByRowsConstructor_Type)
#define PyOrange_AsIMByRowsConstructor(op) (*(GCPtr< TIMByRowsConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMByRowsPreprocessor_Type;
#define PyOrIMByRowsPreprocessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMByRowsPreprocessor_Type)
#define PyOrange_AsIMByRowsPreprocessor(op) (*(GCPtr< TIMByRowsPreprocessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMBySorting_Type;
#define PyOrIMBySorting_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMBySorting_Type)
#define PyOrange_AsIMBySorting(op) (*(GCPtr< TIMBySorting > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMClustering_Type;
#define PyOrIMClustering_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMClustering_Type)
#define PyOrange_AsIMClustering(op) (*(GCPtr< TIMClustering > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIMConstructor_Type;
#define PyOrIMConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIMConstructor_Type)
#define PyOrange_AsIMConstructor(op) (*(GCPtr< TIMConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputeClassifier_Type;
#define PyOrImputeClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputeClassifier_Type)
#define PyOrange_AsImputeClassifier(op) (*(GCPtr< TImputeClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputer_Type;
#define PyOrImputer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputer_Type)
#define PyOrange_AsImputer(op) (*(GCPtr< TImputer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_Type;
#define PyOrImputerConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_Type)
#define PyOrange_AsImputerConstructor(op) (*(GCPtr< TImputerConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_asValue_Type;
#define PyOrImputerConstructor_asValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_asValue_Type)
#define PyOrange_AsImputerConstructor_asValue(op) (*(GCPtr< TImputerConstructor_asValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_average_Type;
#define PyOrImputerConstructor_average_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_average_Type)
#define PyOrange_AsImputerConstructor_average(op) (*(GCPtr< TImputerConstructor_average > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_maximal_Type;
#define PyOrImputerConstructor_maximal_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_maximal_Type)
#define PyOrange_AsImputerConstructor_maximal(op) (*(GCPtr< TImputerConstructor_maximal > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_minimal_Type;
#define PyOrImputerConstructor_minimal_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_minimal_Type)
#define PyOrange_AsImputerConstructor_minimal(op) (*(GCPtr< TImputerConstructor_minimal > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_model_Type;
#define PyOrImputerConstructor_model_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_model_Type)
#define PyOrange_AsImputerConstructor_model(op) (*(GCPtr< TImputerConstructor_model > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputerConstructor_random_Type;
#define PyOrImputerConstructor_random_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputerConstructor_random_Type)
#define PyOrange_AsImputerConstructor_random(op) (*(GCPtr< TImputerConstructor_random > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputer_asValue_Type;
#define PyOrImputer_asValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputer_asValue_Type)
#define PyOrange_AsImputer_asValue(op) (*(GCPtr< TImputer_asValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputer_defaults_Type;
#define PyOrImputer_defaults_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputer_defaults_Type)
#define PyOrange_AsImputer_defaults(op) (*(GCPtr< TImputer_defaults > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputer_model_Type;
#define PyOrImputer_model_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputer_model_Type)
#define PyOrange_AsImputer_model(op) (*(GCPtr< TImputer_model > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrImputer_random_Type;
#define PyOrImputer_random_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrImputer_random_Type)
#define PyOrange_AsImputer_random(op) (*(GCPtr< TImputer_random > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIntFloatList_Type;
#define PyOrIntFloatList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIntFloatList_Type)
#define PyOrange_AsIntFloatList(op) (*(GCPtr< TIntFloatList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIntList_Type;
#define PyOrIntList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIntList_Type)
#define PyOrange_AsIntList(op) (*(GCPtr< TIntList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrIntervalDiscretizer_Type;
#define PyOrIntervalDiscretizer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrIntervalDiscretizer_Type)
#define PyOrange_AsIntervalDiscretizer(op) (*(GCPtr< TIntervalDiscretizer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrItemsetNodeProxy_Type;
#define PyOrItemsetNodeProxy_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrItemsetNodeProxy_Type)
#define PyOrange_AsItemsetNodeProxy(op) (*(GCPtr< TItemsetNodeProxy > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrItemsetsSparseInducer_Type;
#define PyOrItemsetsSparseInducer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrItemsetsSparseInducer_Type)
#define PyOrange_AsItemsetsSparseInducer(op) (*(GCPtr< TItemsetsSparseInducer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrKernelFunc_Type;
#define PyOrKernelFunc_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrKernelFunc_Type)
#define PyOrange_AsKernelFunc(op) (*(GCPtr< TKernelFunc > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLearner_Type;
#define PyOrLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLearner_Type)
#define PyOrange_AsLearner(op) (*(GCPtr< TLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLearnerFD_Type;
#define PyOrLearnerFD_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLearnerFD_Type)
#define PyOrange_AsLearnerFD(op) (*(GCPtr< TLearnerFD > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLinearClassifier_Type;
#define PyOrLinearClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLinearClassifier_Type)
#define PyOrange_AsLinearClassifier(op) (*(GCPtr< TLinearClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLinearLearner_Type;
#define PyOrLinearLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLinearLearner_Type)
#define PyOrange_AsLinearLearner(op) (*(GCPtr< TLinearLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLogRegClassifier_Type;
#define PyOrLogRegClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLogRegClassifier_Type)
#define PyOrange_AsLogRegClassifier(op) (*(GCPtr< TLogRegClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLogRegFitter_Type;
#define PyOrLogRegFitter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLogRegFitter_Type)
#define PyOrange_AsLogRegFitter(op) (*(GCPtr< TLogRegFitter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLogRegFitter_Cholesky_Type;
#define PyOrLogRegFitter_Cholesky_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLogRegFitter_Cholesky_Type)
#define PyOrange_AsLogRegFitter_Cholesky(op) (*(GCPtr< TLogRegFitter_Cholesky > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLogRegLearner_Type;
#define PyOrLogRegLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLogRegLearner_Type)
#define PyOrange_AsLogRegLearner(op) (*(GCPtr< TLogRegLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLongList_Type;
#define PyOrLongList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLongList_Type)
#define PyOrange_AsLongList(op) (*(GCPtr< TLongList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrLookupLearner_Type;
#define PyOrLookupLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrLookupLearner_Type)
#define PyOrange_AsLookupLearner(op) (*(GCPtr< TLookupLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMajorityLearner_Type;
#define PyOrMajorityLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMajorityLearner_Type)
#define PyOrange_AsMajorityLearner(op) (*(GCPtr< TMajorityLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMakeRandomIndices_Type;
#define PyOrMakeRandomIndices_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMakeRandomIndices_Type)
#define PyOrange_AsMakeRandomIndices(op) (*(GCPtr< TMakeRandomIndices > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMakeRandomIndices2_Type;
#define PyOrMakeRandomIndices2_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMakeRandomIndices2_Type)
#define PyOrange_AsMakeRandomIndices2(op) (*(GCPtr< TMakeRandomIndices2 > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMakeRandomIndicesCV_Type;
#define PyOrMakeRandomIndicesCV_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMakeRandomIndicesCV_Type)
#define PyOrange_AsMakeRandomIndicesCV(op) (*(GCPtr< TMakeRandomIndicesCV > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMakeRandomIndicesMultiple_Type;
#define PyOrMakeRandomIndicesMultiple_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMakeRandomIndicesMultiple_Type)
#define PyOrange_AsMakeRandomIndicesMultiple(op) (*(GCPtr< TMakeRandomIndicesMultiple > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMakeRandomIndicesN_Type;
#define PyOrMakeRandomIndicesN_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMakeRandomIndicesN_Type)
#define PyOrange_AsMakeRandomIndicesN(op) (*(GCPtr< TMakeRandomIndicesN > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMapIntValue_Type;
#define PyOrMapIntValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMapIntValue_Type)
#define PyOrange_AsMapIntValue(op) (*(GCPtr< TMapIntValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_Type;
#define PyOrMeasureAttribute_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_Type)
#define PyOrange_AsMeasureAttribute(op) (*(GCPtr< TMeasureAttribute > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttributeFromProbabilities_Type;
#define PyOrMeasureAttributeFromProbabilities_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttributeFromProbabilities_Type)
#define PyOrange_AsMeasureAttributeFromProbabilities(op) (*(GCPtr< TMeasureAttributeFromProbabilities > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_IM_Type;
#define PyOrMeasureAttribute_IM_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_IM_Type)
#define PyOrange_AsMeasureAttribute_IM(op) (*(GCPtr< TMeasureAttribute_IM > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_MSE_Type;
#define PyOrMeasureAttribute_MSE_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_MSE_Type)
#define PyOrange_AsMeasureAttribute_MSE(op) (*(GCPtr< TMeasureAttribute_MSE > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_chiSquare_Type;
#define PyOrMeasureAttribute_chiSquare_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_chiSquare_Type)
#define PyOrange_AsMeasureAttribute_chiSquare(op) (*(GCPtr< TMeasureAttribute_chiSquare > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_cost_Type;
#define PyOrMeasureAttribute_cost_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_cost_Type)
#define PyOrange_AsMeasureAttribute_cost(op) (*(GCPtr< TMeasureAttribute_cost > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_gainRatio_Type;
#define PyOrMeasureAttribute_gainRatio_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_gainRatio_Type)
#define PyOrange_AsMeasureAttribute_gainRatio(op) (*(GCPtr< TMeasureAttribute_gainRatio > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_gainRatioA_Type;
#define PyOrMeasureAttribute_gainRatioA_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_gainRatioA_Type)
#define PyOrange_AsMeasureAttribute_gainRatioA(op) (*(GCPtr< TMeasureAttribute_gainRatioA > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_gini_Type;
#define PyOrMeasureAttribute_gini_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_gini_Type)
#define PyOrange_AsMeasureAttribute_gini(op) (*(GCPtr< TMeasureAttribute_gini > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_info_Type;
#define PyOrMeasureAttribute_info_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_info_Type)
#define PyOrange_AsMeasureAttribute_info(op) (*(GCPtr< TMeasureAttribute_info > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_logOddsRatio_Type;
#define PyOrMeasureAttribute_logOddsRatio_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_logOddsRatio_Type)
#define PyOrange_AsMeasureAttribute_logOddsRatio(op) (*(GCPtr< TMeasureAttribute_logOddsRatio > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_relevance_Type;
#define PyOrMeasureAttribute_relevance_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_relevance_Type)
#define PyOrange_AsMeasureAttribute_relevance(op) (*(GCPtr< TMeasureAttribute_relevance > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrMeasureAttribute_relief_Type;
#define PyOrMeasureAttribute_relief_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrMeasureAttribute_relief_Type)
#define PyOrange_AsMeasureAttribute_relief(op) (*(GCPtr< TMeasureAttribute_relief > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrNormalizeContinuous_Type;
#define PyOrNormalizeContinuous_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrNormalizeContinuous_Type)
#define PyOrange_AsNormalizeContinuous(op) (*(GCPtr< TNormalizeContinuous > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrOrange_Type;
#define PyOrOrange_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrOrange_Type)
#define PyOrange_AsOrange(op) (*(GCPtr< TOrange > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrOrdinal2Continuous_Type;
#define PyOrOrdinal2Continuous_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrOrdinal2Continuous_Type)
#define PyOrange_AsOrdinal2Continuous(op) (*(GCPtr< TOrdinal2Continuous > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrP2NN_Type;
#define PyOrP2NN_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrP2NN_Type)
#define PyOrange_AsP2NN(op) (*(GCPtr< TP2NN > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPearsonCorrelation_Type;
#define PyOrPearsonCorrelation_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPearsonCorrelation_Type)
#define PyOrange_AsPearsonCorrelation(op) (*(GCPtr< TPearsonCorrelation > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_Type;
#define PyOrPreprocessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_Type)
#define PyOrange_AsPreprocessor(op) (*(GCPtr< TPreprocessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addCensorWeight_Type;
#define PyOrPreprocessor_addCensorWeight_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addCensorWeight_Type)
#define PyOrange_AsPreprocessor_addCensorWeight(op) (*(GCPtr< TPreprocessor_addCensorWeight > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addClassNoise_Type;
#define PyOrPreprocessor_addClassNoise_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addClassNoise_Type)
#define PyOrange_AsPreprocessor_addClassNoise(op) (*(GCPtr< TPreprocessor_addClassNoise > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addClassWeight_Type;
#define PyOrPreprocessor_addClassWeight_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addClassWeight_Type)
#define PyOrange_AsPreprocessor_addClassWeight(op) (*(GCPtr< TPreprocessor_addClassWeight > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addGaussianClassNoise_Type;
#define PyOrPreprocessor_addGaussianClassNoise_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addGaussianClassNoise_Type)
#define PyOrange_AsPreprocessor_addGaussianClassNoise(op) (*(GCPtr< TPreprocessor_addGaussianClassNoise > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addGaussianNoise_Type;
#define PyOrPreprocessor_addGaussianNoise_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addGaussianNoise_Type)
#define PyOrange_AsPreprocessor_addGaussianNoise(op) (*(GCPtr< TPreprocessor_addGaussianNoise > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addMissing_Type;
#define PyOrPreprocessor_addMissing_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addMissing_Type)
#define PyOrange_AsPreprocessor_addMissing(op) (*(GCPtr< TPreprocessor_addMissing > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addMissingClasses_Type;
#define PyOrPreprocessor_addMissingClasses_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addMissingClasses_Type)
#define PyOrange_AsPreprocessor_addMissingClasses(op) (*(GCPtr< TPreprocessor_addMissingClasses > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_addNoise_Type;
#define PyOrPreprocessor_addNoise_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_addNoise_Type)
#define PyOrange_AsPreprocessor_addNoise(op) (*(GCPtr< TPreprocessor_addNoise > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_discretize_Type;
#define PyOrPreprocessor_discretize_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_discretize_Type)
#define PyOrange_AsPreprocessor_discretize(op) (*(GCPtr< TPreprocessor_discretize > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_drop_Type;
#define PyOrPreprocessor_drop_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_drop_Type)
#define PyOrange_AsPreprocessor_drop(op) (*(GCPtr< TPreprocessor_drop > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_dropMissing_Type;
#define PyOrPreprocessor_dropMissing_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_dropMissing_Type)
#define PyOrange_AsPreprocessor_dropMissing(op) (*(GCPtr< TPreprocessor_dropMissing > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_dropMissingClasses_Type;
#define PyOrPreprocessor_dropMissingClasses_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_dropMissingClasses_Type)
#define PyOrange_AsPreprocessor_dropMissingClasses(op) (*(GCPtr< TPreprocessor_dropMissingClasses > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_filter_Type;
#define PyOrPreprocessor_filter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_filter_Type)
#define PyOrange_AsPreprocessor_filter(op) (*(GCPtr< TPreprocessor_filter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_ignore_Type;
#define PyOrPreprocessor_ignore_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_ignore_Type)
#define PyOrange_AsPreprocessor_ignore(op) (*(GCPtr< TPreprocessor_ignore > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_imputeByLearner_Type;
#define PyOrPreprocessor_imputeByLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_imputeByLearner_Type)
#define PyOrange_AsPreprocessor_imputeByLearner(op) (*(GCPtr< TPreprocessor_imputeByLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_removeDuplicates_Type;
#define PyOrPreprocessor_removeDuplicates_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_removeDuplicates_Type)
#define PyOrange_AsPreprocessor_removeDuplicates(op) (*(GCPtr< TPreprocessor_removeDuplicates > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_select_Type;
#define PyOrPreprocessor_select_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_select_Type)
#define PyOrange_AsPreprocessor_select(op) (*(GCPtr< TPreprocessor_select > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_shuffle_Type;
#define PyOrPreprocessor_shuffle_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_shuffle_Type)
#define PyOrange_AsPreprocessor_shuffle(op) (*(GCPtr< TPreprocessor_shuffle > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_take_Type;
#define PyOrPreprocessor_take_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_take_Type)
#define PyOrange_AsPreprocessor_take(op) (*(GCPtr< TPreprocessor_take > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_takeMissing_Type;
#define PyOrPreprocessor_takeMissing_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_takeMissing_Type)
#define PyOrange_AsPreprocessor_takeMissing(op) (*(GCPtr< TPreprocessor_takeMissing > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPreprocessor_takeMissingClasses_Type;
#define PyOrPreprocessor_takeMissingClasses_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPreprocessor_takeMissingClasses_Type)
#define PyOrange_AsPreprocessor_takeMissingClasses(op) (*(GCPtr< TPreprocessor_takeMissingClasses > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimator_Type;
#define PyOrProbabilityEstimator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimator_Type)
#define PyOrange_AsProbabilityEstimator(op) (*(GCPtr< TProbabilityEstimator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorConstructor_Type;
#define PyOrProbabilityEstimatorConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorConstructor_Type)
#define PyOrange_AsProbabilityEstimatorConstructor(op) (*(GCPtr< TProbabilityEstimatorConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorConstructor_Laplace_Type;
#define PyOrProbabilityEstimatorConstructor_Laplace_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorConstructor_Laplace_Type)
#define PyOrange_AsProbabilityEstimatorConstructor_Laplace(op) (*(GCPtr< TProbabilityEstimatorConstructor_Laplace > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorConstructor_kernel_Type;
#define PyOrProbabilityEstimatorConstructor_kernel_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorConstructor_kernel_Type)
#define PyOrange_AsProbabilityEstimatorConstructor_kernel(op) (*(GCPtr< TProbabilityEstimatorConstructor_kernel > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorConstructor_loess_Type;
#define PyOrProbabilityEstimatorConstructor_loess_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorConstructor_loess_Type)
#define PyOrange_AsProbabilityEstimatorConstructor_loess(op) (*(GCPtr< TProbabilityEstimatorConstructor_loess > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorConstructor_m_Type;
#define PyOrProbabilityEstimatorConstructor_m_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorConstructor_m_Type)
#define PyOrange_AsProbabilityEstimatorConstructor_m(op) (*(GCPtr< TProbabilityEstimatorConstructor_m > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorConstructor_relative_Type;
#define PyOrProbabilityEstimatorConstructor_relative_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorConstructor_relative_Type)
#define PyOrange_AsProbabilityEstimatorConstructor_relative(op) (*(GCPtr< TProbabilityEstimatorConstructor_relative > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimatorList_Type;
#define PyOrProbabilityEstimatorList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimatorList_Type)
#define PyOrange_AsProbabilityEstimatorList(op) (*(GCPtr< TProbabilityEstimatorList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProbabilityEstimator_FromDistribution_Type;
#define PyOrProbabilityEstimator_FromDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProbabilityEstimator_FromDistribution_Type)
#define PyOrange_AsProbabilityEstimator_FromDistribution(op) (*(GCPtr< TProbabilityEstimator_FromDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrProgressCallback_Type;
#define PyOrProgressCallback_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrProgressCallback_Type)
#define PyOrange_AsProgressCallback(op) (*(GCPtr< TProgressCallback > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPythonValue_Type;
#define PyOrPythonValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPythonValue_Type)
#define PyOrange_AsPythonValue(op) (*(GCPtr< TPythonValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPythonValueSpecial_Type;
#define PyOrPythonValueSpecial_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPythonValueSpecial_Type)
#define PyOrange_AsPythonValueSpecial(op) (*(GCPtr< TPythonValueSpecial > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrPythonVariable_Type;
#define PyOrPythonVariable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrPythonVariable_Type)
#define PyOrange_AsPythonVariable(op) (*(GCPtr< TPythonVariable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRandomClassifier_Type;
#define PyOrRandomClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRandomClassifier_Type)
#define PyOrange_AsRandomClassifier(op) (*(GCPtr< TRandomClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRandomGenerator_Type;
#define PyOrRandomGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRandomGenerator_Type)
#define PyOrange_AsRandomGenerator(op) (*(GCPtr< TRandomGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRandomLearner_Type;
#define PyOrRandomLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRandomLearner_Type)
#define PyOrange_AsRandomLearner(op) (*(GCPtr< TRandomLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRemoveRedundant_Type;
#define PyOrRemoveRedundant_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRemoveRedundant_Type)
#define PyOrange_AsRemoveRedundant(op) (*(GCPtr< TRemoveRedundant > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRemoveRedundantByInduction_Type;
#define PyOrRemoveRedundantByInduction_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRemoveRedundantByInduction_Type)
#define PyOrange_AsRemoveRedundantByInduction(op) (*(GCPtr< TRemoveRedundantByInduction > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRemoveRedundantByQuality_Type;
#define PyOrRemoveRedundantByQuality_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRemoveRedundantByQuality_Type)
#define PyOrange_AsRemoveRedundantByQuality(op) (*(GCPtr< TRemoveRedundantByQuality > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRemoveRedundantOneValue_Type;
#define PyOrRemoveRedundantOneValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRemoveRedundantOneValue_Type)
#define PyOrange_AsRemoveRedundantOneValue(op) (*(GCPtr< TRemoveRedundantOneValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRemoveUnusedValues_Type;
#define PyOrRemoveUnusedValues_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRemoveUnusedValues_Type)
#define PyOrange_AsRemoveUnusedValues(op) (*(GCPtr< TRemoveUnusedValues > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRule_Type;
#define PyOrRule_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRule_Type)
#define PyOrange_AsRule(op) (*(GCPtr< TRule > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamCandidateSelector_Type;
#define PyOrRuleBeamCandidateSelector_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamCandidateSelector_Type)
#define PyOrange_AsRuleBeamCandidateSelector(op) (*(GCPtr< TRuleBeamCandidateSelector > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamCandidateSelector_TakeAll_Type;
#define PyOrRuleBeamCandidateSelector_TakeAll_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamCandidateSelector_TakeAll_Type)
#define PyOrange_AsRuleBeamCandidateSelector_TakeAll(op) (*(GCPtr< TRuleBeamCandidateSelector_TakeAll > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamFilter_Type;
#define PyOrRuleBeamFilter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamFilter_Type)
#define PyOrange_AsRuleBeamFilter(op) (*(GCPtr< TRuleBeamFilter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamFilter_Width_Type;
#define PyOrRuleBeamFilter_Width_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamFilter_Width_Type)
#define PyOrange_AsRuleBeamFilter_Width(op) (*(GCPtr< TRuleBeamFilter_Width > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamFinder_Type;
#define PyOrRuleBeamFinder_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamFinder_Type)
#define PyOrange_AsRuleBeamFinder(op) (*(GCPtr< TRuleBeamFinder > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamInitializer_Type;
#define PyOrRuleBeamInitializer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamInitializer_Type)
#define PyOrange_AsRuleBeamInitializer(op) (*(GCPtr< TRuleBeamInitializer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamInitializer_Default_Type;
#define PyOrRuleBeamInitializer_Default_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamInitializer_Default_Type)
#define PyOrange_AsRuleBeamInitializer_Default(op) (*(GCPtr< TRuleBeamInitializer_Default > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamRefiner_Type;
#define PyOrRuleBeamRefiner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamRefiner_Type)
#define PyOrange_AsRuleBeamRefiner(op) (*(GCPtr< TRuleBeamRefiner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleBeamRefiner_Selector_Type;
#define PyOrRuleBeamRefiner_Selector_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleBeamRefiner_Selector_Type)
#define PyOrange_AsRuleBeamRefiner_Selector(op) (*(GCPtr< TRuleBeamRefiner_Selector > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleClassifier_Type;
#define PyOrRuleClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleClassifier_Type)
#define PyOrange_AsRuleClassifier(op) (*(GCPtr< TRuleClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleClassifierConstructor_Type;
#define PyOrRuleClassifierConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleClassifierConstructor_Type)
#define PyOrange_AsRuleClassifierConstructor(op) (*(GCPtr< TRuleClassifierConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleClassifier_firstRule_Type;
#define PyOrRuleClassifier_firstRule_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleClassifier_firstRule_Type)
#define PyOrange_AsRuleClassifier_firstRule(op) (*(GCPtr< TRuleClassifier_firstRule > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleClassifier_logit_Type;
#define PyOrRuleClassifier_logit_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleClassifier_logit_Type)
#define PyOrange_AsRuleClassifier_logit(op) (*(GCPtr< TRuleClassifier_logit > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleCovererAndRemover_Type;
#define PyOrRuleCovererAndRemover_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleCovererAndRemover_Type)
#define PyOrange_AsRuleCovererAndRemover(op) (*(GCPtr< TRuleCovererAndRemover > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleCovererAndRemover_Default_Type;
#define PyOrRuleCovererAndRemover_Default_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleCovererAndRemover_Default_Type)
#define PyOrange_AsRuleCovererAndRemover_Default(op) (*(GCPtr< TRuleCovererAndRemover_Default > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleDataStoppingCriteria_Type;
#define PyOrRuleDataStoppingCriteria_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleDataStoppingCriteria_Type)
#define PyOrange_AsRuleDataStoppingCriteria(op) (*(GCPtr< TRuleDataStoppingCriteria > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleDataStoppingCriteria_NoPositives_Type;
#define PyOrRuleDataStoppingCriteria_NoPositives_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleDataStoppingCriteria_NoPositives_Type)
#define PyOrange_AsRuleDataStoppingCriteria_NoPositives(op) (*(GCPtr< TRuleDataStoppingCriteria_NoPositives > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleEvaluator_Type;
#define PyOrRuleEvaluator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleEvaluator_Type)
#define PyOrange_AsRuleEvaluator(op) (*(GCPtr< TRuleEvaluator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleEvaluator_Entropy_Type;
#define PyOrRuleEvaluator_Entropy_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleEvaluator_Entropy_Type)
#define PyOrange_AsRuleEvaluator_Entropy(op) (*(GCPtr< TRuleEvaluator_Entropy > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleEvaluator_LRS_Type;
#define PyOrRuleEvaluator_LRS_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleEvaluator_LRS_Type)
#define PyOrange_AsRuleEvaluator_LRS(op) (*(GCPtr< TRuleEvaluator_LRS > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleEvaluator_Laplace_Type;
#define PyOrRuleEvaluator_Laplace_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleEvaluator_Laplace_Type)
#define PyOrange_AsRuleEvaluator_Laplace(op) (*(GCPtr< TRuleEvaluator_Laplace > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleEvaluator_mEVC_Type;
#define PyOrRuleEvaluator_mEVC_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleEvaluator_mEVC_Type)
#define PyOrange_AsRuleEvaluator_mEVC(op) (*(GCPtr< TRuleEvaluator_mEVC > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleFinder_Type;
#define PyOrRuleFinder_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleFinder_Type)
#define PyOrange_AsRuleFinder(op) (*(GCPtr< TRuleFinder > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleLearner_Type;
#define PyOrRuleLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleLearner_Type)
#define PyOrange_AsRuleLearner(op) (*(GCPtr< TRuleLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleList_Type;
#define PyOrRuleList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleList_Type)
#define PyOrange_AsRuleList(op) (*(GCPtr< TRuleList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleStoppingCriteria_Type;
#define PyOrRuleStoppingCriteria_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleStoppingCriteria_Type)
#define PyOrange_AsRuleStoppingCriteria(op) (*(GCPtr< TRuleStoppingCriteria > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleStoppingCriteria_NegativeDistribution_Type;
#define PyOrRuleStoppingCriteria_NegativeDistribution_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleStoppingCriteria_NegativeDistribution_Type)
#define PyOrange_AsRuleStoppingCriteria_NegativeDistribution(op) (*(GCPtr< TRuleStoppingCriteria_NegativeDistribution > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleValidator_Type;
#define PyOrRuleValidator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleValidator_Type)
#define PyOrange_AsRuleValidator(op) (*(GCPtr< TRuleValidator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrRuleValidator_LRS_Type;
#define PyOrRuleValidator_LRS_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrRuleValidator_LRS_Type)
#define PyOrange_AsRuleValidator_LRS(op) (*(GCPtr< TRuleValidator_LRS > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSVMClassifier_Type;
#define PyOrSVMClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSVMClassifier_Type)
#define PyOrange_AsSVMClassifier(op) (*(GCPtr< TSVMClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSVMClassifierSparse_Type;
#define PyOrSVMClassifierSparse_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSVMClassifierSparse_Type)
#define PyOrange_AsSVMClassifierSparse(op) (*(GCPtr< TSVMClassifierSparse > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSVMLearner_Type;
#define PyOrSVMLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSVMLearner_Type)
#define PyOrange_AsSVMLearner(op) (*(GCPtr< TSVMLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSVMLearnerSparse_Type;
#define PyOrSVMLearnerSparse_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSVMLearnerSparse_Type)
#define PyOrange_AsSVMLearnerSparse(op) (*(GCPtr< TSVMLearnerSparse > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSimpleTreeClassifier_Type;
#define PyOrSimpleTreeClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSimpleTreeClassifier_Type)
#define PyOrange_AsSimpleTreeClassifier(op) (*(GCPtr< TSimpleTreeClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSimpleTreeLearner_Type;
#define PyOrSimpleTreeLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSimpleTreeLearner_Type)
#define PyOrange_AsSimpleTreeLearner(op) (*(GCPtr< TSimpleTreeLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSomeValue_Type;
#define PyOrSomeValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSomeValue_Type)
#define PyOrange_AsSomeValue(op) (*(GCPtr< TSomeValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopDistributionClustering_Type;
#define PyOrStopDistributionClustering_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopDistributionClustering_Type)
#define PyOrange_AsStopDistributionClustering(op) (*(GCPtr< TStopDistributionClustering > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopDistributionClustering_binary_Type;
#define PyOrStopDistributionClustering_binary_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopDistributionClustering_binary_Type)
#define PyOrange_AsStopDistributionClustering_binary(op) (*(GCPtr< TStopDistributionClustering_binary > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopDistributionClustering_n_Type;
#define PyOrStopDistributionClustering_n_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopDistributionClustering_n_Type)
#define PyOrange_AsStopDistributionClustering_n(op) (*(GCPtr< TStopDistributionClustering_n > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopDistributionClustering_noBigChange_Type;
#define PyOrStopDistributionClustering_noBigChange_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopDistributionClustering_noBigChange_Type)
#define PyOrange_AsStopDistributionClustering_noBigChange(op) (*(GCPtr< TStopDistributionClustering_noBigChange > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopDistributionClustering_noProfit_Type;
#define PyOrStopDistributionClustering_noProfit_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopDistributionClustering_noProfit_Type)
#define PyOrange_AsStopDistributionClustering_noProfit(op) (*(GCPtr< TStopDistributionClustering_noProfit > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopIMClusteringByAssessor_Type;
#define PyOrStopIMClusteringByAssessor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopIMClusteringByAssessor_Type)
#define PyOrange_AsStopIMClusteringByAssessor(op) (*(GCPtr< TStopIMClusteringByAssessor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopIMClusteringByAssessor_binary_Type;
#define PyOrStopIMClusteringByAssessor_binary_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopIMClusteringByAssessor_binary_Type)
#define PyOrange_AsStopIMClusteringByAssessor_binary(op) (*(GCPtr< TStopIMClusteringByAssessor_binary > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopIMClusteringByAssessor_n_Type;
#define PyOrStopIMClusteringByAssessor_n_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopIMClusteringByAssessor_n_Type)
#define PyOrange_AsStopIMClusteringByAssessor_n(op) (*(GCPtr< TStopIMClusteringByAssessor_n > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopIMClusteringByAssessor_noBigChange_Type;
#define PyOrStopIMClusteringByAssessor_noBigChange_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopIMClusteringByAssessor_noBigChange_Type)
#define PyOrange_AsStopIMClusteringByAssessor_noBigChange(op) (*(GCPtr< TStopIMClusteringByAssessor_noBigChange > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStopIMClusteringByAssessor_noProfit_Type;
#define PyOrStopIMClusteringByAssessor_noProfit_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStopIMClusteringByAssessor_noProfit_Type)
#define PyOrange_AsStopIMClusteringByAssessor_noProfit(op) (*(GCPtr< TStopIMClusteringByAssessor_noProfit > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStringList_Type;
#define PyOrStringList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStringList_Type)
#define PyOrange_AsStringList(op) (*(GCPtr< TStringList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStringValue_Type;
#define PyOrStringValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStringValue_Type)
#define PyOrange_AsStringValue(op) (*(GCPtr< TStringValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrStringVariable_Type;
#define PyOrStringVariable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrStringVariable_Type)
#define PyOrange_AsStringVariable(op) (*(GCPtr< TStringVariable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_Type;
#define PyOrSubsetsGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_Type)
#define PyOrange_AsSubsetsGenerator(op) (*(GCPtr< TSubsetsGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_constSize_Type;
#define PyOrSubsetsGenerator_constSize_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_constSize_Type)
#define PyOrange_AsSubsetsGenerator_constSize(op) (*(GCPtr< TSubsetsGenerator_constSize > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_constSize_iterator_Type;
#define PyOrSubsetsGenerator_constSize_iterator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_constSize_iterator_Type)
#define PyOrange_AsSubsetsGenerator_constSize_iterator(op) (*(GCPtr< TSubsetsGenerator_constSize_iterator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_constant_Type;
#define PyOrSubsetsGenerator_constant_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_constant_Type)
#define PyOrange_AsSubsetsGenerator_constant(op) (*(GCPtr< TSubsetsGenerator_constant > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_constant_iterator_Type;
#define PyOrSubsetsGenerator_constant_iterator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_constant_iterator_Type)
#define PyOrange_AsSubsetsGenerator_constant_iterator(op) (*(GCPtr< TSubsetsGenerator_constant_iterator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_iterator_Type;
#define PyOrSubsetsGenerator_iterator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_iterator_Type)
#define PyOrange_AsSubsetsGenerator_iterator(op) (*(GCPtr< TSubsetsGenerator_iterator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_minMaxSize_Type;
#define PyOrSubsetsGenerator_minMaxSize_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_minMaxSize_Type)
#define PyOrange_AsSubsetsGenerator_minMaxSize(op) (*(GCPtr< TSubsetsGenerator_minMaxSize > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_minMaxSize_iterator_Type;
#define PyOrSubsetsGenerator_minMaxSize_iterator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_minMaxSize_iterator_Type)
#define PyOrange_AsSubsetsGenerator_minMaxSize_iterator(op) (*(GCPtr< TSubsetsGenerator_minMaxSize_iterator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_withRestrictions_Type;
#define PyOrSubsetsGenerator_withRestrictions_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_withRestrictions_Type)
#define PyOrange_AsSubsetsGenerator_withRestrictions(op) (*(GCPtr< TSubsetsGenerator_withRestrictions > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSubsetsGenerator_withRestrictions_iterator_Type;
#define PyOrSubsetsGenerator_withRestrictions_iterator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSubsetsGenerator_withRestrictions_iterator_Type)
#define PyOrange_AsSubsetsGenerator_withRestrictions_iterator(op) (*(GCPtr< TSubsetsGenerator_withRestrictions_iterator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrSymMatrix_Type;
#define PyOrSymMatrix_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrSymMatrix_Type)
#define PyOrange_AsSymMatrix(op) (*(GCPtr< TSymMatrix > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTabDelimExampleGenerator_Type;
#define PyOrTabDelimExampleGenerator_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTabDelimExampleGenerator_Type)
#define PyOrange_AsTabDelimExampleGenerator(op) (*(GCPtr< TTabDelimExampleGenerator > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTableAverager_Type;
#define PyOrTableAverager_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTableAverager_Type)
#define PyOrange_AsTableAverager(op) (*(GCPtr< TTableAverager > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrThresholdCA_Type;
#define PyOrThresholdCA_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrThresholdCA_Type)
#define PyOrange_AsThresholdCA(op) (*(GCPtr< TThresholdCA > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrThresholdDiscretizer_Type;
#define PyOrThresholdDiscretizer_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrThresholdDiscretizer_Type)
#define PyOrange_AsThresholdDiscretizer(op) (*(GCPtr< TThresholdDiscretizer > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTransformValue_Type;
#define PyOrTransformValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTransformValue_Type)
#define PyOrange_AsTransformValue(op) (*(GCPtr< TTransformValue > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTransformValue_IsDefined_Type;
#define PyOrTransformValue_IsDefined_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTransformValue_IsDefined_Type)
#define PyOrange_AsTransformValue_IsDefined(op) (*(GCPtr< TTransformValue_IsDefined > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeClassifier_Type;
#define PyOrTreeClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeClassifier_Type)
#define PyOrange_AsTreeClassifier(op) (*(GCPtr< TTreeClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeDescender_Type;
#define PyOrTreeDescender_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeDescender_Type)
#define PyOrange_AsTreeDescender(op) (*(GCPtr< TTreeDescender > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeDescender_UnknownMergeAsBranchSizes_Type;
#define PyOrTreeDescender_UnknownMergeAsBranchSizes_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeDescender_UnknownMergeAsBranchSizes_Type)
#define PyOrange_AsTreeDescender_UnknownMergeAsBranchSizes(op) (*(GCPtr< TTreeDescender_UnknownMergeAsBranchSizes > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeDescender_UnknownMergeAsSelector_Type;
#define PyOrTreeDescender_UnknownMergeAsSelector_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeDescender_UnknownMergeAsSelector_Type)
#define PyOrange_AsTreeDescender_UnknownMergeAsSelector(op) (*(GCPtr< TTreeDescender_UnknownMergeAsSelector > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeDescender_UnknownToBranch_Type;
#define PyOrTreeDescender_UnknownToBranch_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeDescender_UnknownToBranch_Type)
#define PyOrange_AsTreeDescender_UnknownToBranch(op) (*(GCPtr< TTreeDescender_UnknownToBranch > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeDescender_UnknownToCommonBranch_Type;
#define PyOrTreeDescender_UnknownToCommonBranch_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeDescender_UnknownToCommonBranch_Type)
#define PyOrange_AsTreeDescender_UnknownToCommonBranch(op) (*(GCPtr< TTreeDescender_UnknownToCommonBranch > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeDescender_UnknownToCommonSelector_Type;
#define PyOrTreeDescender_UnknownToCommonSelector_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeDescender_UnknownToCommonSelector_Type)
#define PyOrange_AsTreeDescender_UnknownToCommonSelector(op) (*(GCPtr< TTreeDescender_UnknownToCommonSelector > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_Type;
#define PyOrTreeExampleSplitter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_Type)
#define PyOrange_AsTreeExampleSplitter(op) (*(GCPtr< TTreeExampleSplitter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_IgnoreUnknowns_Type;
#define PyOrTreeExampleSplitter_IgnoreUnknowns_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_IgnoreUnknowns_Type)
#define PyOrange_AsTreeExampleSplitter_IgnoreUnknowns(op) (*(GCPtr< TTreeExampleSplitter_IgnoreUnknowns > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Type;
#define PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Type)
#define PyOrange_AsTreeExampleSplitter_UnknownsAsBranchSizes(op) (*(GCPtr< TTreeExampleSplitter_UnknownsAsBranchSizes > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_UnknownsAsSelector_Type;
#define PyOrTreeExampleSplitter_UnknownsAsSelector_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_UnknownsAsSelector_Type)
#define PyOrange_AsTreeExampleSplitter_UnknownsAsSelector(op) (*(GCPtr< TTreeExampleSplitter_UnknownsAsSelector > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_UnknownsToAll_Type;
#define PyOrTreeExampleSplitter_UnknownsToAll_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_UnknownsToAll_Type)
#define PyOrange_AsTreeExampleSplitter_UnknownsToAll(op) (*(GCPtr< TTreeExampleSplitter_UnknownsToAll > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_UnknownsToBranch_Type;
#define PyOrTreeExampleSplitter_UnknownsToBranch_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_UnknownsToBranch_Type)
#define PyOrange_AsTreeExampleSplitter_UnknownsToBranch(op) (*(GCPtr< TTreeExampleSplitter_UnknownsToBranch > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_UnknownsToCommon_Type;
#define PyOrTreeExampleSplitter_UnknownsToCommon_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_UnknownsToCommon_Type)
#define PyOrange_AsTreeExampleSplitter_UnknownsToCommon(op) (*(GCPtr< TTreeExampleSplitter_UnknownsToCommon > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeExampleSplitter_UnknownsToRandom_Type;
#define PyOrTreeExampleSplitter_UnknownsToRandom_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeExampleSplitter_UnknownsToRandom_Type)
#define PyOrange_AsTreeExampleSplitter_UnknownsToRandom(op) (*(GCPtr< TTreeExampleSplitter_UnknownsToRandom > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeLearner_Type;
#define PyOrTreeLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeLearner_Type)
#define PyOrange_AsTreeLearner(op) (*(GCPtr< TTreeLearner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeNode_Type;
#define PyOrTreeNode_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeNode_Type)
#define PyOrange_AsTreeNode(op) (*(GCPtr< TTreeNode > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeNodeList_Type;
#define PyOrTreeNodeList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeNodeList_Type)
#define PyOrange_AsTreeNodeList(op) (*(GCPtr< TTreeNodeList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreePruner_Type;
#define PyOrTreePruner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreePruner_Type)
#define PyOrange_AsTreePruner(op) (*(GCPtr< TTreePruner > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreePruner_SameMajority_Type;
#define PyOrTreePruner_SameMajority_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreePruner_SameMajority_Type)
#define PyOrange_AsTreePruner_SameMajority(op) (*(GCPtr< TTreePruner_SameMajority > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreePruner_m_Type;
#define PyOrTreePruner_m_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreePruner_m_Type)
#define PyOrange_AsTreePruner_m(op) (*(GCPtr< TTreePruner_m > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_Type;
#define PyOrTreeSplitConstructor_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_Type)
#define PyOrange_AsTreeSplitConstructor(op) (*(GCPtr< TTreeSplitConstructor > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_Attribute_Type;
#define PyOrTreeSplitConstructor_Attribute_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_Attribute_Type)
#define PyOrange_AsTreeSplitConstructor_Attribute(op) (*(GCPtr< TTreeSplitConstructor_Attribute > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_Combined_Type;
#define PyOrTreeSplitConstructor_Combined_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_Combined_Type)
#define PyOrange_AsTreeSplitConstructor_Combined(op) (*(GCPtr< TTreeSplitConstructor_Combined > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_ExhaustiveBinary_Type;
#define PyOrTreeSplitConstructor_ExhaustiveBinary_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_ExhaustiveBinary_Type)
#define PyOrange_AsTreeSplitConstructor_ExhaustiveBinary(op) (*(GCPtr< TTreeSplitConstructor_ExhaustiveBinary > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_Measure_Type;
#define PyOrTreeSplitConstructor_Measure_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_Measure_Type)
#define PyOrange_AsTreeSplitConstructor_Measure(op) (*(GCPtr< TTreeSplitConstructor_Measure > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_OneAgainstOthers_Type;
#define PyOrTreeSplitConstructor_OneAgainstOthers_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_OneAgainstOthers_Type)
#define PyOrange_AsTreeSplitConstructor_OneAgainstOthers(op) (*(GCPtr< TTreeSplitConstructor_OneAgainstOthers > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeSplitConstructor_Threshold_Type;
#define PyOrTreeSplitConstructor_Threshold_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeSplitConstructor_Threshold_Type)
#define PyOrange_AsTreeSplitConstructor_Threshold(op) (*(GCPtr< TTreeSplitConstructor_Threshold > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeStopCriteria_Type;
#define PyOrTreeStopCriteria_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeStopCriteria_Type)
#define PyOrange_AsTreeStopCriteria(op) (*(GCPtr< TTreeStopCriteria > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeStopCriteria_Python_Type;
#define PyOrTreeStopCriteria_Python_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeStopCriteria_Python_Type)
#define PyOrange_AsTreeStopCriteria_Python(op) (*(GCPtr< TTreeStopCriteria_Python > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrTreeStopCriteria_common_Type;
#define PyOrTreeStopCriteria_common_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrTreeStopCriteria_common_Type)
#define PyOrange_AsTreeStopCriteria_common(op) (*(GCPtr< TTreeStopCriteria_common > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValue_Type;
#define PyOrValue_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValue_Type)
extern ORANGE_API TOrangeType PyOrValueFilter_Type;
#define PyOrValueFilter_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueFilter_Type)
#define PyOrange_AsValueFilter(op) (*(GCPtr< TValueFilter > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValueFilterList_Type;
#define PyOrValueFilterList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueFilterList_Type)
#define PyOrange_AsValueFilterList(op) (*(GCPtr< TValueFilterList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValueFilter_continuous_Type;
#define PyOrValueFilter_continuous_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueFilter_continuous_Type)
#define PyOrange_AsValueFilter_continuous(op) (*(GCPtr< TValueFilter_continuous > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValueFilter_discrete_Type;
#define PyOrValueFilter_discrete_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueFilter_discrete_Type)
#define PyOrange_AsValueFilter_discrete(op) (*(GCPtr< TValueFilter_discrete > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValueFilter_string_Type;
#define PyOrValueFilter_string_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueFilter_string_Type)
#define PyOrange_AsValueFilter_string(op) (*(GCPtr< TValueFilter_string > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValueFilter_stringList_Type;
#define PyOrValueFilter_stringList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueFilter_stringList_Type)
#define PyOrange_AsValueFilter_stringList(op) (*(GCPtr< TValueFilter_stringList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrValueList_Type;
#define PyOrValueList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrValueList_Type)
#define PyOrange_AsValueList(op) (*(GCPtr< TValueList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrVarList_Type;
#define PyOrVarList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrVarList_Type)
#define PyOrange_AsVarList(op) (*(GCPtr< TVarList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrVarListList_Type;
#define PyOrVarListList_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrVarListList_Type)
#define PyOrange_AsVarListList(op) (*(GCPtr< TVarListList > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrVariable_Type;
#define PyOrVariable_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrVariable_Type)
#define PyOrange_AsVariable(op) (*(GCPtr< TVariable > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrVariableFilterMap_Type;
#define PyOrVariableFilterMap_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrVariableFilterMap_Type)
#define PyOrange_AsVariableFilterMap(op) (*(GCPtr< TVariableFilterMap > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrVariableFloatMap_Type;
#define PyOrVariableFloatMap_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrVariableFloatMap_Type)
#define PyOrange_AsVariableFloatMap(op) (*(GCPtr< TVariableFloatMap > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrkNNClassifier_Type;
#define PyOrkNNClassifier_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrkNNClassifier_Type)
#define PyOrange_AskNNClassifier(op) (*(GCPtr< TkNNClassifier > *)(void *)(&PyOrange_AS_Orange(op)))

extern ORANGE_API TOrangeType PyOrkNNLearner_Type;
#define PyOrkNNLearner_Check(op) PyObject_TypeCheck(op, (PyTypeObject *)&PyOrkNNLearner_Type)
#define PyOrange_AskNNLearner(op) (*(GCPtr< TkNNLearner > *)(void *)(&PyOrange_AS_Orange(op)))

#if defined(ORANGE_EXPORTS) || !defined(_MSC_VER)

  int cc_func_AlignmentList(PyObject *, void *);
  int ccn_func_AlignmentList(PyObject *, void *);
  #define cc_AlignmentList cc_func_AlignmentList
  #define ccn_AlignmentList ccn_func_AlignmentList

  int cc_func_AssessIMQuality(PyObject *, void *);
  int ccn_func_AssessIMQuality(PyObject *, void *);
  #define cc_AssessIMQuality cc_func_AssessIMQuality
  #define ccn_AssessIMQuality ccn_func_AssessIMQuality

  int cc_func_AssociationClassifier(PyObject *, void *);
  int ccn_func_AssociationClassifier(PyObject *, void *);
  #define cc_AssociationClassifier cc_func_AssociationClassifier
  #define ccn_AssociationClassifier ccn_func_AssociationClassifier

  int cc_func_AssociationLearner(PyObject *, void *);
  int ccn_func_AssociationLearner(PyObject *, void *);
  #define cc_AssociationLearner cc_func_AssociationLearner
  #define ccn_AssociationLearner ccn_func_AssociationLearner

  int cc_func_AssociationRule(PyObject *, void *);
  int ccn_func_AssociationRule(PyObject *, void *);
  #define cc_AssociationRule cc_func_AssociationRule
  #define ccn_AssociationRule ccn_func_AssociationRule

  int cc_func_AssociationRules(PyObject *, void *);
  int ccn_func_AssociationRules(PyObject *, void *);
  #define cc_AssociationRules cc_func_AssociationRules
  #define ccn_AssociationRules ccn_func_AssociationRules

  int cc_func_AssociationRulesInducer(PyObject *, void *);
  int ccn_func_AssociationRulesInducer(PyObject *, void *);
  #define cc_AssociationRulesInducer cc_func_AssociationRulesInducer
  #define ccn_AssociationRulesInducer ccn_func_AssociationRulesInducer

  int cc_func_AssociationRulesSparseInducer(PyObject *, void *);
  int ccn_func_AssociationRulesSparseInducer(PyObject *, void *);
  #define cc_AssociationRulesSparseInducer cc_func_AssociationRulesSparseInducer
  #define ccn_AssociationRulesSparseInducer ccn_func_AssociationRulesSparseInducer

  int cc_func_AttributedBoolList(PyObject *, void *);
  int ccn_func_AttributedBoolList(PyObject *, void *);
  #define cc_AttributedBoolList cc_func_AttributedBoolList
  #define ccn_AttributedBoolList ccn_func_AttributedBoolList

  int cc_func_AttributedFloatList(PyObject *, void *);
  int ccn_func_AttributedFloatList(PyObject *, void *);
  #define cc_AttributedFloatList cc_func_AttributedFloatList
  #define ccn_AttributedFloatList ccn_func_AttributedFloatList

  int cc_func_BasicAttrStat(PyObject *, void *);
  int ccn_func_BasicAttrStat(PyObject *, void *);
  #define cc_BasicAttrStat cc_func_BasicAttrStat
  #define ccn_BasicAttrStat ccn_func_BasicAttrStat

  int cc_func_BasketExampleGenerator(PyObject *, void *);
  int ccn_func_BasketExampleGenerator(PyObject *, void *);
  #define cc_BasketExampleGenerator cc_func_BasketExampleGenerator
  #define ccn_BasketExampleGenerator ccn_func_BasketExampleGenerator

  int cc_func_BasketFeeder(PyObject *, void *);
  int ccn_func_BasketFeeder(PyObject *, void *);
  #define cc_BasketFeeder cc_func_BasketFeeder
  #define ccn_BasketFeeder ccn_func_BasketFeeder

  int cc_func_BayesClassifier(PyObject *, void *);
  int ccn_func_BayesClassifier(PyObject *, void *);
  #define cc_BayesClassifier cc_func_BayesClassifier
  #define ccn_BayesClassifier ccn_func_BayesClassifier

  int cc_func_BayesLearner(PyObject *, void *);
  int ccn_func_BayesLearner(PyObject *, void *);
  #define cc_BayesLearner cc_func_BayesLearner
  #define ccn_BayesLearner ccn_func_BayesLearner

  int cc_func_BiModalDiscretization(PyObject *, void *);
  int ccn_func_BiModalDiscretization(PyObject *, void *);
  #define cc_BiModalDiscretization cc_func_BiModalDiscretization
  #define ccn_BiModalDiscretization ccn_func_BiModalDiscretization

  int cc_func_BiModalDiscretizer(PyObject *, void *);
  int ccn_func_BiModalDiscretizer(PyObject *, void *);
  #define cc_BiModalDiscretizer cc_func_BiModalDiscretizer
  #define ccn_BiModalDiscretizer ccn_func_BiModalDiscretizer

  int cc_func_BoolList(PyObject *, void *);
  int ccn_func_BoolList(PyObject *, void *);
  #define cc_BoolList cc_func_BoolList
  #define ccn_BoolList ccn_func_BoolList

  int cc_func_C45Classifier(PyObject *, void *);
  int ccn_func_C45Classifier(PyObject *, void *);
  #define cc_C45Classifier cc_func_C45Classifier
  #define ccn_C45Classifier ccn_func_C45Classifier

  int cc_func_C45ExampleGenerator(PyObject *, void *);
  int ccn_func_C45ExampleGenerator(PyObject *, void *);
  #define cc_C45ExampleGenerator cc_func_C45ExampleGenerator
  #define ccn_C45ExampleGenerator ccn_func_C45ExampleGenerator

  int cc_func_C45Learner(PyObject *, void *);
  int ccn_func_C45Learner(PyObject *, void *);
  #define cc_C45Learner cc_func_C45Learner
  #define ccn_C45Learner ccn_func_C45Learner

  int cc_func_C45TreeNode(PyObject *, void *);
  int ccn_func_C45TreeNode(PyObject *, void *);
  #define cc_C45TreeNode cc_func_C45TreeNode
  #define ccn_C45TreeNode ccn_func_C45TreeNode

  int cc_func_C45TreeNodeList(PyObject *, void *);
  int ccn_func_C45TreeNodeList(PyObject *, void *);
  #define cc_C45TreeNodeList cc_func_C45TreeNodeList
  #define ccn_C45TreeNodeList ccn_func_C45TreeNodeList

  int cc_func_CartesianClassifier(PyObject *, void *);
  int ccn_func_CartesianClassifier(PyObject *, void *);
  #define cc_CartesianClassifier cc_func_CartesianClassifier
  #define ccn_CartesianClassifier ccn_func_CartesianClassifier

  int cc_func_Classifier(PyObject *, void *);
  int ccn_func_Classifier(PyObject *, void *);
  #define cc_Classifier cc_func_Classifier
  #define ccn_Classifier ccn_func_Classifier

  int cc_func_ClassifierByExampleTable(PyObject *, void *);
  int ccn_func_ClassifierByExampleTable(PyObject *, void *);
  #define cc_ClassifierByExampleTable cc_func_ClassifierByExampleTable
  #define ccn_ClassifierByExampleTable ccn_func_ClassifierByExampleTable

  int cc_func_ClassifierByLookupTable(PyObject *, void *);
  int ccn_func_ClassifierByLookupTable(PyObject *, void *);
  #define cc_ClassifierByLookupTable cc_func_ClassifierByLookupTable
  #define ccn_ClassifierByLookupTable ccn_func_ClassifierByLookupTable

  int cc_func_ClassifierByLookupTable1(PyObject *, void *);
  int ccn_func_ClassifierByLookupTable1(PyObject *, void *);
  #define cc_ClassifierByLookupTable1 cc_func_ClassifierByLookupTable1
  #define ccn_ClassifierByLookupTable1 ccn_func_ClassifierByLookupTable1

  int cc_func_ClassifierByLookupTable2(PyObject *, void *);
  int ccn_func_ClassifierByLookupTable2(PyObject *, void *);
  #define cc_ClassifierByLookupTable2 cc_func_ClassifierByLookupTable2
  #define ccn_ClassifierByLookupTable2 ccn_func_ClassifierByLookupTable2

  int cc_func_ClassifierByLookupTable3(PyObject *, void *);
  int ccn_func_ClassifierByLookupTable3(PyObject *, void *);
  #define cc_ClassifierByLookupTable3 cc_func_ClassifierByLookupTable3
  #define ccn_ClassifierByLookupTable3 ccn_func_ClassifierByLookupTable3

  int cc_func_ClassifierFD(PyObject *, void *);
  int ccn_func_ClassifierFD(PyObject *, void *);
  #define cc_ClassifierFD cc_func_ClassifierFD
  #define ccn_ClassifierFD ccn_func_ClassifierFD

  int cc_func_ClassifierFromVar(PyObject *, void *);
  int ccn_func_ClassifierFromVar(PyObject *, void *);
  #define cc_ClassifierFromVar cc_func_ClassifierFromVar
  #define ccn_ClassifierFromVar ccn_func_ClassifierFromVar

  int cc_func_ClassifierFromVarFD(PyObject *, void *);
  int ccn_func_ClassifierFromVarFD(PyObject *, void *);
  #define cc_ClassifierFromVarFD cc_func_ClassifierFromVarFD
  #define ccn_ClassifierFromVarFD ccn_func_ClassifierFromVarFD

  int cc_func_ClassifierList(PyObject *, void *);
  int ccn_func_ClassifierList(PyObject *, void *);
  #define cc_ClassifierList cc_func_ClassifierList
  #define ccn_ClassifierList ccn_func_ClassifierList

  int cc_func_ClustersFromDistributions(PyObject *, void *);
  int ccn_func_ClustersFromDistributions(PyObject *, void *);
  #define cc_ClustersFromDistributions cc_func_ClustersFromDistributions
  #define ccn_ClustersFromDistributions ccn_func_ClustersFromDistributions

  int cc_func_ClustersFromDistributionsByAssessor(PyObject *, void *);
  int ccn_func_ClustersFromDistributionsByAssessor(PyObject *, void *);
  #define cc_ClustersFromDistributionsByAssessor cc_func_ClustersFromDistributionsByAssessor
  #define ccn_ClustersFromDistributionsByAssessor ccn_func_ClustersFromDistributionsByAssessor

  int cc_func_ClustersFromIM(PyObject *, void *);
  int ccn_func_ClustersFromIM(PyObject *, void *);
  #define cc_ClustersFromIM cc_func_ClustersFromIM
  #define ccn_ClustersFromIM ccn_func_ClustersFromIM

  int cc_func_ClustersFromIMByAssessor(PyObject *, void *);
  int ccn_func_ClustersFromIMByAssessor(PyObject *, void *);
  #define cc_ClustersFromIMByAssessor cc_func_ClustersFromIMByAssessor
  #define ccn_ClustersFromIMByAssessor ccn_func_ClustersFromIMByAssessor

  int cc_func_ColorIG(PyObject *, void *);
  int ccn_func_ColorIG(PyObject *, void *);
  #define cc_ColorIG cc_func_ColorIG
  #define ccn_ColorIG ccn_func_ColorIG

  int cc_func_ColorIG_MCF(PyObject *, void *);
  int ccn_func_ColorIG_MCF(PyObject *, void *);
  #define cc_ColorIG_MCF cc_func_ColorIG_MCF
  #define ccn_ColorIG_MCF ccn_func_ColorIG_MCF

  int cc_func_ColoredIG(PyObject *, void *);
  int ccn_func_ColoredIG(PyObject *, void *);
  #define cc_ColoredIG cc_func_ColoredIG
  #define ccn_ColoredIG ccn_func_ColoredIG

  int cc_func_ColumnAssessor(PyObject *, void *);
  int ccn_func_ColumnAssessor(PyObject *, void *);
  #define cc_ColumnAssessor cc_func_ColumnAssessor
  #define ccn_ColumnAssessor ccn_func_ColumnAssessor

  int cc_func_ColumnAssessor_Kramer(PyObject *, void *);
  int ccn_func_ColumnAssessor_Kramer(PyObject *, void *);
  #define cc_ColumnAssessor_Kramer cc_func_ColumnAssessor_Kramer
  #define ccn_ColumnAssessor_Kramer ccn_func_ColumnAssessor_Kramer

  int cc_func_ColumnAssessor_Laplace(PyObject *, void *);
  int ccn_func_ColumnAssessor_Laplace(PyObject *, void *);
  #define cc_ColumnAssessor_Laplace cc_func_ColumnAssessor_Laplace
  #define ccn_ColumnAssessor_Laplace ccn_func_ColumnAssessor_Laplace

  int cc_func_ColumnAssessor_Measure(PyObject *, void *);
  int ccn_func_ColumnAssessor_Measure(PyObject *, void *);
  #define cc_ColumnAssessor_Measure cc_func_ColumnAssessor_Measure
  #define ccn_ColumnAssessor_Measure ccn_func_ColumnAssessor_Measure

  int cc_func_ColumnAssessor_N(PyObject *, void *);
  int ccn_func_ColumnAssessor_N(PyObject *, void *);
  #define cc_ColumnAssessor_N cc_func_ColumnAssessor_N
  #define ccn_ColumnAssessor_N ccn_func_ColumnAssessor_N

  int cc_func_ColumnAssessor_Relief(PyObject *, void *);
  int ccn_func_ColumnAssessor_Relief(PyObject *, void *);
  #define cc_ColumnAssessor_Relief cc_func_ColumnAssessor_Relief
  #define ccn_ColumnAssessor_Relief ccn_func_ColumnAssessor_Relief

  int cc_func_ColumnAssessor_m(PyObject *, void *);
  int ccn_func_ColumnAssessor_m(PyObject *, void *);
  #define cc_ColumnAssessor_m cc_func_ColumnAssessor_m
  #define ccn_ColumnAssessor_m ccn_func_ColumnAssessor_m

  int cc_func_ColumnAssessor_mf(PyObject *, void *);
  int ccn_func_ColumnAssessor_mf(PyObject *, void *);
  #define cc_ColumnAssessor_mf cc_func_ColumnAssessor_mf
  #define ccn_ColumnAssessor_mf ccn_func_ColumnAssessor_mf

  int cc_func_ComputeDomainContingency(PyObject *, void *);
  int ccn_func_ComputeDomainContingency(PyObject *, void *);
  #define cc_ComputeDomainContingency cc_func_ComputeDomainContingency
  #define ccn_ComputeDomainContingency ccn_func_ComputeDomainContingency

  int cc_func_ConditionalProbabilityEstimator(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimator(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimator cc_func_ConditionalProbabilityEstimator
  #define ccn_ConditionalProbabilityEstimator ccn_func_ConditionalProbabilityEstimator

  int cc_func_ConditionalProbabilityEstimatorConstructor(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimatorConstructor(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimatorConstructor cc_func_ConditionalProbabilityEstimatorConstructor
  #define ccn_ConditionalProbabilityEstimatorConstructor ccn_func_ConditionalProbabilityEstimatorConstructor

  int cc_func_ConditionalProbabilityEstimatorConstructor_ByRows(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimatorConstructor_ByRows(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimatorConstructor_ByRows cc_func_ConditionalProbabilityEstimatorConstructor_ByRows
  #define ccn_ConditionalProbabilityEstimatorConstructor_ByRows ccn_func_ConditionalProbabilityEstimatorConstructor_ByRows

  int cc_func_ConditionalProbabilityEstimatorConstructor_loess(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimatorConstructor_loess(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimatorConstructor_loess cc_func_ConditionalProbabilityEstimatorConstructor_loess
  #define ccn_ConditionalProbabilityEstimatorConstructor_loess ccn_func_ConditionalProbabilityEstimatorConstructor_loess

  int cc_func_ConditionalProbabilityEstimatorList(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimatorList(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimatorList cc_func_ConditionalProbabilityEstimatorList
  #define ccn_ConditionalProbabilityEstimatorList ccn_func_ConditionalProbabilityEstimatorList

  int cc_func_ConditionalProbabilityEstimator_ByRows(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimator_ByRows(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimator_ByRows cc_func_ConditionalProbabilityEstimator_ByRows
  #define ccn_ConditionalProbabilityEstimator_ByRows ccn_func_ConditionalProbabilityEstimator_ByRows

  int cc_func_ConditionalProbabilityEstimator_FromDistribution(PyObject *, void *);
  int ccn_func_ConditionalProbabilityEstimator_FromDistribution(PyObject *, void *);
  #define cc_ConditionalProbabilityEstimator_FromDistribution cc_func_ConditionalProbabilityEstimator_FromDistribution
  #define ccn_ConditionalProbabilityEstimator_FromDistribution ccn_func_ConditionalProbabilityEstimator_FromDistribution

  int cc_func_ContDistribution(PyObject *, void *);
  int ccn_func_ContDistribution(PyObject *, void *);
  #define cc_ContDistribution cc_func_ContDistribution
  #define ccn_ContDistribution ccn_func_ContDistribution

  int cc_func_Contingency(PyObject *, void *);
  int ccn_func_Contingency(PyObject *, void *);
  #define cc_Contingency cc_func_Contingency
  #define ccn_Contingency ccn_func_Contingency

  int cc_func_ContingencyAttrAttr(PyObject *, void *);
  int ccn_func_ContingencyAttrAttr(PyObject *, void *);
  #define cc_ContingencyAttrAttr cc_func_ContingencyAttrAttr
  #define ccn_ContingencyAttrAttr ccn_func_ContingencyAttrAttr

  int cc_func_ContingencyAttrClass(PyObject *, void *);
  int ccn_func_ContingencyAttrClass(PyObject *, void *);
  #define cc_ContingencyAttrClass cc_func_ContingencyAttrClass
  #define ccn_ContingencyAttrClass ccn_func_ContingencyAttrClass

  int cc_func_ContingencyClass(PyObject *, void *);
  int ccn_func_ContingencyClass(PyObject *, void *);
  #define cc_ContingencyClass cc_func_ContingencyClass
  #define ccn_ContingencyClass ccn_func_ContingencyClass

  int cc_func_ContingencyClassAttr(PyObject *, void *);
  int ccn_func_ContingencyClassAttr(PyObject *, void *);
  #define cc_ContingencyClassAttr cc_func_ContingencyClassAttr
  #define ccn_ContingencyClassAttr ccn_func_ContingencyClassAttr

  int cc_func_CostLearner(PyObject *, void *);
  int ccn_func_CostLearner(PyObject *, void *);
  #define cc_CostLearner cc_func_CostLearner
  #define ccn_CostLearner ccn_func_CostLearner

  int cc_func_CostMatrix(PyObject *, void *);
  int ccn_func_CostMatrix(PyObject *, void *);
  #define cc_CostMatrix cc_func_CostMatrix
  #define ccn_CostMatrix ccn_func_CostMatrix

  int cc_func_CostWrapperClassifier(PyObject *, void *);
  int ccn_func_CostWrapperClassifier(PyObject *, void *);
  #define cc_CostWrapperClassifier cc_func_CostWrapperClassifier
  #define ccn_CostWrapperClassifier ccn_func_CostWrapperClassifier

  int cc_func_CostWrapperLearner(PyObject *, void *);
  int ccn_func_CostWrapperLearner(PyObject *, void *);
  #define cc_CostWrapperLearner cc_func_CostWrapperLearner
  #define ccn_CostWrapperLearner ccn_func_CostWrapperLearner

  int cc_func_DefaultClassifier(PyObject *, void *);
  int ccn_func_DefaultClassifier(PyObject *, void *);
  #define cc_DefaultClassifier cc_func_DefaultClassifier
  #define ccn_DefaultClassifier ccn_func_DefaultClassifier

  int cc_func_DiscDistribution(PyObject *, void *);
  int ccn_func_DiscDistribution(PyObject *, void *);
  #define cc_DiscDistribution cc_func_DiscDistribution
  #define ccn_DiscDistribution ccn_func_DiscDistribution

  int cc_func_Discrete2Continuous(PyObject *, void *);
  int ccn_func_Discrete2Continuous(PyObject *, void *);
  #define cc_Discrete2Continuous cc_func_Discrete2Continuous
  #define ccn_Discrete2Continuous ccn_func_Discrete2Continuous

  int cc_func_Discretization(PyObject *, void *);
  int ccn_func_Discretization(PyObject *, void *);
  #define cc_Discretization cc_func_Discretization
  #define ccn_Discretization ccn_func_Discretization

  int cc_func_Discretizer(PyObject *, void *);
  int ccn_func_Discretizer(PyObject *, void *);
  #define cc_Discretizer cc_func_Discretizer
  #define ccn_Discretizer ccn_func_Discretizer

  int cc_func_DistanceMap(PyObject *, void *);
  int ccn_func_DistanceMap(PyObject *, void *);
  #define cc_DistanceMap cc_func_DistanceMap
  #define ccn_DistanceMap ccn_func_DistanceMap

  int cc_func_DistanceMapConstructor(PyObject *, void *);
  int ccn_func_DistanceMapConstructor(PyObject *, void *);
  #define cc_DistanceMapConstructor cc_func_DistanceMapConstructor
  #define ccn_DistanceMapConstructor ccn_func_DistanceMapConstructor

  int cc_func_Distribution(PyObject *, void *);
  int ccn_func_Distribution(PyObject *, void *);
  #define cc_Distribution cc_func_Distribution
  #define ccn_Distribution ccn_func_Distribution

  int cc_func_DistributionAssessor(PyObject *, void *);
  int ccn_func_DistributionAssessor(PyObject *, void *);
  #define cc_DistributionAssessor cc_func_DistributionAssessor
  #define ccn_DistributionAssessor ccn_func_DistributionAssessor

  int cc_func_DistributionAssessor_Kramer(PyObject *, void *);
  int ccn_func_DistributionAssessor_Kramer(PyObject *, void *);
  #define cc_DistributionAssessor_Kramer cc_func_DistributionAssessor_Kramer
  #define ccn_DistributionAssessor_Kramer ccn_func_DistributionAssessor_Kramer

  int cc_func_DistributionAssessor_Laplace(PyObject *, void *);
  int ccn_func_DistributionAssessor_Laplace(PyObject *, void *);
  #define cc_DistributionAssessor_Laplace cc_func_DistributionAssessor_Laplace
  #define ccn_DistributionAssessor_Laplace ccn_func_DistributionAssessor_Laplace

  int cc_func_DistributionAssessor_Measure(PyObject *, void *);
  int ccn_func_DistributionAssessor_Measure(PyObject *, void *);
  #define cc_DistributionAssessor_Measure cc_func_DistributionAssessor_Measure
  #define ccn_DistributionAssessor_Measure ccn_func_DistributionAssessor_Measure

  int cc_func_DistributionAssessor_Relief(PyObject *, void *);
  int ccn_func_DistributionAssessor_Relief(PyObject *, void *);
  #define cc_DistributionAssessor_Relief cc_func_DistributionAssessor_Relief
  #define ccn_DistributionAssessor_Relief ccn_func_DistributionAssessor_Relief

  int cc_func_DistributionAssessor_m(PyObject *, void *);
  int ccn_func_DistributionAssessor_m(PyObject *, void *);
  #define cc_DistributionAssessor_m cc_func_DistributionAssessor_m
  #define ccn_DistributionAssessor_m ccn_func_DistributionAssessor_m

  int cc_func_DistributionAssessor_mf(PyObject *, void *);
  int ccn_func_DistributionAssessor_mf(PyObject *, void *);
  #define cc_DistributionAssessor_mf cc_func_DistributionAssessor_mf
  #define ccn_DistributionAssessor_mf ccn_func_DistributionAssessor_mf

  int cc_func_DistributionList(PyObject *, void *);
  int ccn_func_DistributionList(PyObject *, void *);
  #define cc_DistributionList cc_func_DistributionList
  #define ccn_DistributionList ccn_func_DistributionList

  int cc_func_Domain(PyObject *, void *);
  int ccn_func_Domain(PyObject *, void *);
  #define cc_Domain cc_func_Domain
  #define ccn_Domain ccn_func_Domain

  int cc_func_DomainBasicAttrStat(PyObject *, void *);
  int ccn_func_DomainBasicAttrStat(PyObject *, void *);
  #define cc_DomainBasicAttrStat cc_func_DomainBasicAttrStat
  #define ccn_DomainBasicAttrStat ccn_func_DomainBasicAttrStat

  int cc_func_DomainContingency(PyObject *, void *);
  int ccn_func_DomainContingency(PyObject *, void *);
  #define cc_DomainContingency cc_func_DomainContingency
  #define ccn_DomainContingency ccn_func_DomainContingency

  int cc_func_DomainContinuizer(PyObject *, void *);
  int ccn_func_DomainContinuizer(PyObject *, void *);
  #define cc_DomainContinuizer cc_func_DomainContinuizer
  #define ccn_DomainContinuizer ccn_func_DomainContinuizer

  int cc_func_DomainDistributions(PyObject *, void *);
  int ccn_func_DomainDistributions(PyObject *, void *);
  #define cc_DomainDistributions cc_func_DomainDistributions
  #define ccn_DomainDistributions ccn_func_DomainDistributions

  int cc_func_DomainTransformerConstructor(PyObject *, void *);
  int ccn_func_DomainTransformerConstructor(PyObject *, void *);
  #define cc_DomainTransformerConstructor cc_func_DomainTransformerConstructor
  #define ccn_DomainTransformerConstructor ccn_func_DomainTransformerConstructor

  int cc_func_EFMDataDescription(PyObject *, void *);
  int ccn_func_EFMDataDescription(PyObject *, void *);
  #define cc_EFMDataDescription cc_func_EFMDataDescription
  #define ccn_EFMDataDescription ccn_func_EFMDataDescription

  int cc_func_EVDist(PyObject *, void *);
  int ccn_func_EVDist(PyObject *, void *);
  #define cc_EVDist cc_func_EVDist
  #define ccn_EVDist ccn_func_EVDist

  int cc_func_EVDistGetter(PyObject *, void *);
  int ccn_func_EVDistGetter(PyObject *, void *);
  #define cc_EVDistGetter cc_func_EVDistGetter
  #define ccn_EVDistGetter ccn_func_EVDistGetter

  int cc_func_EVDistGetter_Standard(PyObject *, void *);
  int ccn_func_EVDistGetter_Standard(PyObject *, void *);
  #define cc_EVDistGetter_Standard cc_func_EVDistGetter_Standard
  #define ccn_EVDistGetter_Standard ccn_func_EVDistGetter_Standard

  int cc_func_EVDistList(PyObject *, void *);
  int ccn_func_EVDistList(PyObject *, void *);
  #define cc_EVDistList cc_func_EVDistList
  #define ccn_EVDistList ccn_func_EVDistList

  int cc_func_EarthClassifier(PyObject *, void *);
  int ccn_func_EarthClassifier(PyObject *, void *);
  #define cc_EarthClassifier cc_func_EarthClassifier
  #define ccn_EarthClassifier ccn_func_EarthClassifier

  int cc_func_EarthLearner(PyObject *, void *);
  int ccn_func_EarthLearner(PyObject *, void *);
  #define cc_EarthLearner cc_func_EarthLearner
  #define ccn_EarthLearner ccn_func_EarthLearner

  int cc_func_EntropyDiscretization(PyObject *, void *);
  int ccn_func_EntropyDiscretization(PyObject *, void *);
  #define cc_EntropyDiscretization cc_func_EntropyDiscretization
  #define ccn_EntropyDiscretization ccn_func_EntropyDiscretization

  int cc_func_EnumVariable(PyObject *, void *);
  int ccn_func_EnumVariable(PyObject *, void *);
  #define cc_EnumVariable cc_func_EnumVariable
  #define ccn_EnumVariable ccn_func_EnumVariable

  int cc_func_EquiDistDiscretization(PyObject *, void *);
  int ccn_func_EquiDistDiscretization(PyObject *, void *);
  #define cc_EquiDistDiscretization cc_func_EquiDistDiscretization
  #define ccn_EquiDistDiscretization ccn_func_EquiDistDiscretization

  int cc_func_EquiDistDiscretizer(PyObject *, void *);
  int ccn_func_EquiDistDiscretizer(PyObject *, void *);
  #define cc_EquiDistDiscretizer cc_func_EquiDistDiscretizer
  #define ccn_EquiDistDiscretizer ccn_func_EquiDistDiscretizer

  int cc_func_EquiNDiscretization(PyObject *, void *);
  int ccn_func_EquiNDiscretization(PyObject *, void *);
  #define cc_EquiNDiscretization cc_func_EquiNDiscretization
  #define ccn_EquiNDiscretization ccn_func_EquiNDiscretization

  int cc_func_ExampleCluster(PyObject *, void *);
  int ccn_func_ExampleCluster(PyObject *, void *);
  #define cc_ExampleCluster cc_func_ExampleCluster
  #define ccn_ExampleCluster ccn_func_ExampleCluster

  int cc_func_ExampleClusters(PyObject *, void *);
  int ccn_func_ExampleClusters(PyObject *, void *);
  #define cc_ExampleClusters cc_func_ExampleClusters
  #define ccn_ExampleClusters ccn_func_ExampleClusters

  int cc_func_ExampleDistBySorting(PyObject *, void *);
  int ccn_func_ExampleDistBySorting(PyObject *, void *);
  #define cc_ExampleDistBySorting cc_func_ExampleDistBySorting
  #define ccn_ExampleDistBySorting ccn_func_ExampleDistBySorting

  int cc_func_ExampleDistConstructor(PyObject *, void *);
  int ccn_func_ExampleDistConstructor(PyObject *, void *);
  #define cc_ExampleDistConstructor cc_func_ExampleDistConstructor
  #define ccn_ExampleDistConstructor ccn_func_ExampleDistConstructor

  int cc_func_ExampleDistVector(PyObject *, void *);
  int ccn_func_ExampleDistVector(PyObject *, void *);
  #define cc_ExampleDistVector cc_func_ExampleDistVector
  #define ccn_ExampleDistVector ccn_func_ExampleDistVector

  int cc_func_ExampleGenerator(PyObject *, void *);
  int ccn_func_ExampleGenerator(PyObject *, void *);
  #define cc_ExampleGenerator cc_func_ExampleGenerator
  #define ccn_ExampleGenerator ccn_func_ExampleGenerator

  int cc_func_ExampleGeneratorList(PyObject *, void *);
  int ccn_func_ExampleGeneratorList(PyObject *, void *);
  #define cc_ExampleGeneratorList cc_func_ExampleGeneratorList
  #define ccn_ExampleGeneratorList ccn_func_ExampleGeneratorList

  int cc_func_ExampleTable(PyObject *, void *);
  int ccn_func_ExampleTable(PyObject *, void *);
  #define cc_ExampleTable cc_func_ExampleTable
  #define ccn_ExampleTable ccn_func_ExampleTable

  int cc_func_ExamplesDistance(PyObject *, void *);
  int ccn_func_ExamplesDistance(PyObject *, void *);
  #define cc_ExamplesDistance cc_func_ExamplesDistance
  #define ccn_ExamplesDistance ccn_func_ExamplesDistance

  int cc_func_ExamplesDistanceConstructor(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor cc_func_ExamplesDistanceConstructor
  #define ccn_ExamplesDistanceConstructor ccn_func_ExamplesDistanceConstructor

  int cc_func_ExamplesDistanceConstructor_DTW(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_DTW(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_DTW cc_func_ExamplesDistanceConstructor_DTW
  #define ccn_ExamplesDistanceConstructor_DTW ccn_func_ExamplesDistanceConstructor_DTW

  int cc_func_ExamplesDistanceConstructor_Euclidean(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_Euclidean(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_Euclidean cc_func_ExamplesDistanceConstructor_Euclidean
  #define ccn_ExamplesDistanceConstructor_Euclidean ccn_func_ExamplesDistanceConstructor_Euclidean

  int cc_func_ExamplesDistanceConstructor_Hamming(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_Hamming(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_Hamming cc_func_ExamplesDistanceConstructor_Hamming
  #define ccn_ExamplesDistanceConstructor_Hamming ccn_func_ExamplesDistanceConstructor_Hamming

  int cc_func_ExamplesDistanceConstructor_Lp(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_Lp(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_Lp cc_func_ExamplesDistanceConstructor_Lp
  #define ccn_ExamplesDistanceConstructor_Lp ccn_func_ExamplesDistanceConstructor_Lp

  int cc_func_ExamplesDistanceConstructor_Manhattan(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_Manhattan(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_Manhattan cc_func_ExamplesDistanceConstructor_Manhattan
  #define ccn_ExamplesDistanceConstructor_Manhattan ccn_func_ExamplesDistanceConstructor_Manhattan

  int cc_func_ExamplesDistanceConstructor_Maximal(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_Maximal(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_Maximal cc_func_ExamplesDistanceConstructor_Maximal
  #define ccn_ExamplesDistanceConstructor_Maximal ccn_func_ExamplesDistanceConstructor_Maximal

  int cc_func_ExamplesDistanceConstructor_Relief(PyObject *, void *);
  int ccn_func_ExamplesDistanceConstructor_Relief(PyObject *, void *);
  #define cc_ExamplesDistanceConstructor_Relief cc_func_ExamplesDistanceConstructor_Relief
  #define ccn_ExamplesDistanceConstructor_Relief ccn_func_ExamplesDistanceConstructor_Relief

  int cc_func_ExamplesDistance_DTW(PyObject *, void *);
  int ccn_func_ExamplesDistance_DTW(PyObject *, void *);
  #define cc_ExamplesDistance_DTW cc_func_ExamplesDistance_DTW
  #define ccn_ExamplesDistance_DTW ccn_func_ExamplesDistance_DTW

  int cc_func_ExamplesDistance_Euclidean(PyObject *, void *);
  int ccn_func_ExamplesDistance_Euclidean(PyObject *, void *);
  #define cc_ExamplesDistance_Euclidean cc_func_ExamplesDistance_Euclidean
  #define ccn_ExamplesDistance_Euclidean ccn_func_ExamplesDistance_Euclidean

  int cc_func_ExamplesDistance_Hamming(PyObject *, void *);
  int ccn_func_ExamplesDistance_Hamming(PyObject *, void *);
  #define cc_ExamplesDistance_Hamming cc_func_ExamplesDistance_Hamming
  #define ccn_ExamplesDistance_Hamming ccn_func_ExamplesDistance_Hamming

  int cc_func_ExamplesDistance_Lp(PyObject *, void *);
  int ccn_func_ExamplesDistance_Lp(PyObject *, void *);
  #define cc_ExamplesDistance_Lp cc_func_ExamplesDistance_Lp
  #define ccn_ExamplesDistance_Lp ccn_func_ExamplesDistance_Lp

  int cc_func_ExamplesDistance_Manhattan(PyObject *, void *);
  int ccn_func_ExamplesDistance_Manhattan(PyObject *, void *);
  #define cc_ExamplesDistance_Manhattan cc_func_ExamplesDistance_Manhattan
  #define ccn_ExamplesDistance_Manhattan ccn_func_ExamplesDistance_Manhattan

  int cc_func_ExamplesDistance_Maximal(PyObject *, void *);
  int ccn_func_ExamplesDistance_Maximal(PyObject *, void *);
  #define cc_ExamplesDistance_Maximal cc_func_ExamplesDistance_Maximal
  #define ccn_ExamplesDistance_Maximal ccn_func_ExamplesDistance_Maximal

  int cc_func_ExamplesDistance_Normalized(PyObject *, void *);
  int ccn_func_ExamplesDistance_Normalized(PyObject *, void *);
  #define cc_ExamplesDistance_Normalized cc_func_ExamplesDistance_Normalized
  #define ccn_ExamplesDistance_Normalized ccn_func_ExamplesDistance_Normalized

  int cc_func_ExamplesDistance_Relief(PyObject *, void *);
  int ccn_func_ExamplesDistance_Relief(PyObject *, void *);
  #define cc_ExamplesDistance_Relief cc_func_ExamplesDistance_Relief
  #define ccn_ExamplesDistance_Relief ccn_func_ExamplesDistance_Relief

  int cc_func_FeatureByDistributions(PyObject *, void *);
  int ccn_func_FeatureByDistributions(PyObject *, void *);
  #define cc_FeatureByDistributions cc_func_FeatureByDistributions
  #define ccn_FeatureByDistributions ccn_func_FeatureByDistributions

  int cc_func_FeatureByIM(PyObject *, void *);
  int ccn_func_FeatureByIM(PyObject *, void *);
  #define cc_FeatureByIM cc_func_FeatureByIM
  #define ccn_FeatureByIM ccn_func_FeatureByIM

  int cc_func_FeatureByMinComplexity(PyObject *, void *);
  int ccn_func_FeatureByMinComplexity(PyObject *, void *);
  #define cc_FeatureByMinComplexity cc_func_FeatureByMinComplexity
  #define ccn_FeatureByMinComplexity ccn_func_FeatureByMinComplexity

  int cc_func_FeatureInducer(PyObject *, void *);
  int ccn_func_FeatureInducer(PyObject *, void *);
  #define cc_FeatureInducer cc_func_FeatureInducer
  #define ccn_FeatureInducer ccn_func_FeatureInducer

  int cc_func_FileExampleGenerator(PyObject *, void *);
  int ccn_func_FileExampleGenerator(PyObject *, void *);
  #define cc_FileExampleGenerator cc_func_FileExampleGenerator
  #define ccn_FileExampleGenerator ccn_func_FileExampleGenerator

  int cc_func_Filter(PyObject *, void *);
  int ccn_func_Filter(PyObject *, void *);
  #define cc_Filter cc_func_Filter
  #define ccn_Filter ccn_func_Filter

  int cc_func_FilterList(PyObject *, void *);
  int ccn_func_FilterList(PyObject *, void *);
  #define cc_FilterList cc_func_FilterList
  #define ccn_FilterList ccn_func_FilterList

  int cc_func_Filter_conjunction(PyObject *, void *);
  int ccn_func_Filter_conjunction(PyObject *, void *);
  #define cc_Filter_conjunction cc_func_Filter_conjunction
  #define ccn_Filter_conjunction ccn_func_Filter_conjunction

  int cc_func_Filter_disjunction(PyObject *, void *);
  int ccn_func_Filter_disjunction(PyObject *, void *);
  #define cc_Filter_disjunction cc_func_Filter_disjunction
  #define ccn_Filter_disjunction ccn_func_Filter_disjunction

  int cc_func_Filter_hasClassValue(PyObject *, void *);
  int ccn_func_Filter_hasClassValue(PyObject *, void *);
  #define cc_Filter_hasClassValue cc_func_Filter_hasClassValue
  #define ccn_Filter_hasClassValue ccn_func_Filter_hasClassValue

  int cc_func_Filter_hasMeta(PyObject *, void *);
  int ccn_func_Filter_hasMeta(PyObject *, void *);
  #define cc_Filter_hasMeta cc_func_Filter_hasMeta
  #define ccn_Filter_hasMeta ccn_func_Filter_hasMeta

  int cc_func_Filter_hasSpecial(PyObject *, void *);
  int ccn_func_Filter_hasSpecial(PyObject *, void *);
  #define cc_Filter_hasSpecial cc_func_Filter_hasSpecial
  #define ccn_Filter_hasSpecial ccn_func_Filter_hasSpecial

  int cc_func_Filter_isDefined(PyObject *, void *);
  int ccn_func_Filter_isDefined(PyObject *, void *);
  #define cc_Filter_isDefined cc_func_Filter_isDefined
  #define ccn_Filter_isDefined ccn_func_Filter_isDefined

  int cc_func_Filter_random(PyObject *, void *);
  int ccn_func_Filter_random(PyObject *, void *);
  #define cc_Filter_random cc_func_Filter_random
  #define ccn_Filter_random ccn_func_Filter_random

  int cc_func_Filter_sameValue(PyObject *, void *);
  int ccn_func_Filter_sameValue(PyObject *, void *);
  #define cc_Filter_sameValue cc_func_Filter_sameValue
  #define ccn_Filter_sameValue ccn_func_Filter_sameValue

  int cc_func_Filter_values(PyObject *, void *);
  int ccn_func_Filter_values(PyObject *, void *);
  #define cc_Filter_values cc_func_Filter_values
  #define ccn_Filter_values ccn_func_Filter_values

  int cc_func_FindNearest(PyObject *, void *);
  int ccn_func_FindNearest(PyObject *, void *);
  #define cc_FindNearest cc_func_FindNearest
  #define ccn_FindNearest ccn_func_FindNearest

  int cc_func_FindNearestConstructor(PyObject *, void *);
  int ccn_func_FindNearestConstructor(PyObject *, void *);
  #define cc_FindNearestConstructor cc_func_FindNearestConstructor
  #define ccn_FindNearestConstructor ccn_func_FindNearestConstructor

  int cc_func_FindNearestConstructor_BruteForce(PyObject *, void *);
  int ccn_func_FindNearestConstructor_BruteForce(PyObject *, void *);
  #define cc_FindNearestConstructor_BruteForce cc_func_FindNearestConstructor_BruteForce
  #define ccn_FindNearestConstructor_BruteForce ccn_func_FindNearestConstructor_BruteForce

  int cc_func_FindNearest_BruteForce(PyObject *, void *);
  int ccn_func_FindNearest_BruteForce(PyObject *, void *);
  #define cc_FindNearest_BruteForce cc_func_FindNearest_BruteForce
  #define ccn_FindNearest_BruteForce ccn_func_FindNearest_BruteForce

  int cc_func_FloatFloatList(PyObject *, void *);
  int ccn_func_FloatFloatList(PyObject *, void *);
  #define cc_FloatFloatList cc_func_FloatFloatList
  #define ccn_FloatFloatList ccn_func_FloatFloatList

  int cc_func_FloatList(PyObject *, void *);
  int ccn_func_FloatList(PyObject *, void *);
  #define cc_FloatList cc_func_FloatList
  #define ccn_FloatList ccn_func_FloatList

  int cc_func_FloatListList(PyObject *, void *);
  int ccn_func_FloatListList(PyObject *, void *);
  #define cc_FloatListList cc_func_FloatListList
  #define ccn_FloatListList ccn_func_FloatListList

  int cc_func_FloatVariable(PyObject *, void *);
  int ccn_func_FloatVariable(PyObject *, void *);
  #define cc_FloatVariable cc_func_FloatVariable
  #define ccn_FloatVariable ccn_func_FloatVariable

  int cc_func_GaussianDistribution(PyObject *, void *);
  int ccn_func_GaussianDistribution(PyObject *, void *);
  #define cc_GaussianDistribution cc_func_GaussianDistribution
  #define ccn_GaussianDistribution ccn_func_GaussianDistribution

  int cc_func_GeneralExampleClustering(PyObject *, void *);
  int ccn_func_GeneralExampleClustering(PyObject *, void *);
  #define cc_GeneralExampleClustering cc_func_GeneralExampleClustering
  #define ccn_GeneralExampleClustering ccn_func_GeneralExampleClustering

  int cc_func_Graph(PyObject *, void *);
  int ccn_func_Graph(PyObject *, void *);
  #define cc_Graph cc_func_Graph
  #define ccn_Graph ccn_func_Graph

  int cc_func_GraphAsList(PyObject *, void *);
  int ccn_func_GraphAsList(PyObject *, void *);
  #define cc_GraphAsList cc_func_GraphAsList
  #define ccn_GraphAsList ccn_func_GraphAsList

  int cc_func_GraphAsMatrix(PyObject *, void *);
  int ccn_func_GraphAsMatrix(PyObject *, void *);
  #define cc_GraphAsMatrix cc_func_GraphAsMatrix
  #define ccn_GraphAsMatrix ccn_func_GraphAsMatrix

  int cc_func_GraphAsTree(PyObject *, void *);
  int ccn_func_GraphAsTree(PyObject *, void *);
  #define cc_GraphAsTree cc_func_GraphAsTree
  #define ccn_GraphAsTree ccn_func_GraphAsTree

  int cc_func_HierarchicalCluster(PyObject *, void *);
  int ccn_func_HierarchicalCluster(PyObject *, void *);
  #define cc_HierarchicalCluster cc_func_HierarchicalCluster
  #define ccn_HierarchicalCluster ccn_func_HierarchicalCluster

  int cc_func_HierarchicalClusterList(PyObject *, void *);
  int ccn_func_HierarchicalClusterList(PyObject *, void *);
  #define cc_HierarchicalClusterList cc_func_HierarchicalClusterList
  #define ccn_HierarchicalClusterList ccn_func_HierarchicalClusterList

  int cc_func_HierarchicalClusterOrdering(PyObject *, void *);
  int ccn_func_HierarchicalClusterOrdering(PyObject *, void *);
  #define cc_HierarchicalClusterOrdering cc_func_HierarchicalClusterOrdering
  #define ccn_HierarchicalClusterOrdering ccn_func_HierarchicalClusterOrdering

  int cc_func_HierarchicalClustering(PyObject *, void *);
  int ccn_func_HierarchicalClustering(PyObject *, void *);
  #define cc_HierarchicalClustering cc_func_HierarchicalClustering
  #define ccn_HierarchicalClustering ccn_func_HierarchicalClustering

  int cc_func_IG(PyObject *, void *);
  int ccn_func_IG(PyObject *, void *);
  #define cc_IG cc_func_IG
  #define ccn_IG ccn_func_IG

  int cc_func_IGBySorting(PyObject *, void *);
  int ccn_func_IGBySorting(PyObject *, void *);
  #define cc_IGBySorting cc_func_IGBySorting
  #define ccn_IGBySorting ccn_func_IGBySorting

  int cc_func_IGConstructor(PyObject *, void *);
  int ccn_func_IGConstructor(PyObject *, void *);
  #define cc_IGConstructor cc_func_IGConstructor
  #define ccn_IGConstructor ccn_func_IGConstructor

  int cc_func_IM(PyObject *, void *);
  int ccn_func_IM(PyObject *, void *);
  #define cc_IM cc_func_IM
  #define ccn_IM ccn_func_IM

  int cc_func_IMBlurer(PyObject *, void *);
  int ccn_func_IMBlurer(PyObject *, void *);
  #define cc_IMBlurer cc_func_IMBlurer
  #define ccn_IMBlurer ccn_func_IMBlurer

  int cc_func_IMByIMByRows(PyObject *, void *);
  int ccn_func_IMByIMByRows(PyObject *, void *);
  #define cc_IMByIMByRows cc_func_IMByIMByRows
  #define ccn_IMByIMByRows ccn_func_IMByIMByRows

  int cc_func_IMByRelief(PyObject *, void *);
  int ccn_func_IMByRelief(PyObject *, void *);
  #define cc_IMByRelief cc_func_IMByRelief
  #define ccn_IMByRelief ccn_func_IMByRelief

  int cc_func_IMByRows(PyObject *, void *);
  int ccn_func_IMByRows(PyObject *, void *);
  #define cc_IMByRows cc_func_IMByRows
  #define ccn_IMByRows ccn_func_IMByRows

  int cc_func_IMByRowsByRelief(PyObject *, void *);
  int ccn_func_IMByRowsByRelief(PyObject *, void *);
  #define cc_IMByRowsByRelief cc_func_IMByRowsByRelief
  #define ccn_IMByRowsByRelief ccn_func_IMByRowsByRelief

  int cc_func_IMByRowsBySorting(PyObject *, void *);
  int ccn_func_IMByRowsBySorting(PyObject *, void *);
  #define cc_IMByRowsBySorting cc_func_IMByRowsBySorting
  #define ccn_IMByRowsBySorting ccn_func_IMByRowsBySorting

  int cc_func_IMByRowsConstructor(PyObject *, void *);
  int ccn_func_IMByRowsConstructor(PyObject *, void *);
  #define cc_IMByRowsConstructor cc_func_IMByRowsConstructor
  #define ccn_IMByRowsConstructor ccn_func_IMByRowsConstructor

  int cc_func_IMByRowsPreprocessor(PyObject *, void *);
  int ccn_func_IMByRowsPreprocessor(PyObject *, void *);
  #define cc_IMByRowsPreprocessor cc_func_IMByRowsPreprocessor
  #define ccn_IMByRowsPreprocessor ccn_func_IMByRowsPreprocessor

  int cc_func_IMBySorting(PyObject *, void *);
  int ccn_func_IMBySorting(PyObject *, void *);
  #define cc_IMBySorting cc_func_IMBySorting
  #define ccn_IMBySorting ccn_func_IMBySorting

  int cc_func_IMClustering(PyObject *, void *);
  int ccn_func_IMClustering(PyObject *, void *);
  #define cc_IMClustering cc_func_IMClustering
  #define ccn_IMClustering ccn_func_IMClustering

  int cc_func_IMConstructor(PyObject *, void *);
  int ccn_func_IMConstructor(PyObject *, void *);
  #define cc_IMConstructor cc_func_IMConstructor
  #define ccn_IMConstructor ccn_func_IMConstructor

  int cc_func_ImputeClassifier(PyObject *, void *);
  int ccn_func_ImputeClassifier(PyObject *, void *);
  #define cc_ImputeClassifier cc_func_ImputeClassifier
  #define ccn_ImputeClassifier ccn_func_ImputeClassifier

  int cc_func_Imputer(PyObject *, void *);
  int ccn_func_Imputer(PyObject *, void *);
  #define cc_Imputer cc_func_Imputer
  #define ccn_Imputer ccn_func_Imputer

  int cc_func_ImputerConstructor(PyObject *, void *);
  int ccn_func_ImputerConstructor(PyObject *, void *);
  #define cc_ImputerConstructor cc_func_ImputerConstructor
  #define ccn_ImputerConstructor ccn_func_ImputerConstructor

  int cc_func_ImputerConstructor_asValue(PyObject *, void *);
  int ccn_func_ImputerConstructor_asValue(PyObject *, void *);
  #define cc_ImputerConstructor_asValue cc_func_ImputerConstructor_asValue
  #define ccn_ImputerConstructor_asValue ccn_func_ImputerConstructor_asValue

  int cc_func_ImputerConstructor_average(PyObject *, void *);
  int ccn_func_ImputerConstructor_average(PyObject *, void *);
  #define cc_ImputerConstructor_average cc_func_ImputerConstructor_average
  #define ccn_ImputerConstructor_average ccn_func_ImputerConstructor_average

  int cc_func_ImputerConstructor_maximal(PyObject *, void *);
  int ccn_func_ImputerConstructor_maximal(PyObject *, void *);
  #define cc_ImputerConstructor_maximal cc_func_ImputerConstructor_maximal
  #define ccn_ImputerConstructor_maximal ccn_func_ImputerConstructor_maximal

  int cc_func_ImputerConstructor_minimal(PyObject *, void *);
  int ccn_func_ImputerConstructor_minimal(PyObject *, void *);
  #define cc_ImputerConstructor_minimal cc_func_ImputerConstructor_minimal
  #define ccn_ImputerConstructor_minimal ccn_func_ImputerConstructor_minimal

  int cc_func_ImputerConstructor_model(PyObject *, void *);
  int ccn_func_ImputerConstructor_model(PyObject *, void *);
  #define cc_ImputerConstructor_model cc_func_ImputerConstructor_model
  #define ccn_ImputerConstructor_model ccn_func_ImputerConstructor_model

  int cc_func_ImputerConstructor_random(PyObject *, void *);
  int ccn_func_ImputerConstructor_random(PyObject *, void *);
  #define cc_ImputerConstructor_random cc_func_ImputerConstructor_random
  #define ccn_ImputerConstructor_random ccn_func_ImputerConstructor_random

  int cc_func_Imputer_asValue(PyObject *, void *);
  int ccn_func_Imputer_asValue(PyObject *, void *);
  #define cc_Imputer_asValue cc_func_Imputer_asValue
  #define ccn_Imputer_asValue ccn_func_Imputer_asValue

  int cc_func_Imputer_defaults(PyObject *, void *);
  int ccn_func_Imputer_defaults(PyObject *, void *);
  #define cc_Imputer_defaults cc_func_Imputer_defaults
  #define ccn_Imputer_defaults ccn_func_Imputer_defaults

  int cc_func_Imputer_model(PyObject *, void *);
  int ccn_func_Imputer_model(PyObject *, void *);
  #define cc_Imputer_model cc_func_Imputer_model
  #define ccn_Imputer_model ccn_func_Imputer_model

  int cc_func_Imputer_random(PyObject *, void *);
  int ccn_func_Imputer_random(PyObject *, void *);
  #define cc_Imputer_random cc_func_Imputer_random
  #define ccn_Imputer_random ccn_func_Imputer_random

  int cc_func_IntFloatList(PyObject *, void *);
  int ccn_func_IntFloatList(PyObject *, void *);
  #define cc_IntFloatList cc_func_IntFloatList
  #define ccn_IntFloatList ccn_func_IntFloatList

  int cc_func_IntList(PyObject *, void *);
  int ccn_func_IntList(PyObject *, void *);
  #define cc_IntList cc_func_IntList
  #define ccn_IntList ccn_func_IntList

  int cc_func_IntervalDiscretizer(PyObject *, void *);
  int ccn_func_IntervalDiscretizer(PyObject *, void *);
  #define cc_IntervalDiscretizer cc_func_IntervalDiscretizer
  #define ccn_IntervalDiscretizer ccn_func_IntervalDiscretizer

  int cc_func_ItemsetNodeProxy(PyObject *, void *);
  int ccn_func_ItemsetNodeProxy(PyObject *, void *);
  #define cc_ItemsetNodeProxy cc_func_ItemsetNodeProxy
  #define ccn_ItemsetNodeProxy ccn_func_ItemsetNodeProxy

  int cc_func_ItemsetsSparseInducer(PyObject *, void *);
  int ccn_func_ItemsetsSparseInducer(PyObject *, void *);
  #define cc_ItemsetsSparseInducer cc_func_ItemsetsSparseInducer
  #define ccn_ItemsetsSparseInducer ccn_func_ItemsetsSparseInducer

  int cc_func_KernelFunc(PyObject *, void *);
  int ccn_func_KernelFunc(PyObject *, void *);
  #define cc_KernelFunc cc_func_KernelFunc
  #define ccn_KernelFunc ccn_func_KernelFunc

  int cc_func_Learner(PyObject *, void *);
  int ccn_func_Learner(PyObject *, void *);
  #define cc_Learner cc_func_Learner
  #define ccn_Learner ccn_func_Learner

  int cc_func_LearnerFD(PyObject *, void *);
  int ccn_func_LearnerFD(PyObject *, void *);
  #define cc_LearnerFD cc_func_LearnerFD
  #define ccn_LearnerFD ccn_func_LearnerFD

  int cc_func_LinearClassifier(PyObject *, void *);
  int ccn_func_LinearClassifier(PyObject *, void *);
  #define cc_LinearClassifier cc_func_LinearClassifier
  #define ccn_LinearClassifier ccn_func_LinearClassifier

  int cc_func_LinearLearner(PyObject *, void *);
  int ccn_func_LinearLearner(PyObject *, void *);
  #define cc_LinearLearner cc_func_LinearLearner
  #define ccn_LinearLearner ccn_func_LinearLearner

  int cc_func_LogRegClassifier(PyObject *, void *);
  int ccn_func_LogRegClassifier(PyObject *, void *);
  #define cc_LogRegClassifier cc_func_LogRegClassifier
  #define ccn_LogRegClassifier ccn_func_LogRegClassifier

  int cc_func_LogRegFitter(PyObject *, void *);
  int ccn_func_LogRegFitter(PyObject *, void *);
  #define cc_LogRegFitter cc_func_LogRegFitter
  #define ccn_LogRegFitter ccn_func_LogRegFitter

  int cc_func_LogRegFitter_Cholesky(PyObject *, void *);
  int ccn_func_LogRegFitter_Cholesky(PyObject *, void *);
  #define cc_LogRegFitter_Cholesky cc_func_LogRegFitter_Cholesky
  #define ccn_LogRegFitter_Cholesky ccn_func_LogRegFitter_Cholesky

  int cc_func_LogRegLearner(PyObject *, void *);
  int ccn_func_LogRegLearner(PyObject *, void *);
  #define cc_LogRegLearner cc_func_LogRegLearner
  #define ccn_LogRegLearner ccn_func_LogRegLearner

  int cc_func_LongList(PyObject *, void *);
  int ccn_func_LongList(PyObject *, void *);
  #define cc_LongList cc_func_LongList
  #define ccn_LongList ccn_func_LongList

  int cc_func_LookupLearner(PyObject *, void *);
  int ccn_func_LookupLearner(PyObject *, void *);
  #define cc_LookupLearner cc_func_LookupLearner
  #define ccn_LookupLearner ccn_func_LookupLearner

  int cc_func_MajorityLearner(PyObject *, void *);
  int ccn_func_MajorityLearner(PyObject *, void *);
  #define cc_MajorityLearner cc_func_MajorityLearner
  #define ccn_MajorityLearner ccn_func_MajorityLearner

  int cc_func_MakeRandomIndices(PyObject *, void *);
  int ccn_func_MakeRandomIndices(PyObject *, void *);
  #define cc_MakeRandomIndices cc_func_MakeRandomIndices
  #define ccn_MakeRandomIndices ccn_func_MakeRandomIndices

  int cc_func_MakeRandomIndices2(PyObject *, void *);
  int ccn_func_MakeRandomIndices2(PyObject *, void *);
  #define cc_MakeRandomIndices2 cc_func_MakeRandomIndices2
  #define ccn_MakeRandomIndices2 ccn_func_MakeRandomIndices2

  int cc_func_MakeRandomIndicesCV(PyObject *, void *);
  int ccn_func_MakeRandomIndicesCV(PyObject *, void *);
  #define cc_MakeRandomIndicesCV cc_func_MakeRandomIndicesCV
  #define ccn_MakeRandomIndicesCV ccn_func_MakeRandomIndicesCV

  int cc_func_MakeRandomIndicesMultiple(PyObject *, void *);
  int ccn_func_MakeRandomIndicesMultiple(PyObject *, void *);
  #define cc_MakeRandomIndicesMultiple cc_func_MakeRandomIndicesMultiple
  #define ccn_MakeRandomIndicesMultiple ccn_func_MakeRandomIndicesMultiple

  int cc_func_MakeRandomIndicesN(PyObject *, void *);
  int ccn_func_MakeRandomIndicesN(PyObject *, void *);
  #define cc_MakeRandomIndicesN cc_func_MakeRandomIndicesN
  #define ccn_MakeRandomIndicesN ccn_func_MakeRandomIndicesN

  int cc_func_MapIntValue(PyObject *, void *);
  int ccn_func_MapIntValue(PyObject *, void *);
  #define cc_MapIntValue cc_func_MapIntValue
  #define ccn_MapIntValue ccn_func_MapIntValue

  int cc_func_MeasureAttribute(PyObject *, void *);
  int ccn_func_MeasureAttribute(PyObject *, void *);
  #define cc_MeasureAttribute cc_func_MeasureAttribute
  #define ccn_MeasureAttribute ccn_func_MeasureAttribute

  int cc_func_MeasureAttributeFromProbabilities(PyObject *, void *);
  int ccn_func_MeasureAttributeFromProbabilities(PyObject *, void *);
  #define cc_MeasureAttributeFromProbabilities cc_func_MeasureAttributeFromProbabilities
  #define ccn_MeasureAttributeFromProbabilities ccn_func_MeasureAttributeFromProbabilities

  int cc_func_MeasureAttribute_IM(PyObject *, void *);
  int ccn_func_MeasureAttribute_IM(PyObject *, void *);
  #define cc_MeasureAttribute_IM cc_func_MeasureAttribute_IM
  #define ccn_MeasureAttribute_IM ccn_func_MeasureAttribute_IM

  int cc_func_MeasureAttribute_MSE(PyObject *, void *);
  int ccn_func_MeasureAttribute_MSE(PyObject *, void *);
  #define cc_MeasureAttribute_MSE cc_func_MeasureAttribute_MSE
  #define ccn_MeasureAttribute_MSE ccn_func_MeasureAttribute_MSE

  int cc_func_MeasureAttribute_chiSquare(PyObject *, void *);
  int ccn_func_MeasureAttribute_chiSquare(PyObject *, void *);
  #define cc_MeasureAttribute_chiSquare cc_func_MeasureAttribute_chiSquare
  #define ccn_MeasureAttribute_chiSquare ccn_func_MeasureAttribute_chiSquare

  int cc_func_MeasureAttribute_cost(PyObject *, void *);
  int ccn_func_MeasureAttribute_cost(PyObject *, void *);
  #define cc_MeasureAttribute_cost cc_func_MeasureAttribute_cost
  #define ccn_MeasureAttribute_cost ccn_func_MeasureAttribute_cost

  int cc_func_MeasureAttribute_gainRatio(PyObject *, void *);
  int ccn_func_MeasureAttribute_gainRatio(PyObject *, void *);
  #define cc_MeasureAttribute_gainRatio cc_func_MeasureAttribute_gainRatio
  #define ccn_MeasureAttribute_gainRatio ccn_func_MeasureAttribute_gainRatio

  int cc_func_MeasureAttribute_gainRatioA(PyObject *, void *);
  int ccn_func_MeasureAttribute_gainRatioA(PyObject *, void *);
  #define cc_MeasureAttribute_gainRatioA cc_func_MeasureAttribute_gainRatioA
  #define ccn_MeasureAttribute_gainRatioA ccn_func_MeasureAttribute_gainRatioA

  int cc_func_MeasureAttribute_gini(PyObject *, void *);
  int ccn_func_MeasureAttribute_gini(PyObject *, void *);
  #define cc_MeasureAttribute_gini cc_func_MeasureAttribute_gini
  #define ccn_MeasureAttribute_gini ccn_func_MeasureAttribute_gini

  int cc_func_MeasureAttribute_info(PyObject *, void *);
  int ccn_func_MeasureAttribute_info(PyObject *, void *);
  #define cc_MeasureAttribute_info cc_func_MeasureAttribute_info
  #define ccn_MeasureAttribute_info ccn_func_MeasureAttribute_info

  int cc_func_MeasureAttribute_logOddsRatio(PyObject *, void *);
  int ccn_func_MeasureAttribute_logOddsRatio(PyObject *, void *);
  #define cc_MeasureAttribute_logOddsRatio cc_func_MeasureAttribute_logOddsRatio
  #define ccn_MeasureAttribute_logOddsRatio ccn_func_MeasureAttribute_logOddsRatio

  int cc_func_MeasureAttribute_relevance(PyObject *, void *);
  int ccn_func_MeasureAttribute_relevance(PyObject *, void *);
  #define cc_MeasureAttribute_relevance cc_func_MeasureAttribute_relevance
  #define ccn_MeasureAttribute_relevance ccn_func_MeasureAttribute_relevance

  int cc_func_MeasureAttribute_relief(PyObject *, void *);
  int ccn_func_MeasureAttribute_relief(PyObject *, void *);
  #define cc_MeasureAttribute_relief cc_func_MeasureAttribute_relief
  #define ccn_MeasureAttribute_relief ccn_func_MeasureAttribute_relief

  int cc_func_NormalizeContinuous(PyObject *, void *);
  int ccn_func_NormalizeContinuous(PyObject *, void *);
  #define cc_NormalizeContinuous cc_func_NormalizeContinuous
  #define ccn_NormalizeContinuous ccn_func_NormalizeContinuous

  int cc_func_Orange(PyObject *, void *);
  int ccn_func_Orange(PyObject *, void *);
  #define cc_Orange cc_func_Orange
  #define ccn_Orange ccn_func_Orange

  int cc_func_Ordinal2Continuous(PyObject *, void *);
  int ccn_func_Ordinal2Continuous(PyObject *, void *);
  #define cc_Ordinal2Continuous cc_func_Ordinal2Continuous
  #define ccn_Ordinal2Continuous ccn_func_Ordinal2Continuous

  int cc_func_P2NN(PyObject *, void *);
  int ccn_func_P2NN(PyObject *, void *);
  #define cc_P2NN cc_func_P2NN
  #define ccn_P2NN ccn_func_P2NN

  int cc_func_PearsonCorrelation(PyObject *, void *);
  int ccn_func_PearsonCorrelation(PyObject *, void *);
  #define cc_PearsonCorrelation cc_func_PearsonCorrelation
  #define ccn_PearsonCorrelation ccn_func_PearsonCorrelation

  int cc_func_Preprocessor(PyObject *, void *);
  int ccn_func_Preprocessor(PyObject *, void *);
  #define cc_Preprocessor cc_func_Preprocessor
  #define ccn_Preprocessor ccn_func_Preprocessor

  int cc_func_Preprocessor_addCensorWeight(PyObject *, void *);
  int ccn_func_Preprocessor_addCensorWeight(PyObject *, void *);
  #define cc_Preprocessor_addCensorWeight cc_func_Preprocessor_addCensorWeight
  #define ccn_Preprocessor_addCensorWeight ccn_func_Preprocessor_addCensorWeight

  int cc_func_Preprocessor_addClassNoise(PyObject *, void *);
  int ccn_func_Preprocessor_addClassNoise(PyObject *, void *);
  #define cc_Preprocessor_addClassNoise cc_func_Preprocessor_addClassNoise
  #define ccn_Preprocessor_addClassNoise ccn_func_Preprocessor_addClassNoise

  int cc_func_Preprocessor_addClassWeight(PyObject *, void *);
  int ccn_func_Preprocessor_addClassWeight(PyObject *, void *);
  #define cc_Preprocessor_addClassWeight cc_func_Preprocessor_addClassWeight
  #define ccn_Preprocessor_addClassWeight ccn_func_Preprocessor_addClassWeight

  int cc_func_Preprocessor_addGaussianClassNoise(PyObject *, void *);
  int ccn_func_Preprocessor_addGaussianClassNoise(PyObject *, void *);
  #define cc_Preprocessor_addGaussianClassNoise cc_func_Preprocessor_addGaussianClassNoise
  #define ccn_Preprocessor_addGaussianClassNoise ccn_func_Preprocessor_addGaussianClassNoise

  int cc_func_Preprocessor_addGaussianNoise(PyObject *, void *);
  int ccn_func_Preprocessor_addGaussianNoise(PyObject *, void *);
  #define cc_Preprocessor_addGaussianNoise cc_func_Preprocessor_addGaussianNoise
  #define ccn_Preprocessor_addGaussianNoise ccn_func_Preprocessor_addGaussianNoise

  int cc_func_Preprocessor_addMissing(PyObject *, void *);
  int ccn_func_Preprocessor_addMissing(PyObject *, void *);
  #define cc_Preprocessor_addMissing cc_func_Preprocessor_addMissing
  #define ccn_Preprocessor_addMissing ccn_func_Preprocessor_addMissing

  int cc_func_Preprocessor_addMissingClasses(PyObject *, void *);
  int ccn_func_Preprocessor_addMissingClasses(PyObject *, void *);
  #define cc_Preprocessor_addMissingClasses cc_func_Preprocessor_addMissingClasses
  #define ccn_Preprocessor_addMissingClasses ccn_func_Preprocessor_addMissingClasses

  int cc_func_Preprocessor_addNoise(PyObject *, void *);
  int ccn_func_Preprocessor_addNoise(PyObject *, void *);
  #define cc_Preprocessor_addNoise cc_func_Preprocessor_addNoise
  #define ccn_Preprocessor_addNoise ccn_func_Preprocessor_addNoise

  int cc_func_Preprocessor_discretize(PyObject *, void *);
  int ccn_func_Preprocessor_discretize(PyObject *, void *);
  #define cc_Preprocessor_discretize cc_func_Preprocessor_discretize
  #define ccn_Preprocessor_discretize ccn_func_Preprocessor_discretize

  int cc_func_Preprocessor_drop(PyObject *, void *);
  int ccn_func_Preprocessor_drop(PyObject *, void *);
  #define cc_Preprocessor_drop cc_func_Preprocessor_drop
  #define ccn_Preprocessor_drop ccn_func_Preprocessor_drop

  int cc_func_Preprocessor_dropMissing(PyObject *, void *);
  int ccn_func_Preprocessor_dropMissing(PyObject *, void *);
  #define cc_Preprocessor_dropMissing cc_func_Preprocessor_dropMissing
  #define ccn_Preprocessor_dropMissing ccn_func_Preprocessor_dropMissing

  int cc_func_Preprocessor_dropMissingClasses(PyObject *, void *);
  int ccn_func_Preprocessor_dropMissingClasses(PyObject *, void *);
  #define cc_Preprocessor_dropMissingClasses cc_func_Preprocessor_dropMissingClasses
  #define ccn_Preprocessor_dropMissingClasses ccn_func_Preprocessor_dropMissingClasses

  int cc_func_Preprocessor_filter(PyObject *, void *);
  int ccn_func_Preprocessor_filter(PyObject *, void *);
  #define cc_Preprocessor_filter cc_func_Preprocessor_filter
  #define ccn_Preprocessor_filter ccn_func_Preprocessor_filter

  int cc_func_Preprocessor_ignore(PyObject *, void *);
  int ccn_func_Preprocessor_ignore(PyObject *, void *);
  #define cc_Preprocessor_ignore cc_func_Preprocessor_ignore
  #define ccn_Preprocessor_ignore ccn_func_Preprocessor_ignore

  int cc_func_Preprocessor_imputeByLearner(PyObject *, void *);
  int ccn_func_Preprocessor_imputeByLearner(PyObject *, void *);
  #define cc_Preprocessor_imputeByLearner cc_func_Preprocessor_imputeByLearner
  #define ccn_Preprocessor_imputeByLearner ccn_func_Preprocessor_imputeByLearner

  int cc_func_Preprocessor_removeDuplicates(PyObject *, void *);
  int ccn_func_Preprocessor_removeDuplicates(PyObject *, void *);
  #define cc_Preprocessor_removeDuplicates cc_func_Preprocessor_removeDuplicates
  #define ccn_Preprocessor_removeDuplicates ccn_func_Preprocessor_removeDuplicates

  int cc_func_Preprocessor_select(PyObject *, void *);
  int ccn_func_Preprocessor_select(PyObject *, void *);
  #define cc_Preprocessor_select cc_func_Preprocessor_select
  #define ccn_Preprocessor_select ccn_func_Preprocessor_select

  int cc_func_Preprocessor_shuffle(PyObject *, void *);
  int ccn_func_Preprocessor_shuffle(PyObject *, void *);
  #define cc_Preprocessor_shuffle cc_func_Preprocessor_shuffle
  #define ccn_Preprocessor_shuffle ccn_func_Preprocessor_shuffle

  int cc_func_Preprocessor_take(PyObject *, void *);
  int ccn_func_Preprocessor_take(PyObject *, void *);
  #define cc_Preprocessor_take cc_func_Preprocessor_take
  #define ccn_Preprocessor_take ccn_func_Preprocessor_take

  int cc_func_Preprocessor_takeMissing(PyObject *, void *);
  int ccn_func_Preprocessor_takeMissing(PyObject *, void *);
  #define cc_Preprocessor_takeMissing cc_func_Preprocessor_takeMissing
  #define ccn_Preprocessor_takeMissing ccn_func_Preprocessor_takeMissing

  int cc_func_Preprocessor_takeMissingClasses(PyObject *, void *);
  int ccn_func_Preprocessor_takeMissingClasses(PyObject *, void *);
  #define cc_Preprocessor_takeMissingClasses cc_func_Preprocessor_takeMissingClasses
  #define ccn_Preprocessor_takeMissingClasses ccn_func_Preprocessor_takeMissingClasses

  int cc_func_ProbabilityEstimator(PyObject *, void *);
  int ccn_func_ProbabilityEstimator(PyObject *, void *);
  #define cc_ProbabilityEstimator cc_func_ProbabilityEstimator
  #define ccn_ProbabilityEstimator ccn_func_ProbabilityEstimator

  int cc_func_ProbabilityEstimatorConstructor(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorConstructor(PyObject *, void *);
  #define cc_ProbabilityEstimatorConstructor cc_func_ProbabilityEstimatorConstructor
  #define ccn_ProbabilityEstimatorConstructor ccn_func_ProbabilityEstimatorConstructor

  int cc_func_ProbabilityEstimatorConstructor_Laplace(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorConstructor_Laplace(PyObject *, void *);
  #define cc_ProbabilityEstimatorConstructor_Laplace cc_func_ProbabilityEstimatorConstructor_Laplace
  #define ccn_ProbabilityEstimatorConstructor_Laplace ccn_func_ProbabilityEstimatorConstructor_Laplace

  int cc_func_ProbabilityEstimatorConstructor_kernel(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorConstructor_kernel(PyObject *, void *);
  #define cc_ProbabilityEstimatorConstructor_kernel cc_func_ProbabilityEstimatorConstructor_kernel
  #define ccn_ProbabilityEstimatorConstructor_kernel ccn_func_ProbabilityEstimatorConstructor_kernel

  int cc_func_ProbabilityEstimatorConstructor_loess(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorConstructor_loess(PyObject *, void *);
  #define cc_ProbabilityEstimatorConstructor_loess cc_func_ProbabilityEstimatorConstructor_loess
  #define ccn_ProbabilityEstimatorConstructor_loess ccn_func_ProbabilityEstimatorConstructor_loess

  int cc_func_ProbabilityEstimatorConstructor_m(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorConstructor_m(PyObject *, void *);
  #define cc_ProbabilityEstimatorConstructor_m cc_func_ProbabilityEstimatorConstructor_m
  #define ccn_ProbabilityEstimatorConstructor_m ccn_func_ProbabilityEstimatorConstructor_m

  int cc_func_ProbabilityEstimatorConstructor_relative(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorConstructor_relative(PyObject *, void *);
  #define cc_ProbabilityEstimatorConstructor_relative cc_func_ProbabilityEstimatorConstructor_relative
  #define ccn_ProbabilityEstimatorConstructor_relative ccn_func_ProbabilityEstimatorConstructor_relative

  int cc_func_ProbabilityEstimatorList(PyObject *, void *);
  int ccn_func_ProbabilityEstimatorList(PyObject *, void *);
  #define cc_ProbabilityEstimatorList cc_func_ProbabilityEstimatorList
  #define ccn_ProbabilityEstimatorList ccn_func_ProbabilityEstimatorList

  int cc_func_ProbabilityEstimator_FromDistribution(PyObject *, void *);
  int ccn_func_ProbabilityEstimator_FromDistribution(PyObject *, void *);
  #define cc_ProbabilityEstimator_FromDistribution cc_func_ProbabilityEstimator_FromDistribution
  #define ccn_ProbabilityEstimator_FromDistribution ccn_func_ProbabilityEstimator_FromDistribution

  int cc_func_ProgressCallback(PyObject *, void *);
  int ccn_func_ProgressCallback(PyObject *, void *);
  #define cc_ProgressCallback cc_func_ProgressCallback
  #define ccn_ProgressCallback ccn_func_ProgressCallback

  int cc_func_PythonValue(PyObject *, void *);
  int ccn_func_PythonValue(PyObject *, void *);
  #define cc_PythonValue cc_func_PythonValue
  #define ccn_PythonValue ccn_func_PythonValue

  int cc_func_PythonValueSpecial(PyObject *, void *);
  int ccn_func_PythonValueSpecial(PyObject *, void *);
  #define cc_PythonValueSpecial cc_func_PythonValueSpecial
  #define ccn_PythonValueSpecial ccn_func_PythonValueSpecial

  int cc_func_PythonVariable(PyObject *, void *);
  int ccn_func_PythonVariable(PyObject *, void *);
  #define cc_PythonVariable cc_func_PythonVariable
  #define ccn_PythonVariable ccn_func_PythonVariable

  int cc_func_RandomClassifier(PyObject *, void *);
  int ccn_func_RandomClassifier(PyObject *, void *);
  #define cc_RandomClassifier cc_func_RandomClassifier
  #define ccn_RandomClassifier ccn_func_RandomClassifier

  int cc_func_RandomGenerator(PyObject *, void *);
  int ccn_func_RandomGenerator(PyObject *, void *);
  #define cc_RandomGenerator cc_func_RandomGenerator
  #define ccn_RandomGenerator ccn_func_RandomGenerator

  int cc_func_RandomLearner(PyObject *, void *);
  int ccn_func_RandomLearner(PyObject *, void *);
  #define cc_RandomLearner cc_func_RandomLearner
  #define ccn_RandomLearner ccn_func_RandomLearner

  int cc_func_RemoveRedundant(PyObject *, void *);
  int ccn_func_RemoveRedundant(PyObject *, void *);
  #define cc_RemoveRedundant cc_func_RemoveRedundant
  #define ccn_RemoveRedundant ccn_func_RemoveRedundant

  int cc_func_RemoveRedundantByInduction(PyObject *, void *);
  int ccn_func_RemoveRedundantByInduction(PyObject *, void *);
  #define cc_RemoveRedundantByInduction cc_func_RemoveRedundantByInduction
  #define ccn_RemoveRedundantByInduction ccn_func_RemoveRedundantByInduction

  int cc_func_RemoveRedundantByQuality(PyObject *, void *);
  int ccn_func_RemoveRedundantByQuality(PyObject *, void *);
  #define cc_RemoveRedundantByQuality cc_func_RemoveRedundantByQuality
  #define ccn_RemoveRedundantByQuality ccn_func_RemoveRedundantByQuality

  int cc_func_RemoveRedundantOneValue(PyObject *, void *);
  int ccn_func_RemoveRedundantOneValue(PyObject *, void *);
  #define cc_RemoveRedundantOneValue cc_func_RemoveRedundantOneValue
  #define ccn_RemoveRedundantOneValue ccn_func_RemoveRedundantOneValue

  int cc_func_RemoveUnusedValues(PyObject *, void *);
  int ccn_func_RemoveUnusedValues(PyObject *, void *);
  #define cc_RemoveUnusedValues cc_func_RemoveUnusedValues
  #define ccn_RemoveUnusedValues ccn_func_RemoveUnusedValues

  int cc_func_Rule(PyObject *, void *);
  int ccn_func_Rule(PyObject *, void *);
  #define cc_Rule cc_func_Rule
  #define ccn_Rule ccn_func_Rule

  int cc_func_RuleBeamCandidateSelector(PyObject *, void *);
  int ccn_func_RuleBeamCandidateSelector(PyObject *, void *);
  #define cc_RuleBeamCandidateSelector cc_func_RuleBeamCandidateSelector
  #define ccn_RuleBeamCandidateSelector ccn_func_RuleBeamCandidateSelector

  int cc_func_RuleBeamCandidateSelector_TakeAll(PyObject *, void *);
  int ccn_func_RuleBeamCandidateSelector_TakeAll(PyObject *, void *);
  #define cc_RuleBeamCandidateSelector_TakeAll cc_func_RuleBeamCandidateSelector_TakeAll
  #define ccn_RuleBeamCandidateSelector_TakeAll ccn_func_RuleBeamCandidateSelector_TakeAll

  int cc_func_RuleBeamFilter(PyObject *, void *);
  int ccn_func_RuleBeamFilter(PyObject *, void *);
  #define cc_RuleBeamFilter cc_func_RuleBeamFilter
  #define ccn_RuleBeamFilter ccn_func_RuleBeamFilter

  int cc_func_RuleBeamFilter_Width(PyObject *, void *);
  int ccn_func_RuleBeamFilter_Width(PyObject *, void *);
  #define cc_RuleBeamFilter_Width cc_func_RuleBeamFilter_Width
  #define ccn_RuleBeamFilter_Width ccn_func_RuleBeamFilter_Width

  int cc_func_RuleBeamFinder(PyObject *, void *);
  int ccn_func_RuleBeamFinder(PyObject *, void *);
  #define cc_RuleBeamFinder cc_func_RuleBeamFinder
  #define ccn_RuleBeamFinder ccn_func_RuleBeamFinder

  int cc_func_RuleBeamInitializer(PyObject *, void *);
  int ccn_func_RuleBeamInitializer(PyObject *, void *);
  #define cc_RuleBeamInitializer cc_func_RuleBeamInitializer
  #define ccn_RuleBeamInitializer ccn_func_RuleBeamInitializer

  int cc_func_RuleBeamInitializer_Default(PyObject *, void *);
  int ccn_func_RuleBeamInitializer_Default(PyObject *, void *);
  #define cc_RuleBeamInitializer_Default cc_func_RuleBeamInitializer_Default
  #define ccn_RuleBeamInitializer_Default ccn_func_RuleBeamInitializer_Default

  int cc_func_RuleBeamRefiner(PyObject *, void *);
  int ccn_func_RuleBeamRefiner(PyObject *, void *);
  #define cc_RuleBeamRefiner cc_func_RuleBeamRefiner
  #define ccn_RuleBeamRefiner ccn_func_RuleBeamRefiner

  int cc_func_RuleBeamRefiner_Selector(PyObject *, void *);
  int ccn_func_RuleBeamRefiner_Selector(PyObject *, void *);
  #define cc_RuleBeamRefiner_Selector cc_func_RuleBeamRefiner_Selector
  #define ccn_RuleBeamRefiner_Selector ccn_func_RuleBeamRefiner_Selector

  int cc_func_RuleClassifier(PyObject *, void *);
  int ccn_func_RuleClassifier(PyObject *, void *);
  #define cc_RuleClassifier cc_func_RuleClassifier
  #define ccn_RuleClassifier ccn_func_RuleClassifier

  int cc_func_RuleClassifierConstructor(PyObject *, void *);
  int ccn_func_RuleClassifierConstructor(PyObject *, void *);
  #define cc_RuleClassifierConstructor cc_func_RuleClassifierConstructor
  #define ccn_RuleClassifierConstructor ccn_func_RuleClassifierConstructor

  int cc_func_RuleClassifier_firstRule(PyObject *, void *);
  int ccn_func_RuleClassifier_firstRule(PyObject *, void *);
  #define cc_RuleClassifier_firstRule cc_func_RuleClassifier_firstRule
  #define ccn_RuleClassifier_firstRule ccn_func_RuleClassifier_firstRule

  int cc_func_RuleClassifier_logit(PyObject *, void *);
  int ccn_func_RuleClassifier_logit(PyObject *, void *);
  #define cc_RuleClassifier_logit cc_func_RuleClassifier_logit
  #define ccn_RuleClassifier_logit ccn_func_RuleClassifier_logit

  int cc_func_RuleCovererAndRemover(PyObject *, void *);
  int ccn_func_RuleCovererAndRemover(PyObject *, void *);
  #define cc_RuleCovererAndRemover cc_func_RuleCovererAndRemover
  #define ccn_RuleCovererAndRemover ccn_func_RuleCovererAndRemover

  int cc_func_RuleCovererAndRemover_Default(PyObject *, void *);
  int ccn_func_RuleCovererAndRemover_Default(PyObject *, void *);
  #define cc_RuleCovererAndRemover_Default cc_func_RuleCovererAndRemover_Default
  #define ccn_RuleCovererAndRemover_Default ccn_func_RuleCovererAndRemover_Default

  int cc_func_RuleDataStoppingCriteria(PyObject *, void *);
  int ccn_func_RuleDataStoppingCriteria(PyObject *, void *);
  #define cc_RuleDataStoppingCriteria cc_func_RuleDataStoppingCriteria
  #define ccn_RuleDataStoppingCriteria ccn_func_RuleDataStoppingCriteria

  int cc_func_RuleDataStoppingCriteria_NoPositives(PyObject *, void *);
  int ccn_func_RuleDataStoppingCriteria_NoPositives(PyObject *, void *);
  #define cc_RuleDataStoppingCriteria_NoPositives cc_func_RuleDataStoppingCriteria_NoPositives
  #define ccn_RuleDataStoppingCriteria_NoPositives ccn_func_RuleDataStoppingCriteria_NoPositives

  int cc_func_RuleEvaluator(PyObject *, void *);
  int ccn_func_RuleEvaluator(PyObject *, void *);
  #define cc_RuleEvaluator cc_func_RuleEvaluator
  #define ccn_RuleEvaluator ccn_func_RuleEvaluator

  int cc_func_RuleEvaluator_Entropy(PyObject *, void *);
  int ccn_func_RuleEvaluator_Entropy(PyObject *, void *);
  #define cc_RuleEvaluator_Entropy cc_func_RuleEvaluator_Entropy
  #define ccn_RuleEvaluator_Entropy ccn_func_RuleEvaluator_Entropy

  int cc_func_RuleEvaluator_LRS(PyObject *, void *);
  int ccn_func_RuleEvaluator_LRS(PyObject *, void *);
  #define cc_RuleEvaluator_LRS cc_func_RuleEvaluator_LRS
  #define ccn_RuleEvaluator_LRS ccn_func_RuleEvaluator_LRS

  int cc_func_RuleEvaluator_Laplace(PyObject *, void *);
  int ccn_func_RuleEvaluator_Laplace(PyObject *, void *);
  #define cc_RuleEvaluator_Laplace cc_func_RuleEvaluator_Laplace
  #define ccn_RuleEvaluator_Laplace ccn_func_RuleEvaluator_Laplace

  int cc_func_RuleEvaluator_mEVC(PyObject *, void *);
  int ccn_func_RuleEvaluator_mEVC(PyObject *, void *);
  #define cc_RuleEvaluator_mEVC cc_func_RuleEvaluator_mEVC
  #define ccn_RuleEvaluator_mEVC ccn_func_RuleEvaluator_mEVC

  int cc_func_RuleFinder(PyObject *, void *);
  int ccn_func_RuleFinder(PyObject *, void *);
  #define cc_RuleFinder cc_func_RuleFinder
  #define ccn_RuleFinder ccn_func_RuleFinder

  int cc_func_RuleLearner(PyObject *, void *);
  int ccn_func_RuleLearner(PyObject *, void *);
  #define cc_RuleLearner cc_func_RuleLearner
  #define ccn_RuleLearner ccn_func_RuleLearner

  int cc_func_RuleList(PyObject *, void *);
  int ccn_func_RuleList(PyObject *, void *);
  #define cc_RuleList cc_func_RuleList
  #define ccn_RuleList ccn_func_RuleList

  int cc_func_RuleStoppingCriteria(PyObject *, void *);
  int ccn_func_RuleStoppingCriteria(PyObject *, void *);
  #define cc_RuleStoppingCriteria cc_func_RuleStoppingCriteria
  #define ccn_RuleStoppingCriteria ccn_func_RuleStoppingCriteria

  int cc_func_RuleStoppingCriteria_NegativeDistribution(PyObject *, void *);
  int ccn_func_RuleStoppingCriteria_NegativeDistribution(PyObject *, void *);
  #define cc_RuleStoppingCriteria_NegativeDistribution cc_func_RuleStoppingCriteria_NegativeDistribution
  #define ccn_RuleStoppingCriteria_NegativeDistribution ccn_func_RuleStoppingCriteria_NegativeDistribution

  int cc_func_RuleValidator(PyObject *, void *);
  int ccn_func_RuleValidator(PyObject *, void *);
  #define cc_RuleValidator cc_func_RuleValidator
  #define ccn_RuleValidator ccn_func_RuleValidator

  int cc_func_RuleValidator_LRS(PyObject *, void *);
  int ccn_func_RuleValidator_LRS(PyObject *, void *);
  #define cc_RuleValidator_LRS cc_func_RuleValidator_LRS
  #define ccn_RuleValidator_LRS ccn_func_RuleValidator_LRS

  int cc_func_SVMClassifier(PyObject *, void *);
  int ccn_func_SVMClassifier(PyObject *, void *);
  #define cc_SVMClassifier cc_func_SVMClassifier
  #define ccn_SVMClassifier ccn_func_SVMClassifier

  int cc_func_SVMClassifierSparse(PyObject *, void *);
  int ccn_func_SVMClassifierSparse(PyObject *, void *);
  #define cc_SVMClassifierSparse cc_func_SVMClassifierSparse
  #define ccn_SVMClassifierSparse ccn_func_SVMClassifierSparse

  int cc_func_SVMLearner(PyObject *, void *);
  int ccn_func_SVMLearner(PyObject *, void *);
  #define cc_SVMLearner cc_func_SVMLearner
  #define ccn_SVMLearner ccn_func_SVMLearner

  int cc_func_SVMLearnerSparse(PyObject *, void *);
  int ccn_func_SVMLearnerSparse(PyObject *, void *);
  #define cc_SVMLearnerSparse cc_func_SVMLearnerSparse
  #define ccn_SVMLearnerSparse ccn_func_SVMLearnerSparse

  int cc_func_SimpleTreeClassifier(PyObject *, void *);
  int ccn_func_SimpleTreeClassifier(PyObject *, void *);
  #define cc_SimpleTreeClassifier cc_func_SimpleTreeClassifier
  #define ccn_SimpleTreeClassifier ccn_func_SimpleTreeClassifier

  int cc_func_SimpleTreeLearner(PyObject *, void *);
  int ccn_func_SimpleTreeLearner(PyObject *, void *);
  #define cc_SimpleTreeLearner cc_func_SimpleTreeLearner
  #define ccn_SimpleTreeLearner ccn_func_SimpleTreeLearner

  int cc_func_SomeValue(PyObject *, void *);
  int ccn_func_SomeValue(PyObject *, void *);
  #define cc_SomeValue cc_func_SomeValue
  #define ccn_SomeValue ccn_func_SomeValue

  int cc_func_StopDistributionClustering(PyObject *, void *);
  int ccn_func_StopDistributionClustering(PyObject *, void *);
  #define cc_StopDistributionClustering cc_func_StopDistributionClustering
  #define ccn_StopDistributionClustering ccn_func_StopDistributionClustering

  int cc_func_StopDistributionClustering_binary(PyObject *, void *);
  int ccn_func_StopDistributionClustering_binary(PyObject *, void *);
  #define cc_StopDistributionClustering_binary cc_func_StopDistributionClustering_binary
  #define ccn_StopDistributionClustering_binary ccn_func_StopDistributionClustering_binary

  int cc_func_StopDistributionClustering_n(PyObject *, void *);
  int ccn_func_StopDistributionClustering_n(PyObject *, void *);
  #define cc_StopDistributionClustering_n cc_func_StopDistributionClustering_n
  #define ccn_StopDistributionClustering_n ccn_func_StopDistributionClustering_n

  int cc_func_StopDistributionClustering_noBigChange(PyObject *, void *);
  int ccn_func_StopDistributionClustering_noBigChange(PyObject *, void *);
  #define cc_StopDistributionClustering_noBigChange cc_func_StopDistributionClustering_noBigChange
  #define ccn_StopDistributionClustering_noBigChange ccn_func_StopDistributionClustering_noBigChange

  int cc_func_StopDistributionClustering_noProfit(PyObject *, void *);
  int ccn_func_StopDistributionClustering_noProfit(PyObject *, void *);
  #define cc_StopDistributionClustering_noProfit cc_func_StopDistributionClustering_noProfit
  #define ccn_StopDistributionClustering_noProfit ccn_func_StopDistributionClustering_noProfit

  int cc_func_StopIMClusteringByAssessor(PyObject *, void *);
  int ccn_func_StopIMClusteringByAssessor(PyObject *, void *);
  #define cc_StopIMClusteringByAssessor cc_func_StopIMClusteringByAssessor
  #define ccn_StopIMClusteringByAssessor ccn_func_StopIMClusteringByAssessor

  int cc_func_StopIMClusteringByAssessor_binary(PyObject *, void *);
  int ccn_func_StopIMClusteringByAssessor_binary(PyObject *, void *);
  #define cc_StopIMClusteringByAssessor_binary cc_func_StopIMClusteringByAssessor_binary
  #define ccn_StopIMClusteringByAssessor_binary ccn_func_StopIMClusteringByAssessor_binary

  int cc_func_StopIMClusteringByAssessor_n(PyObject *, void *);
  int ccn_func_StopIMClusteringByAssessor_n(PyObject *, void *);
  #define cc_StopIMClusteringByAssessor_n cc_func_StopIMClusteringByAssessor_n
  #define ccn_StopIMClusteringByAssessor_n ccn_func_StopIMClusteringByAssessor_n

  int cc_func_StopIMClusteringByAssessor_noBigChange(PyObject *, void *);
  int ccn_func_StopIMClusteringByAssessor_noBigChange(PyObject *, void *);
  #define cc_StopIMClusteringByAssessor_noBigChange cc_func_StopIMClusteringByAssessor_noBigChange
  #define ccn_StopIMClusteringByAssessor_noBigChange ccn_func_StopIMClusteringByAssessor_noBigChange

  int cc_func_StopIMClusteringByAssessor_noProfit(PyObject *, void *);
  int ccn_func_StopIMClusteringByAssessor_noProfit(PyObject *, void *);
  #define cc_StopIMClusteringByAssessor_noProfit cc_func_StopIMClusteringByAssessor_noProfit
  #define ccn_StopIMClusteringByAssessor_noProfit ccn_func_StopIMClusteringByAssessor_noProfit

  int cc_func_StringList(PyObject *, void *);
  int ccn_func_StringList(PyObject *, void *);
  #define cc_StringList cc_func_StringList
  #define ccn_StringList ccn_func_StringList

  int cc_func_StringValue(PyObject *, void *);
  int ccn_func_StringValue(PyObject *, void *);
  #define cc_StringValue cc_func_StringValue
  #define ccn_StringValue ccn_func_StringValue

  int cc_func_StringVariable(PyObject *, void *);
  int ccn_func_StringVariable(PyObject *, void *);
  #define cc_StringVariable cc_func_StringVariable
  #define ccn_StringVariable ccn_func_StringVariable

  int cc_func_SubsetsGenerator(PyObject *, void *);
  int ccn_func_SubsetsGenerator(PyObject *, void *);
  #define cc_SubsetsGenerator cc_func_SubsetsGenerator
  #define ccn_SubsetsGenerator ccn_func_SubsetsGenerator

  int cc_func_SubsetsGenerator_constSize(PyObject *, void *);
  int ccn_func_SubsetsGenerator_constSize(PyObject *, void *);
  #define cc_SubsetsGenerator_constSize cc_func_SubsetsGenerator_constSize
  #define ccn_SubsetsGenerator_constSize ccn_func_SubsetsGenerator_constSize

  int cc_func_SubsetsGenerator_constSize_iterator(PyObject *, void *);
  int ccn_func_SubsetsGenerator_constSize_iterator(PyObject *, void *);
  #define cc_SubsetsGenerator_constSize_iterator cc_func_SubsetsGenerator_constSize_iterator
  #define ccn_SubsetsGenerator_constSize_iterator ccn_func_SubsetsGenerator_constSize_iterator

  int cc_func_SubsetsGenerator_constant(PyObject *, void *);
  int ccn_func_SubsetsGenerator_constant(PyObject *, void *);
  #define cc_SubsetsGenerator_constant cc_func_SubsetsGenerator_constant
  #define ccn_SubsetsGenerator_constant ccn_func_SubsetsGenerator_constant

  int cc_func_SubsetsGenerator_constant_iterator(PyObject *, void *);
  int ccn_func_SubsetsGenerator_constant_iterator(PyObject *, void *);
  #define cc_SubsetsGenerator_constant_iterator cc_func_SubsetsGenerator_constant_iterator
  #define ccn_SubsetsGenerator_constant_iterator ccn_func_SubsetsGenerator_constant_iterator

  int cc_func_SubsetsGenerator_iterator(PyObject *, void *);
  int ccn_func_SubsetsGenerator_iterator(PyObject *, void *);
  #define cc_SubsetsGenerator_iterator cc_func_SubsetsGenerator_iterator
  #define ccn_SubsetsGenerator_iterator ccn_func_SubsetsGenerator_iterator

  int cc_func_SubsetsGenerator_minMaxSize(PyObject *, void *);
  int ccn_func_SubsetsGenerator_minMaxSize(PyObject *, void *);
  #define cc_SubsetsGenerator_minMaxSize cc_func_SubsetsGenerator_minMaxSize
  #define ccn_SubsetsGenerator_minMaxSize ccn_func_SubsetsGenerator_minMaxSize

  int cc_func_SubsetsGenerator_minMaxSize_iterator(PyObject *, void *);
  int ccn_func_SubsetsGenerator_minMaxSize_iterator(PyObject *, void *);
  #define cc_SubsetsGenerator_minMaxSize_iterator cc_func_SubsetsGenerator_minMaxSize_iterator
  #define ccn_SubsetsGenerator_minMaxSize_iterator ccn_func_SubsetsGenerator_minMaxSize_iterator

  int cc_func_SubsetsGenerator_withRestrictions(PyObject *, void *);
  int ccn_func_SubsetsGenerator_withRestrictions(PyObject *, void *);
  #define cc_SubsetsGenerator_withRestrictions cc_func_SubsetsGenerator_withRestrictions
  #define ccn_SubsetsGenerator_withRestrictions ccn_func_SubsetsGenerator_withRestrictions

  int cc_func_SubsetsGenerator_withRestrictions_iterator(PyObject *, void *);
  int ccn_func_SubsetsGenerator_withRestrictions_iterator(PyObject *, void *);
  #define cc_SubsetsGenerator_withRestrictions_iterator cc_func_SubsetsGenerator_withRestrictions_iterator
  #define ccn_SubsetsGenerator_withRestrictions_iterator ccn_func_SubsetsGenerator_withRestrictions_iterator

  int cc_func_SymMatrix(PyObject *, void *);
  int ccn_func_SymMatrix(PyObject *, void *);
  #define cc_SymMatrix cc_func_SymMatrix
  #define ccn_SymMatrix ccn_func_SymMatrix

  int cc_func_TabDelimExampleGenerator(PyObject *, void *);
  int ccn_func_TabDelimExampleGenerator(PyObject *, void *);
  #define cc_TabDelimExampleGenerator cc_func_TabDelimExampleGenerator
  #define ccn_TabDelimExampleGenerator ccn_func_TabDelimExampleGenerator

  int cc_func_TableAverager(PyObject *, void *);
  int ccn_func_TableAverager(PyObject *, void *);
  #define cc_TableAverager cc_func_TableAverager
  #define ccn_TableAverager ccn_func_TableAverager

  int cc_func_ThresholdCA(PyObject *, void *);
  int ccn_func_ThresholdCA(PyObject *, void *);
  #define cc_ThresholdCA cc_func_ThresholdCA
  #define ccn_ThresholdCA ccn_func_ThresholdCA

  int cc_func_ThresholdDiscretizer(PyObject *, void *);
  int ccn_func_ThresholdDiscretizer(PyObject *, void *);
  #define cc_ThresholdDiscretizer cc_func_ThresholdDiscretizer
  #define ccn_ThresholdDiscretizer ccn_func_ThresholdDiscretizer

  int cc_func_TransformValue(PyObject *, void *);
  int ccn_func_TransformValue(PyObject *, void *);
  #define cc_TransformValue cc_func_TransformValue
  #define ccn_TransformValue ccn_func_TransformValue

  int cc_func_TransformValue_IsDefined(PyObject *, void *);
  int ccn_func_TransformValue_IsDefined(PyObject *, void *);
  #define cc_TransformValue_IsDefined cc_func_TransformValue_IsDefined
  #define ccn_TransformValue_IsDefined ccn_func_TransformValue_IsDefined

  int cc_func_TreeClassifier(PyObject *, void *);
  int ccn_func_TreeClassifier(PyObject *, void *);
  #define cc_TreeClassifier cc_func_TreeClassifier
  #define ccn_TreeClassifier ccn_func_TreeClassifier

  int cc_func_TreeDescender(PyObject *, void *);
  int ccn_func_TreeDescender(PyObject *, void *);
  #define cc_TreeDescender cc_func_TreeDescender
  #define ccn_TreeDescender ccn_func_TreeDescender

  int cc_func_TreeDescender_UnknownMergeAsBranchSizes(PyObject *, void *);
  int ccn_func_TreeDescender_UnknownMergeAsBranchSizes(PyObject *, void *);
  #define cc_TreeDescender_UnknownMergeAsBranchSizes cc_func_TreeDescender_UnknownMergeAsBranchSizes
  #define ccn_TreeDescender_UnknownMergeAsBranchSizes ccn_func_TreeDescender_UnknownMergeAsBranchSizes

  int cc_func_TreeDescender_UnknownMergeAsSelector(PyObject *, void *);
  int ccn_func_TreeDescender_UnknownMergeAsSelector(PyObject *, void *);
  #define cc_TreeDescender_UnknownMergeAsSelector cc_func_TreeDescender_UnknownMergeAsSelector
  #define ccn_TreeDescender_UnknownMergeAsSelector ccn_func_TreeDescender_UnknownMergeAsSelector

  int cc_func_TreeDescender_UnknownToBranch(PyObject *, void *);
  int ccn_func_TreeDescender_UnknownToBranch(PyObject *, void *);
  #define cc_TreeDescender_UnknownToBranch cc_func_TreeDescender_UnknownToBranch
  #define ccn_TreeDescender_UnknownToBranch ccn_func_TreeDescender_UnknownToBranch

  int cc_func_TreeDescender_UnknownToCommonBranch(PyObject *, void *);
  int ccn_func_TreeDescender_UnknownToCommonBranch(PyObject *, void *);
  #define cc_TreeDescender_UnknownToCommonBranch cc_func_TreeDescender_UnknownToCommonBranch
  #define ccn_TreeDescender_UnknownToCommonBranch ccn_func_TreeDescender_UnknownToCommonBranch

  int cc_func_TreeDescender_UnknownToCommonSelector(PyObject *, void *);
  int ccn_func_TreeDescender_UnknownToCommonSelector(PyObject *, void *);
  #define cc_TreeDescender_UnknownToCommonSelector cc_func_TreeDescender_UnknownToCommonSelector
  #define ccn_TreeDescender_UnknownToCommonSelector ccn_func_TreeDescender_UnknownToCommonSelector

  int cc_func_TreeExampleSplitter(PyObject *, void *);
  int ccn_func_TreeExampleSplitter(PyObject *, void *);
  #define cc_TreeExampleSplitter cc_func_TreeExampleSplitter
  #define ccn_TreeExampleSplitter ccn_func_TreeExampleSplitter

  int cc_func_TreeExampleSplitter_IgnoreUnknowns(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_IgnoreUnknowns(PyObject *, void *);
  #define cc_TreeExampleSplitter_IgnoreUnknowns cc_func_TreeExampleSplitter_IgnoreUnknowns
  #define ccn_TreeExampleSplitter_IgnoreUnknowns ccn_func_TreeExampleSplitter_IgnoreUnknowns

  int cc_func_TreeExampleSplitter_UnknownsAsBranchSizes(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_UnknownsAsBranchSizes(PyObject *, void *);
  #define cc_TreeExampleSplitter_UnknownsAsBranchSizes cc_func_TreeExampleSplitter_UnknownsAsBranchSizes
  #define ccn_TreeExampleSplitter_UnknownsAsBranchSizes ccn_func_TreeExampleSplitter_UnknownsAsBranchSizes

  int cc_func_TreeExampleSplitter_UnknownsAsSelector(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_UnknownsAsSelector(PyObject *, void *);
  #define cc_TreeExampleSplitter_UnknownsAsSelector cc_func_TreeExampleSplitter_UnknownsAsSelector
  #define ccn_TreeExampleSplitter_UnknownsAsSelector ccn_func_TreeExampleSplitter_UnknownsAsSelector

  int cc_func_TreeExampleSplitter_UnknownsToAll(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_UnknownsToAll(PyObject *, void *);
  #define cc_TreeExampleSplitter_UnknownsToAll cc_func_TreeExampleSplitter_UnknownsToAll
  #define ccn_TreeExampleSplitter_UnknownsToAll ccn_func_TreeExampleSplitter_UnknownsToAll

  int cc_func_TreeExampleSplitter_UnknownsToBranch(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_UnknownsToBranch(PyObject *, void *);
  #define cc_TreeExampleSplitter_UnknownsToBranch cc_func_TreeExampleSplitter_UnknownsToBranch
  #define ccn_TreeExampleSplitter_UnknownsToBranch ccn_func_TreeExampleSplitter_UnknownsToBranch

  int cc_func_TreeExampleSplitter_UnknownsToCommon(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_UnknownsToCommon(PyObject *, void *);
  #define cc_TreeExampleSplitter_UnknownsToCommon cc_func_TreeExampleSplitter_UnknownsToCommon
  #define ccn_TreeExampleSplitter_UnknownsToCommon ccn_func_TreeExampleSplitter_UnknownsToCommon

  int cc_func_TreeExampleSplitter_UnknownsToRandom(PyObject *, void *);
  int ccn_func_TreeExampleSplitter_UnknownsToRandom(PyObject *, void *);
  #define cc_TreeExampleSplitter_UnknownsToRandom cc_func_TreeExampleSplitter_UnknownsToRandom
  #define ccn_TreeExampleSplitter_UnknownsToRandom ccn_func_TreeExampleSplitter_UnknownsToRandom

  int cc_func_TreeLearner(PyObject *, void *);
  int ccn_func_TreeLearner(PyObject *, void *);
  #define cc_TreeLearner cc_func_TreeLearner
  #define ccn_TreeLearner ccn_func_TreeLearner

  int cc_func_TreeNode(PyObject *, void *);
  int ccn_func_TreeNode(PyObject *, void *);
  #define cc_TreeNode cc_func_TreeNode
  #define ccn_TreeNode ccn_func_TreeNode

  int cc_func_TreeNodeList(PyObject *, void *);
  int ccn_func_TreeNodeList(PyObject *, void *);
  #define cc_TreeNodeList cc_func_TreeNodeList
  #define ccn_TreeNodeList ccn_func_TreeNodeList

  int cc_func_TreePruner(PyObject *, void *);
  int ccn_func_TreePruner(PyObject *, void *);
  #define cc_TreePruner cc_func_TreePruner
  #define ccn_TreePruner ccn_func_TreePruner

  int cc_func_TreePruner_SameMajority(PyObject *, void *);
  int ccn_func_TreePruner_SameMajority(PyObject *, void *);
  #define cc_TreePruner_SameMajority cc_func_TreePruner_SameMajority
  #define ccn_TreePruner_SameMajority ccn_func_TreePruner_SameMajority

  int cc_func_TreePruner_m(PyObject *, void *);
  int ccn_func_TreePruner_m(PyObject *, void *);
  #define cc_TreePruner_m cc_func_TreePruner_m
  #define ccn_TreePruner_m ccn_func_TreePruner_m

  int cc_func_TreeSplitConstructor(PyObject *, void *);
  int ccn_func_TreeSplitConstructor(PyObject *, void *);
  #define cc_TreeSplitConstructor cc_func_TreeSplitConstructor
  #define ccn_TreeSplitConstructor ccn_func_TreeSplitConstructor

  int cc_func_TreeSplitConstructor_Attribute(PyObject *, void *);
  int ccn_func_TreeSplitConstructor_Attribute(PyObject *, void *);
  #define cc_TreeSplitConstructor_Attribute cc_func_TreeSplitConstructor_Attribute
  #define ccn_TreeSplitConstructor_Attribute ccn_func_TreeSplitConstructor_Attribute

  int cc_func_TreeSplitConstructor_Combined(PyObject *, void *);
  int ccn_func_TreeSplitConstructor_Combined(PyObject *, void *);
  #define cc_TreeSplitConstructor_Combined cc_func_TreeSplitConstructor_Combined
  #define ccn_TreeSplitConstructor_Combined ccn_func_TreeSplitConstructor_Combined

  int cc_func_TreeSplitConstructor_ExhaustiveBinary(PyObject *, void *);
  int ccn_func_TreeSplitConstructor_ExhaustiveBinary(PyObject *, void *);
  #define cc_TreeSplitConstructor_ExhaustiveBinary cc_func_TreeSplitConstructor_ExhaustiveBinary
  #define ccn_TreeSplitConstructor_ExhaustiveBinary ccn_func_TreeSplitConstructor_ExhaustiveBinary

  int cc_func_TreeSplitConstructor_Measure(PyObject *, void *);
  int ccn_func_TreeSplitConstructor_Measure(PyObject *, void *);
  #define cc_TreeSplitConstructor_Measure cc_func_TreeSplitConstructor_Measure
  #define ccn_TreeSplitConstructor_Measure ccn_func_TreeSplitConstructor_Measure

  int cc_func_TreeSplitConstructor_OneAgainstOthers(PyObject *, void *);
  int ccn_func_TreeSplitConstructor_OneAgainstOthers(PyObject *, void *);
  #define cc_TreeSplitConstructor_OneAgainstOthers cc_func_TreeSplitConstructor_OneAgainstOthers
  #define ccn_TreeSplitConstructor_OneAgainstOthers ccn_func_TreeSplitConstructor_OneAgainstOthers

  int cc_func_TreeSplitConstructor_Threshold(PyObject *, void *);
  int ccn_func_TreeSplitConstructor_Threshold(PyObject *, void *);
  #define cc_TreeSplitConstructor_Threshold cc_func_TreeSplitConstructor_Threshold
  #define ccn_TreeSplitConstructor_Threshold ccn_func_TreeSplitConstructor_Threshold

  int cc_func_TreeStopCriteria(PyObject *, void *);
  int ccn_func_TreeStopCriteria(PyObject *, void *);
  #define cc_TreeStopCriteria cc_func_TreeStopCriteria
  #define ccn_TreeStopCriteria ccn_func_TreeStopCriteria

  int cc_func_TreeStopCriteria_Python(PyObject *, void *);
  int ccn_func_TreeStopCriteria_Python(PyObject *, void *);
  #define cc_TreeStopCriteria_Python cc_func_TreeStopCriteria_Python
  #define ccn_TreeStopCriteria_Python ccn_func_TreeStopCriteria_Python

  int cc_func_TreeStopCriteria_common(PyObject *, void *);
  int ccn_func_TreeStopCriteria_common(PyObject *, void *);
  #define cc_TreeStopCriteria_common cc_func_TreeStopCriteria_common
  #define ccn_TreeStopCriteria_common ccn_func_TreeStopCriteria_common

  int cc_func_ValueFilter(PyObject *, void *);
  int ccn_func_ValueFilter(PyObject *, void *);
  #define cc_ValueFilter cc_func_ValueFilter
  #define ccn_ValueFilter ccn_func_ValueFilter

  int cc_func_ValueFilterList(PyObject *, void *);
  int ccn_func_ValueFilterList(PyObject *, void *);
  #define cc_ValueFilterList cc_func_ValueFilterList
  #define ccn_ValueFilterList ccn_func_ValueFilterList

  int cc_func_ValueFilter_continuous(PyObject *, void *);
  int ccn_func_ValueFilter_continuous(PyObject *, void *);
  #define cc_ValueFilter_continuous cc_func_ValueFilter_continuous
  #define ccn_ValueFilter_continuous ccn_func_ValueFilter_continuous

  int cc_func_ValueFilter_discrete(PyObject *, void *);
  int ccn_func_ValueFilter_discrete(PyObject *, void *);
  #define cc_ValueFilter_discrete cc_func_ValueFilter_discrete
  #define ccn_ValueFilter_discrete ccn_func_ValueFilter_discrete

  int cc_func_ValueFilter_string(PyObject *, void *);
  int ccn_func_ValueFilter_string(PyObject *, void *);
  #define cc_ValueFilter_string cc_func_ValueFilter_string
  #define ccn_ValueFilter_string ccn_func_ValueFilter_string

  int cc_func_ValueFilter_stringList(PyObject *, void *);
  int ccn_func_ValueFilter_stringList(PyObject *, void *);
  #define cc_ValueFilter_stringList cc_func_ValueFilter_stringList
  #define ccn_ValueFilter_stringList ccn_func_ValueFilter_stringList

  int cc_func_ValueList(PyObject *, void *);
  int ccn_func_ValueList(PyObject *, void *);
  #define cc_ValueList cc_func_ValueList
  #define ccn_ValueList ccn_func_ValueList

  int cc_func_VarList(PyObject *, void *);
  int ccn_func_VarList(PyObject *, void *);
  #define cc_VarList cc_func_VarList
  #define ccn_VarList ccn_func_VarList

  int cc_func_VarListList(PyObject *, void *);
  int ccn_func_VarListList(PyObject *, void *);
  #define cc_VarListList cc_func_VarListList
  #define ccn_VarListList ccn_func_VarListList

  int cc_func_Variable(PyObject *, void *);
  int ccn_func_Variable(PyObject *, void *);
  #define cc_Variable cc_func_Variable
  #define ccn_Variable ccn_func_Variable

  int cc_func_VariableFilterMap(PyObject *, void *);
  int ccn_func_VariableFilterMap(PyObject *, void *);
  #define cc_VariableFilterMap cc_func_VariableFilterMap
  #define ccn_VariableFilterMap ccn_func_VariableFilterMap

  int cc_func_VariableFloatMap(PyObject *, void *);
  int ccn_func_VariableFloatMap(PyObject *, void *);
  #define cc_VariableFloatMap cc_func_VariableFloatMap
  #define ccn_VariableFloatMap ccn_func_VariableFloatMap

  int cc_func_kNNClassifier(PyObject *, void *);
  int ccn_func_kNNClassifier(PyObject *, void *);
  #define cc_kNNClassifier cc_func_kNNClassifier
  #define ccn_kNNClassifier ccn_func_kNNClassifier

  int cc_func_kNNLearner(PyObject *, void *);
  int ccn_func_kNNLearner(PyObject *, void *);
  #define cc_kNNLearner cc_func_kNNLearner
  #define ccn_kNNLearner ccn_func_kNNLearner

#else

  #define cc_AlignmentList PyOrAlignmentList_Type.ot_converter
  #define ccn_AlignmentList PyOrAlignmentList_Type.ot_nconverter

  #define cc_AssessIMQuality PyOrAssessIMQuality_Type.ot_converter
  #define ccn_AssessIMQuality PyOrAssessIMQuality_Type.ot_nconverter

  #define cc_AssociationClassifier PyOrAssociationClassifier_Type.ot_converter
  #define ccn_AssociationClassifier PyOrAssociationClassifier_Type.ot_nconverter

  #define cc_AssociationLearner PyOrAssociationLearner_Type.ot_converter
  #define ccn_AssociationLearner PyOrAssociationLearner_Type.ot_nconverter

  #define cc_AssociationRule PyOrAssociationRule_Type.ot_converter
  #define ccn_AssociationRule PyOrAssociationRule_Type.ot_nconverter

  #define cc_AssociationRules PyOrAssociationRules_Type.ot_converter
  #define ccn_AssociationRules PyOrAssociationRules_Type.ot_nconverter

  #define cc_AssociationRulesInducer PyOrAssociationRulesInducer_Type.ot_converter
  #define ccn_AssociationRulesInducer PyOrAssociationRulesInducer_Type.ot_nconverter

  #define cc_AssociationRulesSparseInducer PyOrAssociationRulesSparseInducer_Type.ot_converter
  #define ccn_AssociationRulesSparseInducer PyOrAssociationRulesSparseInducer_Type.ot_nconverter

  #define cc_AttributedBoolList PyOrAttributedBoolList_Type.ot_converter
  #define ccn_AttributedBoolList PyOrAttributedBoolList_Type.ot_nconverter

  #define cc_AttributedFloatList PyOrAttributedFloatList_Type.ot_converter
  #define ccn_AttributedFloatList PyOrAttributedFloatList_Type.ot_nconverter

  #define cc_BasicAttrStat PyOrBasicAttrStat_Type.ot_converter
  #define ccn_BasicAttrStat PyOrBasicAttrStat_Type.ot_nconverter

  #define cc_BasketExampleGenerator PyOrBasketExampleGenerator_Type.ot_converter
  #define ccn_BasketExampleGenerator PyOrBasketExampleGenerator_Type.ot_nconverter

  #define cc_BasketFeeder PyOrBasketFeeder_Type.ot_converter
  #define ccn_BasketFeeder PyOrBasketFeeder_Type.ot_nconverter

  #define cc_BayesClassifier PyOrBayesClassifier_Type.ot_converter
  #define ccn_BayesClassifier PyOrBayesClassifier_Type.ot_nconverter

  #define cc_BayesLearner PyOrBayesLearner_Type.ot_converter
  #define ccn_BayesLearner PyOrBayesLearner_Type.ot_nconverter

  #define cc_BiModalDiscretization PyOrBiModalDiscretization_Type.ot_converter
  #define ccn_BiModalDiscretization PyOrBiModalDiscretization_Type.ot_nconverter

  #define cc_BiModalDiscretizer PyOrBiModalDiscretizer_Type.ot_converter
  #define ccn_BiModalDiscretizer PyOrBiModalDiscretizer_Type.ot_nconverter

  #define cc_BoolList PyOrBoolList_Type.ot_converter
  #define ccn_BoolList PyOrBoolList_Type.ot_nconverter

  #define cc_C45Classifier PyOrC45Classifier_Type.ot_converter
  #define ccn_C45Classifier PyOrC45Classifier_Type.ot_nconverter

  #define cc_C45ExampleGenerator PyOrC45ExampleGenerator_Type.ot_converter
  #define ccn_C45ExampleGenerator PyOrC45ExampleGenerator_Type.ot_nconverter

  #define cc_C45Learner PyOrC45Learner_Type.ot_converter
  #define ccn_C45Learner PyOrC45Learner_Type.ot_nconverter

  #define cc_C45TreeNode PyOrC45TreeNode_Type.ot_converter
  #define ccn_C45TreeNode PyOrC45TreeNode_Type.ot_nconverter

  #define cc_C45TreeNodeList PyOrC45TreeNodeList_Type.ot_converter
  #define ccn_C45TreeNodeList PyOrC45TreeNodeList_Type.ot_nconverter

  #define cc_CartesianClassifier PyOrCartesianClassifier_Type.ot_converter
  #define ccn_CartesianClassifier PyOrCartesianClassifier_Type.ot_nconverter

  #define cc_Classifier PyOrClassifier_Type.ot_converter
  #define ccn_Classifier PyOrClassifier_Type.ot_nconverter

  #define cc_ClassifierByExampleTable PyOrClassifierByExampleTable_Type.ot_converter
  #define ccn_ClassifierByExampleTable PyOrClassifierByExampleTable_Type.ot_nconverter

  #define cc_ClassifierByLookupTable PyOrClassifierByLookupTable_Type.ot_converter
  #define ccn_ClassifierByLookupTable PyOrClassifierByLookupTable_Type.ot_nconverter

  #define cc_ClassifierByLookupTable1 PyOrClassifierByLookupTable1_Type.ot_converter
  #define ccn_ClassifierByLookupTable1 PyOrClassifierByLookupTable1_Type.ot_nconverter

  #define cc_ClassifierByLookupTable2 PyOrClassifierByLookupTable2_Type.ot_converter
  #define ccn_ClassifierByLookupTable2 PyOrClassifierByLookupTable2_Type.ot_nconverter

  #define cc_ClassifierByLookupTable3 PyOrClassifierByLookupTable3_Type.ot_converter
  #define ccn_ClassifierByLookupTable3 PyOrClassifierByLookupTable3_Type.ot_nconverter

  #define cc_ClassifierFD PyOrClassifierFD_Type.ot_converter
  #define ccn_ClassifierFD PyOrClassifierFD_Type.ot_nconverter

  #define cc_ClassifierFromVar PyOrClassifierFromVar_Type.ot_converter
  #define ccn_ClassifierFromVar PyOrClassifierFromVar_Type.ot_nconverter

  #define cc_ClassifierFromVarFD PyOrClassifierFromVarFD_Type.ot_converter
  #define ccn_ClassifierFromVarFD PyOrClassifierFromVarFD_Type.ot_nconverter

  #define cc_ClassifierList PyOrClassifierList_Type.ot_converter
  #define ccn_ClassifierList PyOrClassifierList_Type.ot_nconverter

  #define cc_ClustersFromDistributions PyOrClustersFromDistributions_Type.ot_converter
  #define ccn_ClustersFromDistributions PyOrClustersFromDistributions_Type.ot_nconverter

  #define cc_ClustersFromDistributionsByAssessor PyOrClustersFromDistributionsByAssessor_Type.ot_converter
  #define ccn_ClustersFromDistributionsByAssessor PyOrClustersFromDistributionsByAssessor_Type.ot_nconverter

  #define cc_ClustersFromIM PyOrClustersFromIM_Type.ot_converter
  #define ccn_ClustersFromIM PyOrClustersFromIM_Type.ot_nconverter

  #define cc_ClustersFromIMByAssessor PyOrClustersFromIMByAssessor_Type.ot_converter
  #define ccn_ClustersFromIMByAssessor PyOrClustersFromIMByAssessor_Type.ot_nconverter

  #define cc_ColorIG PyOrColorIG_Type.ot_converter
  #define ccn_ColorIG PyOrColorIG_Type.ot_nconverter

  #define cc_ColorIG_MCF PyOrColorIG_MCF_Type.ot_converter
  #define ccn_ColorIG_MCF PyOrColorIG_MCF_Type.ot_nconverter

  #define cc_ColoredIG PyOrColoredIG_Type.ot_converter
  #define ccn_ColoredIG PyOrColoredIG_Type.ot_nconverter

  #define cc_ColumnAssessor PyOrColumnAssessor_Type.ot_converter
  #define ccn_ColumnAssessor PyOrColumnAssessor_Type.ot_nconverter

  #define cc_ColumnAssessor_Kramer PyOrColumnAssessor_Kramer_Type.ot_converter
  #define ccn_ColumnAssessor_Kramer PyOrColumnAssessor_Kramer_Type.ot_nconverter

  #define cc_ColumnAssessor_Laplace PyOrColumnAssessor_Laplace_Type.ot_converter
  #define ccn_ColumnAssessor_Laplace PyOrColumnAssessor_Laplace_Type.ot_nconverter

  #define cc_ColumnAssessor_Measure PyOrColumnAssessor_Measure_Type.ot_converter
  #define ccn_ColumnAssessor_Measure PyOrColumnAssessor_Measure_Type.ot_nconverter

  #define cc_ColumnAssessor_N PyOrColumnAssessor_N_Type.ot_converter
  #define ccn_ColumnAssessor_N PyOrColumnAssessor_N_Type.ot_nconverter

  #define cc_ColumnAssessor_Relief PyOrColumnAssessor_Relief_Type.ot_converter
  #define ccn_ColumnAssessor_Relief PyOrColumnAssessor_Relief_Type.ot_nconverter

  #define cc_ColumnAssessor_m PyOrColumnAssessor_m_Type.ot_converter
  #define ccn_ColumnAssessor_m PyOrColumnAssessor_m_Type.ot_nconverter

  #define cc_ColumnAssessor_mf PyOrColumnAssessor_mf_Type.ot_converter
  #define ccn_ColumnAssessor_mf PyOrColumnAssessor_mf_Type.ot_nconverter

  #define cc_ComputeDomainContingency PyOrComputeDomainContingency_Type.ot_converter
  #define ccn_ComputeDomainContingency PyOrComputeDomainContingency_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimator PyOrConditionalProbabilityEstimator_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimator PyOrConditionalProbabilityEstimator_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimatorConstructor PyOrConditionalProbabilityEstimatorConstructor_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimatorConstructor PyOrConditionalProbabilityEstimatorConstructor_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimatorConstructor_ByRows PyOrConditionalProbabilityEstimatorConstructor_ByRows_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimatorConstructor_ByRows PyOrConditionalProbabilityEstimatorConstructor_ByRows_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimatorConstructor_loess PyOrConditionalProbabilityEstimatorConstructor_loess_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimatorConstructor_loess PyOrConditionalProbabilityEstimatorConstructor_loess_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimatorList PyOrConditionalProbabilityEstimatorList_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimatorList PyOrConditionalProbabilityEstimatorList_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimator_ByRows PyOrConditionalProbabilityEstimator_ByRows_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimator_ByRows PyOrConditionalProbabilityEstimator_ByRows_Type.ot_nconverter

  #define cc_ConditionalProbabilityEstimator_FromDistribution PyOrConditionalProbabilityEstimator_FromDistribution_Type.ot_converter
  #define ccn_ConditionalProbabilityEstimator_FromDistribution PyOrConditionalProbabilityEstimator_FromDistribution_Type.ot_nconverter

  #define cc_ContDistribution PyOrContDistribution_Type.ot_converter
  #define ccn_ContDistribution PyOrContDistribution_Type.ot_nconverter

  #define cc_Contingency PyOrContingency_Type.ot_converter
  #define ccn_Contingency PyOrContingency_Type.ot_nconverter

  #define cc_ContingencyAttrAttr PyOrContingencyAttrAttr_Type.ot_converter
  #define ccn_ContingencyAttrAttr PyOrContingencyAttrAttr_Type.ot_nconverter

  #define cc_ContingencyAttrClass PyOrContingencyAttrClass_Type.ot_converter
  #define ccn_ContingencyAttrClass PyOrContingencyAttrClass_Type.ot_nconverter

  #define cc_ContingencyClass PyOrContingencyClass_Type.ot_converter
  #define ccn_ContingencyClass PyOrContingencyClass_Type.ot_nconverter

  #define cc_ContingencyClassAttr PyOrContingencyClassAttr_Type.ot_converter
  #define ccn_ContingencyClassAttr PyOrContingencyClassAttr_Type.ot_nconverter

  #define cc_CostLearner PyOrCostLearner_Type.ot_converter
  #define ccn_CostLearner PyOrCostLearner_Type.ot_nconverter

  #define cc_CostMatrix PyOrCostMatrix_Type.ot_converter
  #define ccn_CostMatrix PyOrCostMatrix_Type.ot_nconverter

  #define cc_CostWrapperClassifier PyOrCostWrapperClassifier_Type.ot_converter
  #define ccn_CostWrapperClassifier PyOrCostWrapperClassifier_Type.ot_nconverter

  #define cc_CostWrapperLearner PyOrCostWrapperLearner_Type.ot_converter
  #define ccn_CostWrapperLearner PyOrCostWrapperLearner_Type.ot_nconverter

  #define cc_DefaultClassifier PyOrDefaultClassifier_Type.ot_converter
  #define ccn_DefaultClassifier PyOrDefaultClassifier_Type.ot_nconverter

  #define cc_DiscDistribution PyOrDiscDistribution_Type.ot_converter
  #define ccn_DiscDistribution PyOrDiscDistribution_Type.ot_nconverter

  #define cc_Discrete2Continuous PyOrDiscrete2Continuous_Type.ot_converter
  #define ccn_Discrete2Continuous PyOrDiscrete2Continuous_Type.ot_nconverter

  #define cc_Discretization PyOrDiscretization_Type.ot_converter
  #define ccn_Discretization PyOrDiscretization_Type.ot_nconverter

  #define cc_Discretizer PyOrDiscretizer_Type.ot_converter
  #define ccn_Discretizer PyOrDiscretizer_Type.ot_nconverter

  #define cc_DistanceMap PyOrDistanceMap_Type.ot_converter
  #define ccn_DistanceMap PyOrDistanceMap_Type.ot_nconverter

  #define cc_DistanceMapConstructor PyOrDistanceMapConstructor_Type.ot_converter
  #define ccn_DistanceMapConstructor PyOrDistanceMapConstructor_Type.ot_nconverter

  #define cc_Distribution PyOrDistribution_Type.ot_converter
  #define ccn_Distribution PyOrDistribution_Type.ot_nconverter

  #define cc_DistributionAssessor PyOrDistributionAssessor_Type.ot_converter
  #define ccn_DistributionAssessor PyOrDistributionAssessor_Type.ot_nconverter

  #define cc_DistributionAssessor_Kramer PyOrDistributionAssessor_Kramer_Type.ot_converter
  #define ccn_DistributionAssessor_Kramer PyOrDistributionAssessor_Kramer_Type.ot_nconverter

  #define cc_DistributionAssessor_Laplace PyOrDistributionAssessor_Laplace_Type.ot_converter
  #define ccn_DistributionAssessor_Laplace PyOrDistributionAssessor_Laplace_Type.ot_nconverter

  #define cc_DistributionAssessor_Measure PyOrDistributionAssessor_Measure_Type.ot_converter
  #define ccn_DistributionAssessor_Measure PyOrDistributionAssessor_Measure_Type.ot_nconverter

  #define cc_DistributionAssessor_Relief PyOrDistributionAssessor_Relief_Type.ot_converter
  #define ccn_DistributionAssessor_Relief PyOrDistributionAssessor_Relief_Type.ot_nconverter

  #define cc_DistributionAssessor_m PyOrDistributionAssessor_m_Type.ot_converter
  #define ccn_DistributionAssessor_m PyOrDistributionAssessor_m_Type.ot_nconverter

  #define cc_DistributionAssessor_mf PyOrDistributionAssessor_mf_Type.ot_converter
  #define ccn_DistributionAssessor_mf PyOrDistributionAssessor_mf_Type.ot_nconverter

  #define cc_DistributionList PyOrDistributionList_Type.ot_converter
  #define ccn_DistributionList PyOrDistributionList_Type.ot_nconverter

  #define cc_Domain PyOrDomain_Type.ot_converter
  #define ccn_Domain PyOrDomain_Type.ot_nconverter

  #define cc_DomainBasicAttrStat PyOrDomainBasicAttrStat_Type.ot_converter
  #define ccn_DomainBasicAttrStat PyOrDomainBasicAttrStat_Type.ot_nconverter

  #define cc_DomainContingency PyOrDomainContingency_Type.ot_converter
  #define ccn_DomainContingency PyOrDomainContingency_Type.ot_nconverter

  #define cc_DomainContinuizer PyOrDomainContinuizer_Type.ot_converter
  #define ccn_DomainContinuizer PyOrDomainContinuizer_Type.ot_nconverter

  #define cc_DomainDistributions PyOrDomainDistributions_Type.ot_converter
  #define ccn_DomainDistributions PyOrDomainDistributions_Type.ot_nconverter

  #define cc_DomainTransformerConstructor PyOrDomainTransformerConstructor_Type.ot_converter
  #define ccn_DomainTransformerConstructor PyOrDomainTransformerConstructor_Type.ot_nconverter

  #define cc_EFMDataDescription PyOrEFMDataDescription_Type.ot_converter
  #define ccn_EFMDataDescription PyOrEFMDataDescription_Type.ot_nconverter

  #define cc_EVDist PyOrEVDist_Type.ot_converter
  #define ccn_EVDist PyOrEVDist_Type.ot_nconverter

  #define cc_EVDistGetter PyOrEVDistGetter_Type.ot_converter
  #define ccn_EVDistGetter PyOrEVDistGetter_Type.ot_nconverter

  #define cc_EVDistGetter_Standard PyOrEVDistGetter_Standard_Type.ot_converter
  #define ccn_EVDistGetter_Standard PyOrEVDistGetter_Standard_Type.ot_nconverter

  #define cc_EVDistList PyOrEVDistList_Type.ot_converter
  #define ccn_EVDistList PyOrEVDistList_Type.ot_nconverter

  #define cc_EarthClassifier PyOrEarthClassifier_Type.ot_converter
  #define ccn_EarthClassifier PyOrEarthClassifier_Type.ot_nconverter

  #define cc_EarthLearner PyOrEarthLearner_Type.ot_converter
  #define ccn_EarthLearner PyOrEarthLearner_Type.ot_nconverter

  #define cc_EntropyDiscretization PyOrEntropyDiscretization_Type.ot_converter
  #define ccn_EntropyDiscretization PyOrEntropyDiscretization_Type.ot_nconverter

  #define cc_EnumVariable PyOrEnumVariable_Type.ot_converter
  #define ccn_EnumVariable PyOrEnumVariable_Type.ot_nconverter

  #define cc_EquiDistDiscretization PyOrEquiDistDiscretization_Type.ot_converter
  #define ccn_EquiDistDiscretization PyOrEquiDistDiscretization_Type.ot_nconverter

  #define cc_EquiDistDiscretizer PyOrEquiDistDiscretizer_Type.ot_converter
  #define ccn_EquiDistDiscretizer PyOrEquiDistDiscretizer_Type.ot_nconverter

  #define cc_EquiNDiscretization PyOrEquiNDiscretization_Type.ot_converter
  #define ccn_EquiNDiscretization PyOrEquiNDiscretization_Type.ot_nconverter

  #define cc_ExampleCluster PyOrExampleCluster_Type.ot_converter
  #define ccn_ExampleCluster PyOrExampleCluster_Type.ot_nconverter

  #define cc_ExampleClusters PyOrExampleClusters_Type.ot_converter
  #define ccn_ExampleClusters PyOrExampleClusters_Type.ot_nconverter

  #define cc_ExampleDistBySorting PyOrExampleDistBySorting_Type.ot_converter
  #define ccn_ExampleDistBySorting PyOrExampleDistBySorting_Type.ot_nconverter

  #define cc_ExampleDistConstructor PyOrExampleDistConstructor_Type.ot_converter
  #define ccn_ExampleDistConstructor PyOrExampleDistConstructor_Type.ot_nconverter

  #define cc_ExampleDistVector PyOrExampleDistVector_Type.ot_converter
  #define ccn_ExampleDistVector PyOrExampleDistVector_Type.ot_nconverter

  #define cc_ExampleGenerator PyOrExampleGenerator_Type.ot_converter
  #define ccn_ExampleGenerator PyOrExampleGenerator_Type.ot_nconverter

  #define cc_ExampleGeneratorList PyOrExampleGeneratorList_Type.ot_converter
  #define ccn_ExampleGeneratorList PyOrExampleGeneratorList_Type.ot_nconverter

  #define cc_ExampleTable PyOrExampleTable_Type.ot_converter
  #define ccn_ExampleTable PyOrExampleTable_Type.ot_nconverter

  #define cc_ExamplesDistance PyOrExamplesDistance_Type.ot_converter
  #define ccn_ExamplesDistance PyOrExamplesDistance_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor PyOrExamplesDistanceConstructor_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor PyOrExamplesDistanceConstructor_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_DTW PyOrExamplesDistanceConstructor_DTW_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_DTW PyOrExamplesDistanceConstructor_DTW_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_Euclidean PyOrExamplesDistanceConstructor_Euclidean_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_Euclidean PyOrExamplesDistanceConstructor_Euclidean_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_Hamming PyOrExamplesDistanceConstructor_Hamming_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_Hamming PyOrExamplesDistanceConstructor_Hamming_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_Lp PyOrExamplesDistanceConstructor_Lp_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_Lp PyOrExamplesDistanceConstructor_Lp_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_Manhattan PyOrExamplesDistanceConstructor_Manhattan_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_Manhattan PyOrExamplesDistanceConstructor_Manhattan_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_Maximal PyOrExamplesDistanceConstructor_Maximal_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_Maximal PyOrExamplesDistanceConstructor_Maximal_Type.ot_nconverter

  #define cc_ExamplesDistanceConstructor_Relief PyOrExamplesDistanceConstructor_Relief_Type.ot_converter
  #define ccn_ExamplesDistanceConstructor_Relief PyOrExamplesDistanceConstructor_Relief_Type.ot_nconverter

  #define cc_ExamplesDistance_DTW PyOrExamplesDistance_DTW_Type.ot_converter
  #define ccn_ExamplesDistance_DTW PyOrExamplesDistance_DTW_Type.ot_nconverter

  #define cc_ExamplesDistance_Euclidean PyOrExamplesDistance_Euclidean_Type.ot_converter
  #define ccn_ExamplesDistance_Euclidean PyOrExamplesDistance_Euclidean_Type.ot_nconverter

  #define cc_ExamplesDistance_Hamming PyOrExamplesDistance_Hamming_Type.ot_converter
  #define ccn_ExamplesDistance_Hamming PyOrExamplesDistance_Hamming_Type.ot_nconverter

  #define cc_ExamplesDistance_Lp PyOrExamplesDistance_Lp_Type.ot_converter
  #define ccn_ExamplesDistance_Lp PyOrExamplesDistance_Lp_Type.ot_nconverter

  #define cc_ExamplesDistance_Manhattan PyOrExamplesDistance_Manhattan_Type.ot_converter
  #define ccn_ExamplesDistance_Manhattan PyOrExamplesDistance_Manhattan_Type.ot_nconverter

  #define cc_ExamplesDistance_Maximal PyOrExamplesDistance_Maximal_Type.ot_converter
  #define ccn_ExamplesDistance_Maximal PyOrExamplesDistance_Maximal_Type.ot_nconverter

  #define cc_ExamplesDistance_Normalized PyOrExamplesDistance_Normalized_Type.ot_converter
  #define ccn_ExamplesDistance_Normalized PyOrExamplesDistance_Normalized_Type.ot_nconverter

  #define cc_ExamplesDistance_Relief PyOrExamplesDistance_Relief_Type.ot_converter
  #define ccn_ExamplesDistance_Relief PyOrExamplesDistance_Relief_Type.ot_nconverter

  #define cc_FeatureByDistributions PyOrFeatureByDistributions_Type.ot_converter
  #define ccn_FeatureByDistributions PyOrFeatureByDistributions_Type.ot_nconverter

  #define cc_FeatureByIM PyOrFeatureByIM_Type.ot_converter
  #define ccn_FeatureByIM PyOrFeatureByIM_Type.ot_nconverter

  #define cc_FeatureByMinComplexity PyOrFeatureByMinComplexity_Type.ot_converter
  #define ccn_FeatureByMinComplexity PyOrFeatureByMinComplexity_Type.ot_nconverter

  #define cc_FeatureInducer PyOrFeatureInducer_Type.ot_converter
  #define ccn_FeatureInducer PyOrFeatureInducer_Type.ot_nconverter

  #define cc_FileExampleGenerator PyOrFileExampleGenerator_Type.ot_converter
  #define ccn_FileExampleGenerator PyOrFileExampleGenerator_Type.ot_nconverter

  #define cc_Filter PyOrFilter_Type.ot_converter
  #define ccn_Filter PyOrFilter_Type.ot_nconverter

  #define cc_FilterList PyOrFilterList_Type.ot_converter
  #define ccn_FilterList PyOrFilterList_Type.ot_nconverter

  #define cc_Filter_conjunction PyOrFilter_conjunction_Type.ot_converter
  #define ccn_Filter_conjunction PyOrFilter_conjunction_Type.ot_nconverter

  #define cc_Filter_disjunction PyOrFilter_disjunction_Type.ot_converter
  #define ccn_Filter_disjunction PyOrFilter_disjunction_Type.ot_nconverter

  #define cc_Filter_hasClassValue PyOrFilter_hasClassValue_Type.ot_converter
  #define ccn_Filter_hasClassValue PyOrFilter_hasClassValue_Type.ot_nconverter

  #define cc_Filter_hasMeta PyOrFilter_hasMeta_Type.ot_converter
  #define ccn_Filter_hasMeta PyOrFilter_hasMeta_Type.ot_nconverter

  #define cc_Filter_hasSpecial PyOrFilter_hasSpecial_Type.ot_converter
  #define ccn_Filter_hasSpecial PyOrFilter_hasSpecial_Type.ot_nconverter

  #define cc_Filter_isDefined PyOrFilter_isDefined_Type.ot_converter
  #define ccn_Filter_isDefined PyOrFilter_isDefined_Type.ot_nconverter

  #define cc_Filter_random PyOrFilter_random_Type.ot_converter
  #define ccn_Filter_random PyOrFilter_random_Type.ot_nconverter

  #define cc_Filter_sameValue PyOrFilter_sameValue_Type.ot_converter
  #define ccn_Filter_sameValue PyOrFilter_sameValue_Type.ot_nconverter

  #define cc_Filter_values PyOrFilter_values_Type.ot_converter
  #define ccn_Filter_values PyOrFilter_values_Type.ot_nconverter

  #define cc_FindNearest PyOrFindNearest_Type.ot_converter
  #define ccn_FindNearest PyOrFindNearest_Type.ot_nconverter

  #define cc_FindNearestConstructor PyOrFindNearestConstructor_Type.ot_converter
  #define ccn_FindNearestConstructor PyOrFindNearestConstructor_Type.ot_nconverter

  #define cc_FindNearestConstructor_BruteForce PyOrFindNearestConstructor_BruteForce_Type.ot_converter
  #define ccn_FindNearestConstructor_BruteForce PyOrFindNearestConstructor_BruteForce_Type.ot_nconverter

  #define cc_FindNearest_BruteForce PyOrFindNearest_BruteForce_Type.ot_converter
  #define ccn_FindNearest_BruteForce PyOrFindNearest_BruteForce_Type.ot_nconverter

  #define cc_FloatFloatList PyOrFloatFloatList_Type.ot_converter
  #define ccn_FloatFloatList PyOrFloatFloatList_Type.ot_nconverter

  #define cc_FloatList PyOrFloatList_Type.ot_converter
  #define ccn_FloatList PyOrFloatList_Type.ot_nconverter

  #define cc_FloatListList PyOrFloatListList_Type.ot_converter
  #define ccn_FloatListList PyOrFloatListList_Type.ot_nconverter

  #define cc_FloatVariable PyOrFloatVariable_Type.ot_converter
  #define ccn_FloatVariable PyOrFloatVariable_Type.ot_nconverter

  #define cc_GaussianDistribution PyOrGaussianDistribution_Type.ot_converter
  #define ccn_GaussianDistribution PyOrGaussianDistribution_Type.ot_nconverter

  #define cc_GeneralExampleClustering PyOrGeneralExampleClustering_Type.ot_converter
  #define ccn_GeneralExampleClustering PyOrGeneralExampleClustering_Type.ot_nconverter

  #define cc_Graph PyOrGraph_Type.ot_converter
  #define ccn_Graph PyOrGraph_Type.ot_nconverter

  #define cc_GraphAsList PyOrGraphAsList_Type.ot_converter
  #define ccn_GraphAsList PyOrGraphAsList_Type.ot_nconverter

  #define cc_GraphAsMatrix PyOrGraphAsMatrix_Type.ot_converter
  #define ccn_GraphAsMatrix PyOrGraphAsMatrix_Type.ot_nconverter

  #define cc_GraphAsTree PyOrGraphAsTree_Type.ot_converter
  #define ccn_GraphAsTree PyOrGraphAsTree_Type.ot_nconverter

  #define cc_HierarchicalCluster PyOrHierarchicalCluster_Type.ot_converter
  #define ccn_HierarchicalCluster PyOrHierarchicalCluster_Type.ot_nconverter

  #define cc_HierarchicalClusterList PyOrHierarchicalClusterList_Type.ot_converter
  #define ccn_HierarchicalClusterList PyOrHierarchicalClusterList_Type.ot_nconverter

  #define cc_HierarchicalClusterOrdering PyOrHierarchicalClusterOrdering_Type.ot_converter
  #define ccn_HierarchicalClusterOrdering PyOrHierarchicalClusterOrdering_Type.ot_nconverter

  #define cc_HierarchicalClustering PyOrHierarchicalClustering_Type.ot_converter
  #define ccn_HierarchicalClustering PyOrHierarchicalClustering_Type.ot_nconverter

  #define cc_IG PyOrIG_Type.ot_converter
  #define ccn_IG PyOrIG_Type.ot_nconverter

  #define cc_IGBySorting PyOrIGBySorting_Type.ot_converter
  #define ccn_IGBySorting PyOrIGBySorting_Type.ot_nconverter

  #define cc_IGConstructor PyOrIGConstructor_Type.ot_converter
  #define ccn_IGConstructor PyOrIGConstructor_Type.ot_nconverter

  #define cc_IM PyOrIM_Type.ot_converter
  #define ccn_IM PyOrIM_Type.ot_nconverter

  #define cc_IMBlurer PyOrIMBlurer_Type.ot_converter
  #define ccn_IMBlurer PyOrIMBlurer_Type.ot_nconverter

  #define cc_IMByIMByRows PyOrIMByIMByRows_Type.ot_converter
  #define ccn_IMByIMByRows PyOrIMByIMByRows_Type.ot_nconverter

  #define cc_IMByRelief PyOrIMByRelief_Type.ot_converter
  #define ccn_IMByRelief PyOrIMByRelief_Type.ot_nconverter

  #define cc_IMByRows PyOrIMByRows_Type.ot_converter
  #define ccn_IMByRows PyOrIMByRows_Type.ot_nconverter

  #define cc_IMByRowsByRelief PyOrIMByRowsByRelief_Type.ot_converter
  #define ccn_IMByRowsByRelief PyOrIMByRowsByRelief_Type.ot_nconverter

  #define cc_IMByRowsBySorting PyOrIMByRowsBySorting_Type.ot_converter
  #define ccn_IMByRowsBySorting PyOrIMByRowsBySorting_Type.ot_nconverter

  #define cc_IMByRowsConstructor PyOrIMByRowsConstructor_Type.ot_converter
  #define ccn_IMByRowsConstructor PyOrIMByRowsConstructor_Type.ot_nconverter

  #define cc_IMByRowsPreprocessor PyOrIMByRowsPreprocessor_Type.ot_converter
  #define ccn_IMByRowsPreprocessor PyOrIMByRowsPreprocessor_Type.ot_nconverter

  #define cc_IMBySorting PyOrIMBySorting_Type.ot_converter
  #define ccn_IMBySorting PyOrIMBySorting_Type.ot_nconverter

  #define cc_IMClustering PyOrIMClustering_Type.ot_converter
  #define ccn_IMClustering PyOrIMClustering_Type.ot_nconverter

  #define cc_IMConstructor PyOrIMConstructor_Type.ot_converter
  #define ccn_IMConstructor PyOrIMConstructor_Type.ot_nconverter

  #define cc_ImputeClassifier PyOrImputeClassifier_Type.ot_converter
  #define ccn_ImputeClassifier PyOrImputeClassifier_Type.ot_nconverter

  #define cc_Imputer PyOrImputer_Type.ot_converter
  #define ccn_Imputer PyOrImputer_Type.ot_nconverter

  #define cc_ImputerConstructor PyOrImputerConstructor_Type.ot_converter
  #define ccn_ImputerConstructor PyOrImputerConstructor_Type.ot_nconverter

  #define cc_ImputerConstructor_asValue PyOrImputerConstructor_asValue_Type.ot_converter
  #define ccn_ImputerConstructor_asValue PyOrImputerConstructor_asValue_Type.ot_nconverter

  #define cc_ImputerConstructor_average PyOrImputerConstructor_average_Type.ot_converter
  #define ccn_ImputerConstructor_average PyOrImputerConstructor_average_Type.ot_nconverter

  #define cc_ImputerConstructor_maximal PyOrImputerConstructor_maximal_Type.ot_converter
  #define ccn_ImputerConstructor_maximal PyOrImputerConstructor_maximal_Type.ot_nconverter

  #define cc_ImputerConstructor_minimal PyOrImputerConstructor_minimal_Type.ot_converter
  #define ccn_ImputerConstructor_minimal PyOrImputerConstructor_minimal_Type.ot_nconverter

  #define cc_ImputerConstructor_model PyOrImputerConstructor_model_Type.ot_converter
  #define ccn_ImputerConstructor_model PyOrImputerConstructor_model_Type.ot_nconverter

  #define cc_ImputerConstructor_random PyOrImputerConstructor_random_Type.ot_converter
  #define ccn_ImputerConstructor_random PyOrImputerConstructor_random_Type.ot_nconverter

  #define cc_Imputer_asValue PyOrImputer_asValue_Type.ot_converter
  #define ccn_Imputer_asValue PyOrImputer_asValue_Type.ot_nconverter

  #define cc_Imputer_defaults PyOrImputer_defaults_Type.ot_converter
  #define ccn_Imputer_defaults PyOrImputer_defaults_Type.ot_nconverter

  #define cc_Imputer_model PyOrImputer_model_Type.ot_converter
  #define ccn_Imputer_model PyOrImputer_model_Type.ot_nconverter

  #define cc_Imputer_random PyOrImputer_random_Type.ot_converter
  #define ccn_Imputer_random PyOrImputer_random_Type.ot_nconverter

  #define cc_IntFloatList PyOrIntFloatList_Type.ot_converter
  #define ccn_IntFloatList PyOrIntFloatList_Type.ot_nconverter

  #define cc_IntList PyOrIntList_Type.ot_converter
  #define ccn_IntList PyOrIntList_Type.ot_nconverter

  #define cc_IntervalDiscretizer PyOrIntervalDiscretizer_Type.ot_converter
  #define ccn_IntervalDiscretizer PyOrIntervalDiscretizer_Type.ot_nconverter

  #define cc_ItemsetNodeProxy PyOrItemsetNodeProxy_Type.ot_converter
  #define ccn_ItemsetNodeProxy PyOrItemsetNodeProxy_Type.ot_nconverter

  #define cc_ItemsetsSparseInducer PyOrItemsetsSparseInducer_Type.ot_converter
  #define ccn_ItemsetsSparseInducer PyOrItemsetsSparseInducer_Type.ot_nconverter

  #define cc_KernelFunc PyOrKernelFunc_Type.ot_converter
  #define ccn_KernelFunc PyOrKernelFunc_Type.ot_nconverter

  #define cc_Learner PyOrLearner_Type.ot_converter
  #define ccn_Learner PyOrLearner_Type.ot_nconverter

  #define cc_LearnerFD PyOrLearnerFD_Type.ot_converter
  #define ccn_LearnerFD PyOrLearnerFD_Type.ot_nconverter

  #define cc_LinearClassifier PyOrLinearClassifier_Type.ot_converter
  #define ccn_LinearClassifier PyOrLinearClassifier_Type.ot_nconverter

  #define cc_LinearLearner PyOrLinearLearner_Type.ot_converter
  #define ccn_LinearLearner PyOrLinearLearner_Type.ot_nconverter

  #define cc_LogRegClassifier PyOrLogRegClassifier_Type.ot_converter
  #define ccn_LogRegClassifier PyOrLogRegClassifier_Type.ot_nconverter

  #define cc_LogRegFitter PyOrLogRegFitter_Type.ot_converter
  #define ccn_LogRegFitter PyOrLogRegFitter_Type.ot_nconverter

  #define cc_LogRegFitter_Cholesky PyOrLogRegFitter_Cholesky_Type.ot_converter
  #define ccn_LogRegFitter_Cholesky PyOrLogRegFitter_Cholesky_Type.ot_nconverter

  #define cc_LogRegLearner PyOrLogRegLearner_Type.ot_converter
  #define ccn_LogRegLearner PyOrLogRegLearner_Type.ot_nconverter

  #define cc_LongList PyOrLongList_Type.ot_converter
  #define ccn_LongList PyOrLongList_Type.ot_nconverter

  #define cc_LookupLearner PyOrLookupLearner_Type.ot_converter
  #define ccn_LookupLearner PyOrLookupLearner_Type.ot_nconverter

  #define cc_MajorityLearner PyOrMajorityLearner_Type.ot_converter
  #define ccn_MajorityLearner PyOrMajorityLearner_Type.ot_nconverter

  #define cc_MakeRandomIndices PyOrMakeRandomIndices_Type.ot_converter
  #define ccn_MakeRandomIndices PyOrMakeRandomIndices_Type.ot_nconverter

  #define cc_MakeRandomIndices2 PyOrMakeRandomIndices2_Type.ot_converter
  #define ccn_MakeRandomIndices2 PyOrMakeRandomIndices2_Type.ot_nconverter

  #define cc_MakeRandomIndicesCV PyOrMakeRandomIndicesCV_Type.ot_converter
  #define ccn_MakeRandomIndicesCV PyOrMakeRandomIndicesCV_Type.ot_nconverter

  #define cc_MakeRandomIndicesMultiple PyOrMakeRandomIndicesMultiple_Type.ot_converter
  #define ccn_MakeRandomIndicesMultiple PyOrMakeRandomIndicesMultiple_Type.ot_nconverter

  #define cc_MakeRandomIndicesN PyOrMakeRandomIndicesN_Type.ot_converter
  #define ccn_MakeRandomIndicesN PyOrMakeRandomIndicesN_Type.ot_nconverter

  #define cc_MapIntValue PyOrMapIntValue_Type.ot_converter
  #define ccn_MapIntValue PyOrMapIntValue_Type.ot_nconverter

  #define cc_MeasureAttribute PyOrMeasureAttribute_Type.ot_converter
  #define ccn_MeasureAttribute PyOrMeasureAttribute_Type.ot_nconverter

  #define cc_MeasureAttributeFromProbabilities PyOrMeasureAttributeFromProbabilities_Type.ot_converter
  #define ccn_MeasureAttributeFromProbabilities PyOrMeasureAttributeFromProbabilities_Type.ot_nconverter

  #define cc_MeasureAttribute_IM PyOrMeasureAttribute_IM_Type.ot_converter
  #define ccn_MeasureAttribute_IM PyOrMeasureAttribute_IM_Type.ot_nconverter

  #define cc_MeasureAttribute_MSE PyOrMeasureAttribute_MSE_Type.ot_converter
  #define ccn_MeasureAttribute_MSE PyOrMeasureAttribute_MSE_Type.ot_nconverter

  #define cc_MeasureAttribute_chiSquare PyOrMeasureAttribute_chiSquare_Type.ot_converter
  #define ccn_MeasureAttribute_chiSquare PyOrMeasureAttribute_chiSquare_Type.ot_nconverter

  #define cc_MeasureAttribute_cost PyOrMeasureAttribute_cost_Type.ot_converter
  #define ccn_MeasureAttribute_cost PyOrMeasureAttribute_cost_Type.ot_nconverter

  #define cc_MeasureAttribute_gainRatio PyOrMeasureAttribute_gainRatio_Type.ot_converter
  #define ccn_MeasureAttribute_gainRatio PyOrMeasureAttribute_gainRatio_Type.ot_nconverter

  #define cc_MeasureAttribute_gainRatioA PyOrMeasureAttribute_gainRatioA_Type.ot_converter
  #define ccn_MeasureAttribute_gainRatioA PyOrMeasureAttribute_gainRatioA_Type.ot_nconverter

  #define cc_MeasureAttribute_gini PyOrMeasureAttribute_gini_Type.ot_converter
  #define ccn_MeasureAttribute_gini PyOrMeasureAttribute_gini_Type.ot_nconverter

  #define cc_MeasureAttribute_info PyOrMeasureAttribute_info_Type.ot_converter
  #define ccn_MeasureAttribute_info PyOrMeasureAttribute_info_Type.ot_nconverter

  #define cc_MeasureAttribute_logOddsRatio PyOrMeasureAttribute_logOddsRatio_Type.ot_converter
  #define ccn_MeasureAttribute_logOddsRatio PyOrMeasureAttribute_logOddsRatio_Type.ot_nconverter

  #define cc_MeasureAttribute_relevance PyOrMeasureAttribute_relevance_Type.ot_converter
  #define ccn_MeasureAttribute_relevance PyOrMeasureAttribute_relevance_Type.ot_nconverter

  #define cc_MeasureAttribute_relief PyOrMeasureAttribute_relief_Type.ot_converter
  #define ccn_MeasureAttribute_relief PyOrMeasureAttribute_relief_Type.ot_nconverter

  #define cc_NormalizeContinuous PyOrNormalizeContinuous_Type.ot_converter
  #define ccn_NormalizeContinuous PyOrNormalizeContinuous_Type.ot_nconverter

  #define cc_Orange PyOrOrange_Type.ot_converter
  #define ccn_Orange PyOrOrange_Type.ot_nconverter

  #define cc_Ordinal2Continuous PyOrOrdinal2Continuous_Type.ot_converter
  #define ccn_Ordinal2Continuous PyOrOrdinal2Continuous_Type.ot_nconverter

  #define cc_P2NN PyOrP2NN_Type.ot_converter
  #define ccn_P2NN PyOrP2NN_Type.ot_nconverter

  #define cc_PearsonCorrelation PyOrPearsonCorrelation_Type.ot_converter
  #define ccn_PearsonCorrelation PyOrPearsonCorrelation_Type.ot_nconverter

  #define cc_Preprocessor PyOrPreprocessor_Type.ot_converter
  #define ccn_Preprocessor PyOrPreprocessor_Type.ot_nconverter

  #define cc_Preprocessor_addCensorWeight PyOrPreprocessor_addCensorWeight_Type.ot_converter
  #define ccn_Preprocessor_addCensorWeight PyOrPreprocessor_addCensorWeight_Type.ot_nconverter

  #define cc_Preprocessor_addClassNoise PyOrPreprocessor_addClassNoise_Type.ot_converter
  #define ccn_Preprocessor_addClassNoise PyOrPreprocessor_addClassNoise_Type.ot_nconverter

  #define cc_Preprocessor_addClassWeight PyOrPreprocessor_addClassWeight_Type.ot_converter
  #define ccn_Preprocessor_addClassWeight PyOrPreprocessor_addClassWeight_Type.ot_nconverter

  #define cc_Preprocessor_addGaussianClassNoise PyOrPreprocessor_addGaussianClassNoise_Type.ot_converter
  #define ccn_Preprocessor_addGaussianClassNoise PyOrPreprocessor_addGaussianClassNoise_Type.ot_nconverter

  #define cc_Preprocessor_addGaussianNoise PyOrPreprocessor_addGaussianNoise_Type.ot_converter
  #define ccn_Preprocessor_addGaussianNoise PyOrPreprocessor_addGaussianNoise_Type.ot_nconverter

  #define cc_Preprocessor_addMissing PyOrPreprocessor_addMissing_Type.ot_converter
  #define ccn_Preprocessor_addMissing PyOrPreprocessor_addMissing_Type.ot_nconverter

  #define cc_Preprocessor_addMissingClasses PyOrPreprocessor_addMissingClasses_Type.ot_converter
  #define ccn_Preprocessor_addMissingClasses PyOrPreprocessor_addMissingClasses_Type.ot_nconverter

  #define cc_Preprocessor_addNoise PyOrPreprocessor_addNoise_Type.ot_converter
  #define ccn_Preprocessor_addNoise PyOrPreprocessor_addNoise_Type.ot_nconverter

  #define cc_Preprocessor_discretize PyOrPreprocessor_discretize_Type.ot_converter
  #define ccn_Preprocessor_discretize PyOrPreprocessor_discretize_Type.ot_nconverter

  #define cc_Preprocessor_drop PyOrPreprocessor_drop_Type.ot_converter
  #define ccn_Preprocessor_drop PyOrPreprocessor_drop_Type.ot_nconverter

  #define cc_Preprocessor_dropMissing PyOrPreprocessor_dropMissing_Type.ot_converter
  #define ccn_Preprocessor_dropMissing PyOrPreprocessor_dropMissing_Type.ot_nconverter

  #define cc_Preprocessor_dropMissingClasses PyOrPreprocessor_dropMissingClasses_Type.ot_converter
  #define ccn_Preprocessor_dropMissingClasses PyOrPreprocessor_dropMissingClasses_Type.ot_nconverter

  #define cc_Preprocessor_filter PyOrPreprocessor_filter_Type.ot_converter
  #define ccn_Preprocessor_filter PyOrPreprocessor_filter_Type.ot_nconverter

  #define cc_Preprocessor_ignore PyOrPreprocessor_ignore_Type.ot_converter
  #define ccn_Preprocessor_ignore PyOrPreprocessor_ignore_Type.ot_nconverter

  #define cc_Preprocessor_imputeByLearner PyOrPreprocessor_imputeByLearner_Type.ot_converter
  #define ccn_Preprocessor_imputeByLearner PyOrPreprocessor_imputeByLearner_Type.ot_nconverter

  #define cc_Preprocessor_removeDuplicates PyOrPreprocessor_removeDuplicates_Type.ot_converter
  #define ccn_Preprocessor_removeDuplicates PyOrPreprocessor_removeDuplicates_Type.ot_nconverter

  #define cc_Preprocessor_select PyOrPreprocessor_select_Type.ot_converter
  #define ccn_Preprocessor_select PyOrPreprocessor_select_Type.ot_nconverter

  #define cc_Preprocessor_shuffle PyOrPreprocessor_shuffle_Type.ot_converter
  #define ccn_Preprocessor_shuffle PyOrPreprocessor_shuffle_Type.ot_nconverter

  #define cc_Preprocessor_take PyOrPreprocessor_take_Type.ot_converter
  #define ccn_Preprocessor_take PyOrPreprocessor_take_Type.ot_nconverter

  #define cc_Preprocessor_takeMissing PyOrPreprocessor_takeMissing_Type.ot_converter
  #define ccn_Preprocessor_takeMissing PyOrPreprocessor_takeMissing_Type.ot_nconverter

  #define cc_Preprocessor_takeMissingClasses PyOrPreprocessor_takeMissingClasses_Type.ot_converter
  #define ccn_Preprocessor_takeMissingClasses PyOrPreprocessor_takeMissingClasses_Type.ot_nconverter

  #define cc_ProbabilityEstimator PyOrProbabilityEstimator_Type.ot_converter
  #define ccn_ProbabilityEstimator PyOrProbabilityEstimator_Type.ot_nconverter

  #define cc_ProbabilityEstimatorConstructor PyOrProbabilityEstimatorConstructor_Type.ot_converter
  #define ccn_ProbabilityEstimatorConstructor PyOrProbabilityEstimatorConstructor_Type.ot_nconverter

  #define cc_ProbabilityEstimatorConstructor_Laplace PyOrProbabilityEstimatorConstructor_Laplace_Type.ot_converter
  #define ccn_ProbabilityEstimatorConstructor_Laplace PyOrProbabilityEstimatorConstructor_Laplace_Type.ot_nconverter

  #define cc_ProbabilityEstimatorConstructor_kernel PyOrProbabilityEstimatorConstructor_kernel_Type.ot_converter
  #define ccn_ProbabilityEstimatorConstructor_kernel PyOrProbabilityEstimatorConstructor_kernel_Type.ot_nconverter

  #define cc_ProbabilityEstimatorConstructor_loess PyOrProbabilityEstimatorConstructor_loess_Type.ot_converter
  #define ccn_ProbabilityEstimatorConstructor_loess PyOrProbabilityEstimatorConstructor_loess_Type.ot_nconverter

  #define cc_ProbabilityEstimatorConstructor_m PyOrProbabilityEstimatorConstructor_m_Type.ot_converter
  #define ccn_ProbabilityEstimatorConstructor_m PyOrProbabilityEstimatorConstructor_m_Type.ot_nconverter

  #define cc_ProbabilityEstimatorConstructor_relative PyOrProbabilityEstimatorConstructor_relative_Type.ot_converter
  #define ccn_ProbabilityEstimatorConstructor_relative PyOrProbabilityEstimatorConstructor_relative_Type.ot_nconverter

  #define cc_ProbabilityEstimatorList PyOrProbabilityEstimatorList_Type.ot_converter
  #define ccn_ProbabilityEstimatorList PyOrProbabilityEstimatorList_Type.ot_nconverter

  #define cc_ProbabilityEstimator_FromDistribution PyOrProbabilityEstimator_FromDistribution_Type.ot_converter
  #define ccn_ProbabilityEstimator_FromDistribution PyOrProbabilityEstimator_FromDistribution_Type.ot_nconverter

  #define cc_ProgressCallback PyOrProgressCallback_Type.ot_converter
  #define ccn_ProgressCallback PyOrProgressCallback_Type.ot_nconverter

  #define cc_PythonValue PyOrPythonValue_Type.ot_converter
  #define ccn_PythonValue PyOrPythonValue_Type.ot_nconverter

  #define cc_PythonValueSpecial PyOrPythonValueSpecial_Type.ot_converter
  #define ccn_PythonValueSpecial PyOrPythonValueSpecial_Type.ot_nconverter

  #define cc_PythonVariable PyOrPythonVariable_Type.ot_converter
  #define ccn_PythonVariable PyOrPythonVariable_Type.ot_nconverter

  #define cc_RandomClassifier PyOrRandomClassifier_Type.ot_converter
  #define ccn_RandomClassifier PyOrRandomClassifier_Type.ot_nconverter

  #define cc_RandomGenerator PyOrRandomGenerator_Type.ot_converter
  #define ccn_RandomGenerator PyOrRandomGenerator_Type.ot_nconverter

  #define cc_RandomLearner PyOrRandomLearner_Type.ot_converter
  #define ccn_RandomLearner PyOrRandomLearner_Type.ot_nconverter

  #define cc_RemoveRedundant PyOrRemoveRedundant_Type.ot_converter
  #define ccn_RemoveRedundant PyOrRemoveRedundant_Type.ot_nconverter

  #define cc_RemoveRedundantByInduction PyOrRemoveRedundantByInduction_Type.ot_converter
  #define ccn_RemoveRedundantByInduction PyOrRemoveRedundantByInduction_Type.ot_nconverter

  #define cc_RemoveRedundantByQuality PyOrRemoveRedundantByQuality_Type.ot_converter
  #define ccn_RemoveRedundantByQuality PyOrRemoveRedundantByQuality_Type.ot_nconverter

  #define cc_RemoveRedundantOneValue PyOrRemoveRedundantOneValue_Type.ot_converter
  #define ccn_RemoveRedundantOneValue PyOrRemoveRedundantOneValue_Type.ot_nconverter

  #define cc_RemoveUnusedValues PyOrRemoveUnusedValues_Type.ot_converter
  #define ccn_RemoveUnusedValues PyOrRemoveUnusedValues_Type.ot_nconverter

  #define cc_Rule PyOrRule_Type.ot_converter
  #define ccn_Rule PyOrRule_Type.ot_nconverter

  #define cc_RuleBeamCandidateSelector PyOrRuleBeamCandidateSelector_Type.ot_converter
  #define ccn_RuleBeamCandidateSelector PyOrRuleBeamCandidateSelector_Type.ot_nconverter

  #define cc_RuleBeamCandidateSelector_TakeAll PyOrRuleBeamCandidateSelector_TakeAll_Type.ot_converter
  #define ccn_RuleBeamCandidateSelector_TakeAll PyOrRuleBeamCandidateSelector_TakeAll_Type.ot_nconverter

  #define cc_RuleBeamFilter PyOrRuleBeamFilter_Type.ot_converter
  #define ccn_RuleBeamFilter PyOrRuleBeamFilter_Type.ot_nconverter

  #define cc_RuleBeamFilter_Width PyOrRuleBeamFilter_Width_Type.ot_converter
  #define ccn_RuleBeamFilter_Width PyOrRuleBeamFilter_Width_Type.ot_nconverter

  #define cc_RuleBeamFinder PyOrRuleBeamFinder_Type.ot_converter
  #define ccn_RuleBeamFinder PyOrRuleBeamFinder_Type.ot_nconverter

  #define cc_RuleBeamInitializer PyOrRuleBeamInitializer_Type.ot_converter
  #define ccn_RuleBeamInitializer PyOrRuleBeamInitializer_Type.ot_nconverter

  #define cc_RuleBeamInitializer_Default PyOrRuleBeamInitializer_Default_Type.ot_converter
  #define ccn_RuleBeamInitializer_Default PyOrRuleBeamInitializer_Default_Type.ot_nconverter

  #define cc_RuleBeamRefiner PyOrRuleBeamRefiner_Type.ot_converter
  #define ccn_RuleBeamRefiner PyOrRuleBeamRefiner_Type.ot_nconverter

  #define cc_RuleBeamRefiner_Selector PyOrRuleBeamRefiner_Selector_Type.ot_converter
  #define ccn_RuleBeamRefiner_Selector PyOrRuleBeamRefiner_Selector_Type.ot_nconverter

  #define cc_RuleClassifier PyOrRuleClassifier_Type.ot_converter
  #define ccn_RuleClassifier PyOrRuleClassifier_Type.ot_nconverter

  #define cc_RuleClassifierConstructor PyOrRuleClassifierConstructor_Type.ot_converter
  #define ccn_RuleClassifierConstructor PyOrRuleClassifierConstructor_Type.ot_nconverter

  #define cc_RuleClassifier_firstRule PyOrRuleClassifier_firstRule_Type.ot_converter
  #define ccn_RuleClassifier_firstRule PyOrRuleClassifier_firstRule_Type.ot_nconverter

  #define cc_RuleClassifier_logit PyOrRuleClassifier_logit_Type.ot_converter
  #define ccn_RuleClassifier_logit PyOrRuleClassifier_logit_Type.ot_nconverter

  #define cc_RuleCovererAndRemover PyOrRuleCovererAndRemover_Type.ot_converter
  #define ccn_RuleCovererAndRemover PyOrRuleCovererAndRemover_Type.ot_nconverter

  #define cc_RuleCovererAndRemover_Default PyOrRuleCovererAndRemover_Default_Type.ot_converter
  #define ccn_RuleCovererAndRemover_Default PyOrRuleCovererAndRemover_Default_Type.ot_nconverter

  #define cc_RuleDataStoppingCriteria PyOrRuleDataStoppingCriteria_Type.ot_converter
  #define ccn_RuleDataStoppingCriteria PyOrRuleDataStoppingCriteria_Type.ot_nconverter

  #define cc_RuleDataStoppingCriteria_NoPositives PyOrRuleDataStoppingCriteria_NoPositives_Type.ot_converter
  #define ccn_RuleDataStoppingCriteria_NoPositives PyOrRuleDataStoppingCriteria_NoPositives_Type.ot_nconverter

  #define cc_RuleEvaluator PyOrRuleEvaluator_Type.ot_converter
  #define ccn_RuleEvaluator PyOrRuleEvaluator_Type.ot_nconverter

  #define cc_RuleEvaluator_Entropy PyOrRuleEvaluator_Entropy_Type.ot_converter
  #define ccn_RuleEvaluator_Entropy PyOrRuleEvaluator_Entropy_Type.ot_nconverter

  #define cc_RuleEvaluator_LRS PyOrRuleEvaluator_LRS_Type.ot_converter
  #define ccn_RuleEvaluator_LRS PyOrRuleEvaluator_LRS_Type.ot_nconverter

  #define cc_RuleEvaluator_Laplace PyOrRuleEvaluator_Laplace_Type.ot_converter
  #define ccn_RuleEvaluator_Laplace PyOrRuleEvaluator_Laplace_Type.ot_nconverter

  #define cc_RuleEvaluator_mEVC PyOrRuleEvaluator_mEVC_Type.ot_converter
  #define ccn_RuleEvaluator_mEVC PyOrRuleEvaluator_mEVC_Type.ot_nconverter

  #define cc_RuleFinder PyOrRuleFinder_Type.ot_converter
  #define ccn_RuleFinder PyOrRuleFinder_Type.ot_nconverter

  #define cc_RuleLearner PyOrRuleLearner_Type.ot_converter
  #define ccn_RuleLearner PyOrRuleLearner_Type.ot_nconverter

  #define cc_RuleList PyOrRuleList_Type.ot_converter
  #define ccn_RuleList PyOrRuleList_Type.ot_nconverter

  #define cc_RuleStoppingCriteria PyOrRuleStoppingCriteria_Type.ot_converter
  #define ccn_RuleStoppingCriteria PyOrRuleStoppingCriteria_Type.ot_nconverter

  #define cc_RuleStoppingCriteria_NegativeDistribution PyOrRuleStoppingCriteria_NegativeDistribution_Type.ot_converter
  #define ccn_RuleStoppingCriteria_NegativeDistribution PyOrRuleStoppingCriteria_NegativeDistribution_Type.ot_nconverter

  #define cc_RuleValidator PyOrRuleValidator_Type.ot_converter
  #define ccn_RuleValidator PyOrRuleValidator_Type.ot_nconverter

  #define cc_RuleValidator_LRS PyOrRuleValidator_LRS_Type.ot_converter
  #define ccn_RuleValidator_LRS PyOrRuleValidator_LRS_Type.ot_nconverter

  #define cc_SVMClassifier PyOrSVMClassifier_Type.ot_converter
  #define ccn_SVMClassifier PyOrSVMClassifier_Type.ot_nconverter

  #define cc_SVMClassifierSparse PyOrSVMClassifierSparse_Type.ot_converter
  #define ccn_SVMClassifierSparse PyOrSVMClassifierSparse_Type.ot_nconverter

  #define cc_SVMLearner PyOrSVMLearner_Type.ot_converter
  #define ccn_SVMLearner PyOrSVMLearner_Type.ot_nconverter

  #define cc_SVMLearnerSparse PyOrSVMLearnerSparse_Type.ot_converter
  #define ccn_SVMLearnerSparse PyOrSVMLearnerSparse_Type.ot_nconverter

  #define cc_SimpleTreeClassifier PyOrSimpleTreeClassifier_Type.ot_converter
  #define ccn_SimpleTreeClassifier PyOrSimpleTreeClassifier_Type.ot_nconverter

  #define cc_SimpleTreeLearner PyOrSimpleTreeLearner_Type.ot_converter
  #define ccn_SimpleTreeLearner PyOrSimpleTreeLearner_Type.ot_nconverter

  #define cc_SomeValue PyOrSomeValue_Type.ot_converter
  #define ccn_SomeValue PyOrSomeValue_Type.ot_nconverter

  #define cc_StopDistributionClustering PyOrStopDistributionClustering_Type.ot_converter
  #define ccn_StopDistributionClustering PyOrStopDistributionClustering_Type.ot_nconverter

  #define cc_StopDistributionClustering_binary PyOrStopDistributionClustering_binary_Type.ot_converter
  #define ccn_StopDistributionClustering_binary PyOrStopDistributionClustering_binary_Type.ot_nconverter

  #define cc_StopDistributionClustering_n PyOrStopDistributionClustering_n_Type.ot_converter
  #define ccn_StopDistributionClustering_n PyOrStopDistributionClustering_n_Type.ot_nconverter

  #define cc_StopDistributionClustering_noBigChange PyOrStopDistributionClustering_noBigChange_Type.ot_converter
  #define ccn_StopDistributionClustering_noBigChange PyOrStopDistributionClustering_noBigChange_Type.ot_nconverter

  #define cc_StopDistributionClustering_noProfit PyOrStopDistributionClustering_noProfit_Type.ot_converter
  #define ccn_StopDistributionClustering_noProfit PyOrStopDistributionClustering_noProfit_Type.ot_nconverter

  #define cc_StopIMClusteringByAssessor PyOrStopIMClusteringByAssessor_Type.ot_converter
  #define ccn_StopIMClusteringByAssessor PyOrStopIMClusteringByAssessor_Type.ot_nconverter

  #define cc_StopIMClusteringByAssessor_binary PyOrStopIMClusteringByAssessor_binary_Type.ot_converter
  #define ccn_StopIMClusteringByAssessor_binary PyOrStopIMClusteringByAssessor_binary_Type.ot_nconverter

  #define cc_StopIMClusteringByAssessor_n PyOrStopIMClusteringByAssessor_n_Type.ot_converter
  #define ccn_StopIMClusteringByAssessor_n PyOrStopIMClusteringByAssessor_n_Type.ot_nconverter

  #define cc_StopIMClusteringByAssessor_noBigChange PyOrStopIMClusteringByAssessor_noBigChange_Type.ot_converter
  #define ccn_StopIMClusteringByAssessor_noBigChange PyOrStopIMClusteringByAssessor_noBigChange_Type.ot_nconverter

  #define cc_StopIMClusteringByAssessor_noProfit PyOrStopIMClusteringByAssessor_noProfit_Type.ot_converter
  #define ccn_StopIMClusteringByAssessor_noProfit PyOrStopIMClusteringByAssessor_noProfit_Type.ot_nconverter

  #define cc_StringList PyOrStringList_Type.ot_converter
  #define ccn_StringList PyOrStringList_Type.ot_nconverter

  #define cc_StringValue PyOrStringValue_Type.ot_converter
  #define ccn_StringValue PyOrStringValue_Type.ot_nconverter

  #define cc_StringVariable PyOrStringVariable_Type.ot_converter
  #define ccn_StringVariable PyOrStringVariable_Type.ot_nconverter

  #define cc_SubsetsGenerator PyOrSubsetsGenerator_Type.ot_converter
  #define ccn_SubsetsGenerator PyOrSubsetsGenerator_Type.ot_nconverter

  #define cc_SubsetsGenerator_constSize PyOrSubsetsGenerator_constSize_Type.ot_converter
  #define ccn_SubsetsGenerator_constSize PyOrSubsetsGenerator_constSize_Type.ot_nconverter

  #define cc_SubsetsGenerator_constSize_iterator PyOrSubsetsGenerator_constSize_iterator_Type.ot_converter
  #define ccn_SubsetsGenerator_constSize_iterator PyOrSubsetsGenerator_constSize_iterator_Type.ot_nconverter

  #define cc_SubsetsGenerator_constant PyOrSubsetsGenerator_constant_Type.ot_converter
  #define ccn_SubsetsGenerator_constant PyOrSubsetsGenerator_constant_Type.ot_nconverter

  #define cc_SubsetsGenerator_constant_iterator PyOrSubsetsGenerator_constant_iterator_Type.ot_converter
  #define ccn_SubsetsGenerator_constant_iterator PyOrSubsetsGenerator_constant_iterator_Type.ot_nconverter

  #define cc_SubsetsGenerator_iterator PyOrSubsetsGenerator_iterator_Type.ot_converter
  #define ccn_SubsetsGenerator_iterator PyOrSubsetsGenerator_iterator_Type.ot_nconverter

  #define cc_SubsetsGenerator_minMaxSize PyOrSubsetsGenerator_minMaxSize_Type.ot_converter
  #define ccn_SubsetsGenerator_minMaxSize PyOrSubsetsGenerator_minMaxSize_Type.ot_nconverter

  #define cc_SubsetsGenerator_minMaxSize_iterator PyOrSubsetsGenerator_minMaxSize_iterator_Type.ot_converter
  #define ccn_SubsetsGenerator_minMaxSize_iterator PyOrSubsetsGenerator_minMaxSize_iterator_Type.ot_nconverter

  #define cc_SubsetsGenerator_withRestrictions PyOrSubsetsGenerator_withRestrictions_Type.ot_converter
  #define ccn_SubsetsGenerator_withRestrictions PyOrSubsetsGenerator_withRestrictions_Type.ot_nconverter

  #define cc_SubsetsGenerator_withRestrictions_iterator PyOrSubsetsGenerator_withRestrictions_iterator_Type.ot_converter
  #define ccn_SubsetsGenerator_withRestrictions_iterator PyOrSubsetsGenerator_withRestrictions_iterator_Type.ot_nconverter

  #define cc_SymMatrix PyOrSymMatrix_Type.ot_converter
  #define ccn_SymMatrix PyOrSymMatrix_Type.ot_nconverter

  #define cc_TabDelimExampleGenerator PyOrTabDelimExampleGenerator_Type.ot_converter
  #define ccn_TabDelimExampleGenerator PyOrTabDelimExampleGenerator_Type.ot_nconverter

  #define cc_TableAverager PyOrTableAverager_Type.ot_converter
  #define ccn_TableAverager PyOrTableAverager_Type.ot_nconverter

  #define cc_ThresholdCA PyOrThresholdCA_Type.ot_converter
  #define ccn_ThresholdCA PyOrThresholdCA_Type.ot_nconverter

  #define cc_ThresholdDiscretizer PyOrThresholdDiscretizer_Type.ot_converter
  #define ccn_ThresholdDiscretizer PyOrThresholdDiscretizer_Type.ot_nconverter

  #define cc_TransformValue PyOrTransformValue_Type.ot_converter
  #define ccn_TransformValue PyOrTransformValue_Type.ot_nconverter

  #define cc_TransformValue_IsDefined PyOrTransformValue_IsDefined_Type.ot_converter
  #define ccn_TransformValue_IsDefined PyOrTransformValue_IsDefined_Type.ot_nconverter

  #define cc_TreeClassifier PyOrTreeClassifier_Type.ot_converter
  #define ccn_TreeClassifier PyOrTreeClassifier_Type.ot_nconverter

  #define cc_TreeDescender PyOrTreeDescender_Type.ot_converter
  #define ccn_TreeDescender PyOrTreeDescender_Type.ot_nconverter

  #define cc_TreeDescender_UnknownMergeAsBranchSizes PyOrTreeDescender_UnknownMergeAsBranchSizes_Type.ot_converter
  #define ccn_TreeDescender_UnknownMergeAsBranchSizes PyOrTreeDescender_UnknownMergeAsBranchSizes_Type.ot_nconverter

  #define cc_TreeDescender_UnknownMergeAsSelector PyOrTreeDescender_UnknownMergeAsSelector_Type.ot_converter
  #define ccn_TreeDescender_UnknownMergeAsSelector PyOrTreeDescender_UnknownMergeAsSelector_Type.ot_nconverter

  #define cc_TreeDescender_UnknownToBranch PyOrTreeDescender_UnknownToBranch_Type.ot_converter
  #define ccn_TreeDescender_UnknownToBranch PyOrTreeDescender_UnknownToBranch_Type.ot_nconverter

  #define cc_TreeDescender_UnknownToCommonBranch PyOrTreeDescender_UnknownToCommonBranch_Type.ot_converter
  #define ccn_TreeDescender_UnknownToCommonBranch PyOrTreeDescender_UnknownToCommonBranch_Type.ot_nconverter

  #define cc_TreeDescender_UnknownToCommonSelector PyOrTreeDescender_UnknownToCommonSelector_Type.ot_converter
  #define ccn_TreeDescender_UnknownToCommonSelector PyOrTreeDescender_UnknownToCommonSelector_Type.ot_nconverter

  #define cc_TreeExampleSplitter PyOrTreeExampleSplitter_Type.ot_converter
  #define ccn_TreeExampleSplitter PyOrTreeExampleSplitter_Type.ot_nconverter

  #define cc_TreeExampleSplitter_IgnoreUnknowns PyOrTreeExampleSplitter_IgnoreUnknowns_Type.ot_converter
  #define ccn_TreeExampleSplitter_IgnoreUnknowns PyOrTreeExampleSplitter_IgnoreUnknowns_Type.ot_nconverter

  #define cc_TreeExampleSplitter_UnknownsAsBranchSizes PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Type.ot_converter
  #define ccn_TreeExampleSplitter_UnknownsAsBranchSizes PyOrTreeExampleSplitter_UnknownsAsBranchSizes_Type.ot_nconverter

  #define cc_TreeExampleSplitter_UnknownsAsSelector PyOrTreeExampleSplitter_UnknownsAsSelector_Type.ot_converter
  #define ccn_TreeExampleSplitter_UnknownsAsSelector PyOrTreeExampleSplitter_UnknownsAsSelector_Type.ot_nconverter

  #define cc_TreeExampleSplitter_UnknownsToAll PyOrTreeExampleSplitter_UnknownsToAll_Type.ot_converter
  #define ccn_TreeExampleSplitter_UnknownsToAll PyOrTreeExampleSplitter_UnknownsToAll_Type.ot_nconverter

  #define cc_TreeExampleSplitter_UnknownsToBranch PyOrTreeExampleSplitter_UnknownsToBranch_Type.ot_converter
  #define ccn_TreeExampleSplitter_UnknownsToBranch PyOrTreeExampleSplitter_UnknownsToBranch_Type.ot_nconverter

  #define cc_TreeExampleSplitter_UnknownsToCommon PyOrTreeExampleSplitter_UnknownsToCommon_Type.ot_converter
  #define ccn_TreeExampleSplitter_UnknownsToCommon PyOrTreeExampleSplitter_UnknownsToCommon_Type.ot_nconverter

  #define cc_TreeExampleSplitter_UnknownsToRandom PyOrTreeExampleSplitter_UnknownsToRandom_Type.ot_converter
  #define ccn_TreeExampleSplitter_UnknownsToRandom PyOrTreeExampleSplitter_UnknownsToRandom_Type.ot_nconverter

  #define cc_TreeLearner PyOrTreeLearner_Type.ot_converter
  #define ccn_TreeLearner PyOrTreeLearner_Type.ot_nconverter

  #define cc_TreeNode PyOrTreeNode_Type.ot_converter
  #define ccn_TreeNode PyOrTreeNode_Type.ot_nconverter

  #define cc_TreeNodeList PyOrTreeNodeList_Type.ot_converter
  #define ccn_TreeNodeList PyOrTreeNodeList_Type.ot_nconverter

  #define cc_TreePruner PyOrTreePruner_Type.ot_converter
  #define ccn_TreePruner PyOrTreePruner_Type.ot_nconverter

  #define cc_TreePruner_SameMajority PyOrTreePruner_SameMajority_Type.ot_converter
  #define ccn_TreePruner_SameMajority PyOrTreePruner_SameMajority_Type.ot_nconverter

  #define cc_TreePruner_m PyOrTreePruner_m_Type.ot_converter
  #define ccn_TreePruner_m PyOrTreePruner_m_Type.ot_nconverter

  #define cc_TreeSplitConstructor PyOrTreeSplitConstructor_Type.ot_converter
  #define ccn_TreeSplitConstructor PyOrTreeSplitConstructor_Type.ot_nconverter

  #define cc_TreeSplitConstructor_Attribute PyOrTreeSplitConstructor_Attribute_Type.ot_converter
  #define ccn_TreeSplitConstructor_Attribute PyOrTreeSplitConstructor_Attribute_Type.ot_nconverter

  #define cc_TreeSplitConstructor_Combined PyOrTreeSplitConstructor_Combined_Type.ot_converter
  #define ccn_TreeSplitConstructor_Combined PyOrTreeSplitConstructor_Combined_Type.ot_nconverter

  #define cc_TreeSplitConstructor_ExhaustiveBinary PyOrTreeSplitConstructor_ExhaustiveBinary_Type.ot_converter
  #define ccn_TreeSplitConstructor_ExhaustiveBinary PyOrTreeSplitConstructor_ExhaustiveBinary_Type.ot_nconverter

  #define cc_TreeSplitConstructor_Measure PyOrTreeSplitConstructor_Measure_Type.ot_converter
  #define ccn_TreeSplitConstructor_Measure PyOrTreeSplitConstructor_Measure_Type.ot_nconverter

  #define cc_TreeSplitConstructor_OneAgainstOthers PyOrTreeSplitConstructor_OneAgainstOthers_Type.ot_converter
  #define ccn_TreeSplitConstructor_OneAgainstOthers PyOrTreeSplitConstructor_OneAgainstOthers_Type.ot_nconverter

  #define cc_TreeSplitConstructor_Threshold PyOrTreeSplitConstructor_Threshold_Type.ot_converter
  #define ccn_TreeSplitConstructor_Threshold PyOrTreeSplitConstructor_Threshold_Type.ot_nconverter

  #define cc_TreeStopCriteria PyOrTreeStopCriteria_Type.ot_converter
  #define ccn_TreeStopCriteria PyOrTreeStopCriteria_Type.ot_nconverter

  #define cc_TreeStopCriteria_Python PyOrTreeStopCriteria_Python_Type.ot_converter
  #define ccn_TreeStopCriteria_Python PyOrTreeStopCriteria_Python_Type.ot_nconverter

  #define cc_TreeStopCriteria_common PyOrTreeStopCriteria_common_Type.ot_converter
  #define ccn_TreeStopCriteria_common PyOrTreeStopCriteria_common_Type.ot_nconverter

  #define cc_ValueFilter PyOrValueFilter_Type.ot_converter
  #define ccn_ValueFilter PyOrValueFilter_Type.ot_nconverter

  #define cc_ValueFilterList PyOrValueFilterList_Type.ot_converter
  #define ccn_ValueFilterList PyOrValueFilterList_Type.ot_nconverter

  #define cc_ValueFilter_continuous PyOrValueFilter_continuous_Type.ot_converter
  #define ccn_ValueFilter_continuous PyOrValueFilter_continuous_Type.ot_nconverter

  #define cc_ValueFilter_discrete PyOrValueFilter_discrete_Type.ot_converter
  #define ccn_ValueFilter_discrete PyOrValueFilter_discrete_Type.ot_nconverter

  #define cc_ValueFilter_string PyOrValueFilter_string_Type.ot_converter
  #define ccn_ValueFilter_string PyOrValueFilter_string_Type.ot_nconverter

  #define cc_ValueFilter_stringList PyOrValueFilter_stringList_Type.ot_converter
  #define ccn_ValueFilter_stringList PyOrValueFilter_stringList_Type.ot_nconverter

  #define cc_ValueList PyOrValueList_Type.ot_converter
  #define ccn_ValueList PyOrValueList_Type.ot_nconverter

  #define cc_VarList PyOrVarList_Type.ot_converter
  #define ccn_VarList PyOrVarList_Type.ot_nconverter

  #define cc_VarListList PyOrVarListList_Type.ot_converter
  #define ccn_VarListList PyOrVarListList_Type.ot_nconverter

  #define cc_Variable PyOrVariable_Type.ot_converter
  #define ccn_Variable PyOrVariable_Type.ot_nconverter

  #define cc_VariableFilterMap PyOrVariableFilterMap_Type.ot_converter
  #define ccn_VariableFilterMap PyOrVariableFilterMap_Type.ot_nconverter

  #define cc_VariableFloatMap PyOrVariableFloatMap_Type.ot_converter
  #define ccn_VariableFloatMap PyOrVariableFloatMap_Type.ot_nconverter

  #define cc_kNNClassifier PyOrkNNClassifier_Type.ot_converter
  #define ccn_kNNClassifier PyOrkNNClassifier_Type.ot_nconverter

  #define cc_kNNLearner PyOrkNNLearner_Type.ot_converter
  #define ccn_kNNLearner PyOrkNNLearner_Type.ot_nconverter

#endif


