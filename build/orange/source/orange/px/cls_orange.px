/* This file was generated by pyxtract 
   Do not edit.*/

#include <cstddef>



/* -------------- Orange --------------*/

PyMethodDef Orange_methods[] = {
     {"__reduce__", (binaryfunc)Orange__reduce__, METH_NOARGS, "()"},
     {"clone", (binaryfunc)Orange_clone, METH_NOARGS, "() -> a sensibly deep copy of the object"},
     {"dump", (binaryfunc)Orange_dump, METH_VARARGS | METH_KEYWORDS, "(formatname, ...) -> string; Prints the object into string"},
     {"reference", (binaryfunc)Orange_reference, METH_NOARGS, "() -> reference; Returns unique id for an object"},
     {"setattr", (binaryfunc)Orange_setattr_force, METH_VARARGS, "(name, value) -> None"},
     {"typeid", (binaryfunc)Orange_typeid, METH_NOARGS, "() -> int; Returns unique id for object's type"},
     {"write", (binaryfunc)Orange_write, METH_VARARGS | METH_KEYWORDS, "(formatname, file, ...) -> string; Writes the object to a file"},
     {NULL, NULL}
};


char *Orange_recognized_attributes[] = {"name", "shortDescription", "description", NULL};

PyNumberMethods Orange_as_number = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  (inquiry)Orange_nonzero,                           /* nb_nonzero */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

PyTypeObject PyOrOrange_Type_inh = {
  PyObject_HEAD_INIT((_typeobject *)&PyType_Type)
  0,
  "Orange.core.OrangeBase",
  sizeof(TPyOrange), 0,
  (destructor)Orange_dealloc,                        /* tp_dealloc */
  0, 0, 0, 0,
  (reprfunc)Orange_repr,                             /* tp_repr */
  &Orange_as_number,                                 /* tp_as_number */
  0, 0,
  (hashfunc)Orange_hash,                             /* tp_hash */
  0,
  (reprfunc)Orange_str,                              /* tp_str */
  (getattrofunc)Orange_getattr,                      /* tp_getattro */
  (setattrofunc)Orange_setattr,                      /* tp_setattro */
  0,
  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC, /* tp_flags */
  "()",                                              /* tp_doc */
  (traverseproc)Orange_traverse,                     /* tp_traverse */
  (inquiry)Orange_clear,                             /* tp_clear */
  0, 0, 0, 0,
  Orange_methods,                                    /* tp_methods */
  0, 0, 0, 0, 0, 0,
  offsetof(TPyOrange, orange_dict),                  /* tp_dictoffset */
  (initproc)Orange_init,                             /* tp_init */
  PyType_GenericAlloc,                               /* tp_alloc */
  (newfunc)Orange_new,                               /* tp_new */
  _PyObject_GC_Del,                                  /* tp_free */
  0, 0, 0, 0, 0, 0,
};

int cc_func_Orange(PyObject *obj, void *ptr) { if (!PyOrOrange_Check(obj)) return 0;      *(GCPtr<TOrange> *)(ptr) = PyOrange_AsOrange(obj); return 1; }
int ccn_func_Orange(PyObject *obj, void *ptr) { if (obj == Py_None) { *(GCPtr<TOrange> *)(ptr) = GCPtr<TOrange>(); return 1; }      if (!PyOrOrange_Check(obj)) return 0;      *(GCPtr<TOrange> *)(ptr) = PyOrange_AsOrange(obj); return 1; }


ORANGE_API TOrangeType PyOrOrange_Type (PyOrOrange_Type_inh, typeid(TOrange), 0, cc_Orange, ccn_Orange, NULL, false, Orange_recognized_attributes, NULL);



