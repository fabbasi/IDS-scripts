 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../learn.hpp"
#include <cstddef>



/****** TLearner *****/


TPropertyDescription TLearner_properties[] = {
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TLearner, needs), true, false, 0},
  {NULL}
};

size_t const TLearner_components[] = { 0};
TClassDescription TLearner::st_classDescription = { "TLearner", &typeid(TLearner), &TOrange::st_classDescription, TLearner_properties, TLearner_components };
TClassDescription const *TLearner::classDescription() const { return &TLearner::st_classDescription; }
TOrange *TLearner::clone() const { return mlnew TLearner(*this); }


/****** TLearnerFD *****/


TPropertyDescription TLearnerFD_properties[] = {
  {"domain", "domain", &typeid(POrange), &TDomain::st_classDescription, offsetof(TLearnerFD, domain), false, false, 0},
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TLearnerFD, needs), true, false, 0},
  {NULL}
};

size_t const TLearnerFD_components[] = { offsetof(TLearnerFD, domain), 0};
TClassDescription TLearnerFD::st_classDescription = { "TLearnerFD", &typeid(TLearnerFD), &TLearner::st_classDescription, TLearnerFD_properties, TLearnerFD_components };
TClassDescription const *TLearnerFD::classDescription() const { return &TLearnerFD::st_classDescription; }
TOrange *TLearnerFD::clone() const { return mlnew TLearnerFD(*this); }
