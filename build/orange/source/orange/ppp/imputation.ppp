 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../imputation.hpp"
#include <cstddef>



/****** TTransformValue_IsDefined *****/


TPropertyDescription TTransformValue_IsDefined_properties[] = {
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TTransformValue_IsDefined, subTransform), false, false, 0},
  {NULL}
};

size_t const TTransformValue_IsDefined_components[] = { offsetof(TTransformValue_IsDefined, subTransform), 0};
TClassDescription TTransformValue_IsDefined::st_classDescription = { "TTransformValue_IsDefined", &typeid(TTransformValue_IsDefined), &TTransformValue::st_classDescription, TTransformValue_IsDefined_properties, TTransformValue_IsDefined_components };
TClassDescription const *TTransformValue_IsDefined::classDescription() const { return &TTransformValue_IsDefined::st_classDescription; }
TOrange *TTransformValue_IsDefined::clone() const { return mlnew TTransformValue_IsDefined(*this); }


/****** TImputer *****/


TPropertyDescription TImputer_properties[] = {
  {NULL}
};

size_t const TImputer_components[] = { 0};
TClassDescription TImputer::st_classDescription = { "TImputer", &typeid(TImputer), &TOrange::st_classDescription, TImputer_properties, TImputer_components };
TClassDescription const *TImputer::classDescription() const { return &TImputer::st_classDescription; }


/****** TImputer_defaults *****/


TPropertyDescription TImputer_defaults_properties[] = {
  {"defaults", "values that are to be inserted instead of missing ones", &typeid(TExample), NULL, offsetof(TImputer_defaults, defaults), false, false, 0},
  {NULL}
};

size_t const TImputer_defaults_components[] = { offsetof(TImputer_defaults, defaults), 0};
TClassDescription TImputer_defaults::st_classDescription = { "TImputer_defaults", &typeid(TImputer_defaults), &TImputer::st_classDescription, TImputer_defaults_properties, TImputer_defaults_components };
TClassDescription const *TImputer_defaults::classDescription() const { return &TImputer_defaults::st_classDescription; }
TOrange *TImputer_defaults::clone() const { return mlnew TImputer_defaults(*this); }


/****** TImputer_asValue *****/


TPropertyDescription TImputer_asValue_properties[] = {
  {"domain", "domain to which the values are converted", &typeid(POrange), &TDomain::st_classDescription, offsetof(TImputer_asValue, domain), false, false, 0},
  {"defaults", "values to impute instead of missing ones - for continuous attributes only!", &typeid(TExample), NULL, offsetof(TImputer_asValue, defaults), false, false, 0},
  {NULL}
};

size_t const TImputer_asValue_components[] = { offsetof(TImputer_asValue, domain), offsetof(TImputer_asValue, defaults), 0};
TClassDescription TImputer_asValue::st_classDescription = { "TImputer_asValue", &typeid(TImputer_asValue), &TImputer::st_classDescription, TImputer_asValue_properties, TImputer_asValue_components };
TClassDescription const *TImputer_asValue::classDescription() const { return &TImputer_asValue::st_classDescription; }
TOrange *TImputer_asValue::clone() const { return mlnew TImputer_asValue(*this); }


/****** TImputer_model *****/


TPropertyDescription TImputer_model_properties[] = {
  {"models", "classifiers", &typeid(POrange), &TClassifierList::st_classDescription, offsetof(TImputer_model, models), false, false, 0},
  {NULL}
};

size_t const TImputer_model_components[] = { offsetof(TImputer_model, models), 0};
TClassDescription TImputer_model::st_classDescription = { "TImputer_model", &typeid(TImputer_model), &TImputer::st_classDescription, TImputer_model_properties, TImputer_model_components };
TClassDescription const *TImputer_model::classDescription() const { return &TImputer_model::st_classDescription; }
TOrange *TImputer_model::clone() const { return mlnew TImputer_model(*this); }


/****** TImputer_random *****/


TPropertyDescription TImputer_random_properties[] = {
  {"impute_class", "Tells whether to impute the class values, too (default: true)", &typeid(bool), NULL, offsetof(TImputer_random, imputeClass), false, false, 0},
  {"deterministic", "tells whether to initialize random by example's CRC (default: false)", &typeid(bool), NULL, offsetof(TImputer_random, deterministic), false, false, 0},
  {"distributions", "probability functions", &typeid(POrange), &TDistributionList::st_classDescription, offsetof(TImputer_random, distributions), false, false, 0},
  {NULL}
};

size_t const TImputer_random_components[] = { offsetof(TImputer_random, distributions), 0};
TClassDescription TImputer_random::st_classDescription = { "TImputer_random", &typeid(TImputer_random), &TImputer::st_classDescription, TImputer_random_properties, TImputer_random_components };
TClassDescription const *TImputer_random::classDescription() const { return &TImputer_random::st_classDescription; }
TOrange *TImputer_random::clone() const { return mlnew TImputer_random(*this); }


/****** TImputerConstructor *****/


TPropertyDescription TImputerConstructor_properties[] = {
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_components[] = { 0};
TClassDescription TImputerConstructor::st_classDescription = { "TImputerConstructor", &typeid(TImputerConstructor), &TOrange::st_classDescription, TImputerConstructor_properties, TImputerConstructor_components };
TClassDescription const *TImputerConstructor::classDescription() const { return &TImputerConstructor::st_classDescription; }


/****** TImputerConstructor_defaults *****/


TPropertyDescription TImputerConstructor_defaults_properties[] = {
  {"defaults", "default values to be imputed instead missing ones", &typeid(TExample), NULL, offsetof(TImputerConstructor_defaults, defaults), false, false, 0},
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_defaults, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_defaults_components[] = { offsetof(TImputerConstructor_defaults, defaults), 0};
TClassDescription TImputerConstructor_defaults::st_classDescription = { "TImputerConstructor_defaults", &typeid(TImputerConstructor_defaults), &TImputerConstructor::st_classDescription, TImputerConstructor_defaults_properties, TImputerConstructor_defaults_components };
TClassDescription const *TImputerConstructor_defaults::classDescription() const { return &TImputerConstructor_defaults::st_classDescription; }
TOrange *TImputerConstructor_defaults::clone() const { return mlnew TImputerConstructor_defaults(*this); }


/****** TImputerConstructor_average *****/


TPropertyDescription TImputerConstructor_average_properties[] = {
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_average, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_average_components[] = { 0};
TClassDescription TImputerConstructor_average::st_classDescription = { "TImputerConstructor_average", &typeid(TImputerConstructor_average), &TImputerConstructor::st_classDescription, TImputerConstructor_average_properties, TImputerConstructor_average_components };
TClassDescription const *TImputerConstructor_average::classDescription() const { return &TImputerConstructor_average::st_classDescription; }
TOrange *TImputerConstructor_average::clone() const { return mlnew TImputerConstructor_average(*this); }


/****** TImputerConstructor_minimal *****/


TPropertyDescription TImputerConstructor_minimal_properties[] = {
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_minimal, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_minimal_components[] = { 0};
TClassDescription TImputerConstructor_minimal::st_classDescription = { "TImputerConstructor_minimal", &typeid(TImputerConstructor_minimal), &TImputerConstructor::st_classDescription, TImputerConstructor_minimal_properties, TImputerConstructor_minimal_components };
TClassDescription const *TImputerConstructor_minimal::classDescription() const { return &TImputerConstructor_minimal::st_classDescription; }
TOrange *TImputerConstructor_minimal::clone() const { return mlnew TImputerConstructor_minimal(*this); }


/****** TImputerConstructor_maximal *****/


TPropertyDescription TImputerConstructor_maximal_properties[] = {
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_maximal, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_maximal_components[] = { 0};
TClassDescription TImputerConstructor_maximal::st_classDescription = { "TImputerConstructor_maximal", &typeid(TImputerConstructor_maximal), &TImputerConstructor::st_classDescription, TImputerConstructor_maximal_properties, TImputerConstructor_maximal_components };
TClassDescription const *TImputerConstructor_maximal::classDescription() const { return &TImputerConstructor_maximal::st_classDescription; }
TOrange *TImputerConstructor_maximal::clone() const { return mlnew TImputerConstructor_maximal(*this); }


/****** TImputerConstructor_asValue *****/


TPropertyDescription TImputerConstructor_asValue_properties[] = {
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_asValue, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_asValue_components[] = { 0};
TClassDescription TImputerConstructor_asValue::st_classDescription = { "TImputerConstructor_asValue", &typeid(TImputerConstructor_asValue), &TImputerConstructor::st_classDescription, TImputerConstructor_asValue_properties, TImputerConstructor_asValue_components };
TClassDescription const *TImputerConstructor_asValue::classDescription() const { return &TImputerConstructor_asValue::st_classDescription; }
TOrange *TImputerConstructor_asValue::clone() const { return mlnew TImputerConstructor_asValue(*this); }


/****** TImputerConstructor_model *****/


TPropertyDescription TImputerConstructor_model_properties[] = {
  {"learner_discrete", "learner for discrete attributes", &typeid(POrange), &TLearner::st_classDescription, offsetof(TImputerConstructor_model, learnerDiscrete), false, false, 0},
  {"learner_continuous", "learner for continuous attributes", &typeid(POrange), &TLearner::st_classDescription, offsetof(TImputerConstructor_model, learnerContinuous), false, false, 0},
  {"use_class", "tells whether to use class value in imputation (default: false)", &typeid(bool), NULL, offsetof(TImputerConstructor_model, useClass), false, false, 0},
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_model, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_model_components[] = { offsetof(TImputerConstructor_model, learnerDiscrete), offsetof(TImputerConstructor_model, learnerContinuous), 0};
TClassDescription TImputerConstructor_model::st_classDescription = { "TImputerConstructor_model", &typeid(TImputerConstructor_model), &TImputerConstructor::st_classDescription, TImputerConstructor_model_properties, TImputerConstructor_model_components };
TClassDescription const *TImputerConstructor_model::classDescription() const { return &TImputerConstructor_model::st_classDescription; }
TOrange *TImputerConstructor_model::clone() const { return mlnew TImputerConstructor_model(*this); }


/****** TImputerConstructor_random *****/


TPropertyDescription TImputerConstructor_random_properties[] = {
  {"deterministic", "tells whether to initialize random by example's CRC (default: false)", &typeid(bool), NULL, offsetof(TImputerConstructor_random, deterministic), false, false, 0},
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstructor_random, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstructor_random_components[] = { 0};
TClassDescription TImputerConstructor_random::st_classDescription = { "TImputerConstructor_random", &typeid(TImputerConstructor_random), &TImputerConstructor::st_classDescription, TImputerConstructor_random_properties, TImputerConstructor_random_components };
TClassDescription const *TImputerConstructor_random::classDescription() const { return &TImputerConstructor_random::st_classDescription; }
TOrange *TImputerConstructor_random::clone() const { return mlnew TImputerConstructor_random(*this); }
