 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../nearest.hpp"
#include <cstddef>



/****** TFindNearest *****/


TPropertyDescription TFindNearest_properties[] = {
  {"distance_ID", "id of meta attribute where the distance should be stored (0 = no storing)", &typeid(int), NULL, offsetof(TFindNearest, distanceID), false, false, 0},
  {"include_same", "tells whether to include examples that are same as the reference example", &typeid(bool), NULL, offsetof(TFindNearest, includeSame), false, false, 0},
  {NULL}
};

size_t const TFindNearest_components[] = { 0};
TClassDescription TFindNearest::st_classDescription = { "TFindNearest", &typeid(TFindNearest), &TOrange::st_classDescription, TFindNearest_properties, TFindNearest_components };
TClassDescription const *TFindNearest::classDescription() const { return &TFindNearest::st_classDescription; }


/****** TFindNearest_BruteForce *****/


TPropertyDescription TFindNearest_BruteForce_properties[] = {
  {"distance", "metrics", &typeid(POrange), &TExamplesDistance::st_classDescription, offsetof(TFindNearest_BruteForce, distance), false, false, 0},
  {"examples", "a list of stored examples", &typeid(POrange), &TExampleGenerator::st_classDescription, offsetof(TFindNearest_BruteForce, examples), false, false, 0},
  {"weight_ID", "weight to use when counting examples", &typeid(int), NULL, offsetof(TFindNearest_BruteForce, weightID), false, false, 0},
  {"distance_ID", "id of meta attribute where the distance should be stored (0 = no storing)", &typeid(int), NULL, offsetof(TFindNearest_BruteForce, distanceID), false, false, 0},
  {"include_same", "tells whether to include examples that are same as the reference example", &typeid(bool), NULL, offsetof(TFindNearest_BruteForce, includeSame), false, false, 0},
  {NULL}
};

size_t const TFindNearest_BruteForce_components[] = { offsetof(TFindNearest_BruteForce, distance), offsetof(TFindNearest_BruteForce, examples), 0};
TClassDescription TFindNearest_BruteForce::st_classDescription = { "TFindNearest_BruteForce", &typeid(TFindNearest_BruteForce), &TFindNearest::st_classDescription, TFindNearest_BruteForce_properties, TFindNearest_BruteForce_components };
TClassDescription const *TFindNearest_BruteForce::classDescription() const { return &TFindNearest_BruteForce::st_classDescription; }
TOrange *TFindNearest_BruteForce::clone() const { return mlnew TFindNearest_BruteForce(*this); }


/****** TFindNearestConstructor *****/


TPropertyDescription TFindNearestConstructor_properties[] = {
  {"distance_constructor", "metrics", &typeid(POrange), &TExamplesDistanceConstructor::st_classDescription, offsetof(TFindNearestConstructor, distanceConstructor), false, false, 0},
  {"include_same", "tells whether to include examples that are same as the reference example", &typeid(bool), NULL, offsetof(TFindNearestConstructor, includeSame), false, false, 0},
  {NULL}
};

size_t const TFindNearestConstructor_components[] = { offsetof(TFindNearestConstructor, distanceConstructor), 0};
TClassDescription TFindNearestConstructor::st_classDescription = { "TFindNearestConstructor", &typeid(TFindNearestConstructor), &TOrange::st_classDescription, TFindNearestConstructor_properties, TFindNearestConstructor_components };
TClassDescription const *TFindNearestConstructor::classDescription() const { return &TFindNearestConstructor::st_classDescription; }


/****** TFindNearestConstructor_BruteForce *****/


TPropertyDescription TFindNearestConstructor_BruteForce_properties[] = {
  {"distance_constructor", "metrics", &typeid(POrange), &TExamplesDistanceConstructor::st_classDescription, offsetof(TFindNearestConstructor_BruteForce, distanceConstructor), false, false, 0},
  {"include_same", "tells whether to include examples that are same as the reference example", &typeid(bool), NULL, offsetof(TFindNearestConstructor_BruteForce, includeSame), false, false, 0},
  {NULL}
};

size_t const TFindNearestConstructor_BruteForce_components[] = { offsetof(TFindNearestConstructor_BruteForce, distanceConstructor), 0};
TClassDescription TFindNearestConstructor_BruteForce::st_classDescription = { "TFindNearestConstructor_BruteForce", &typeid(TFindNearestConstructor_BruteForce), &TFindNearestConstructor::st_classDescription, TFindNearestConstructor_BruteForce_properties, TFindNearestConstructor_BruteForce_components };
TClassDescription const *TFindNearestConstructor_BruteForce::classDescription() const { return &TFindNearestConstructor_BruteForce::st_classDescription; }
TOrange *TFindNearestConstructor_BruteForce::clone() const { return mlnew TFindNearestConstructor_BruteForce(*this); }
