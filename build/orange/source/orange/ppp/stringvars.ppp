 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../stringvars.hpp"
#include <cstddef>



/****** TStringValue *****/


TPropertyDescription TStringValue_properties[] = {
  {NULL}
};

size_t const TStringValue_components[] = { 0};
TClassDescription TStringValue::st_classDescription = { "TStringValue", &typeid(TStringValue), &TSomeValue::st_classDescription, TStringValue_properties, TStringValue_components };
TClassDescription const *TStringValue::classDescription() const { return &TStringValue::st_classDescription; }
TOrange *TStringValue::clone() const { return mlnew TStringValue(*this); }


/****** TStringVariable *****/

void *PTVariable_Type(void *);

TPropertyDescription TStringVariable_properties[] = {
  {"var_type", " variable type", &typeid(int), NULL, offsetof(TStringVariable, varType), false, false, PTVariable_Type},
  {"ordered", "variable values are ordered", &typeid(bool), NULL, offsetof(TStringVariable, ordered), false, false, 0},
  {"distributed", "variable values are distributions", &typeid(bool), NULL, offsetof(TStringVariable, distributed), false, false, 0},
  {"default_meta_id", "default (proposed, suggested...) meta id for this variable", &typeid(int), NULL, offsetof(TStringVariable, defaultMetaId), false, false, 0},
  {"random_generator", "random generator for random values (initialized when first needed)", &typeid(POrange), &TRandomGenerator::st_classDescription, offsetof(TStringVariable, randomGenerator), false, false, 0},
  {"source_variable", "The attribute that this attribute is computed from (when applicable)", &typeid(POrange), &TVariable::st_classDescription, offsetof(TStringVariable, sourceVariable), false, false, 0},
  {"get_value_from", "Function to compute the value from values of other variables", &typeid(POrange), &TClassifier::st_classDescription, offsetof(TStringVariable, getValueFrom), false, false, 0},
  {NULL}
};

size_t const TStringVariable_components[] = { offsetof(TStringVariable, randomGenerator), offsetof(TStringVariable, sourceVariable), offsetof(TStringVariable, getValueFrom), 0};
TClassDescription TStringVariable::st_classDescription = { "TStringVariable", &typeid(TStringVariable), &TVariable::st_classDescription, TStringVariable_properties, TStringVariable_components };
TClassDescription const *TStringVariable::classDescription() const { return &TStringVariable::st_classDescription; }
TOrange *TStringVariable::clone() const { return mlnew TStringVariable(*this); }
