(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I0
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'abstract'
p9
I00
sS'components'
p10
(lp11
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
S'learner_for_discrete'
p16
S'constructs a classifier for imputation of discrete values'
p17
I0
I0
I00
Ntp18
a(S'TLearner'
p19
S'learnerForContinuous'
p20
S'learner_for_continuous'
p21
S'constructs a classifier for imputation of continuous values'
p22
I0
I0
I00
Ntp23
a(S'bool'
p24
S'classIsOuter'
p25
S'class_is_outer'
p26
S'tells whether the class is the outer variable in contingencies'
p27
I0
I0
I01
Ntp28
asS'constants'
p29
(dp30
sbsS'TRuleDataStoppingCriteria_NoPositives'
p31
(i__main__
ClassDefinition
p32
(dp33
g4
I1
sg5
I0
sg6
g31
sg7
S'TRuleDataStoppingCriteria'
p34
sg9
I00
sg10
(lp35
sg12
(lp36
sg29
(dp37
sbsS'TLearner_Python'
p38
(i__main__
ClassDefinition
p39
(dp40
g4
I1
sg5
I0
sg6
g38
sg7
S'TLearner'
p41
sg9
I00
sg10
(lp42
sg12
(lp43
(S'int'
p44
S'needs'
p45
g45
S'the kind of data that learner needs'
p46
I01
I0
I01
Ntp47
asg29
(dp48
sbsS'TConditionalProbabilityEstimator_FromDistribution'
p49
(i__main__
ClassDefinition
p50
(dp51
g4
I1
sg5
I0
sg6
g49
sg7
S'TConditionalProbabilityEstimator'
p52
sg9
I00
sg10
(lp53
sg12
(lp54
(S'TContingency'
p55
S'probabilities'
p56
g56
S'Contingency that stores conditional probabilities'
p57
I0
I0
I00
Ntp58
a(S'bool'
p59
S'supportsDiscrete'
p60
S'supports_discrete'
p61
S'can estimate probabilities of discrete attributes'
p62
I01
I0
I01
Ntp63
a(S'bool'
p64
S'supportsContinuous'
p65
S'supports_continuous'
p66
S'can estimate probabilities of continuous attributes'
p67
I01
I0
I01
Ntp68
asg29
(dp69
sbsS'TFeatureInducer'
p70
(i__main__
ClassDefinition
p71
(dp72
g4
I1
sg5
I0
sg6
g70
sg7
S'TOrange'
p73
sg9
I01
sg10
(lp74
sg12
(lp75
sg29
(dp76
sbsS'TIMByRowsConstructor'
p77
(i__main__
ClassDefinition
p78
(dp79
g4
I1
sg5
I0
sg6
g77
sg7
S'TOrange'
p80
sg9
I01
sg10
(lp81
sg12
(lp82
sg29
(dp83
sbsS'TFilteredGenerator'
p84
(i__main__
ClassDefinition
p85
(dp86
g4
I1
sg5
I0
sg6
g84
sg7
S'TAdapterGenerator'
p87
sg9
I00
sg10
(lp88
sg12
(lp89
(S'TFilter'
p90
S'filter'
p91
g91
S'decides which examples are skipped'
p92
I0
I0
I00
Ntp93
a(S'TDomain'
p94
S'domain'
p95
g95
S'domain'
p96
I0
I0
I00
Ntp97
a(S'int'
p98
S'version'
p99
g99
S'unique version identifier'
p100
I01
I0
I01
Ntp101
asg29
(dp102
sbsS'TExamplesDistance_Maximal'
p103
(i__main__
ClassDefinition
p104
(dp105
g4
I1
sg5
I0
sg6
g103
sg7
S'TExamplesDistance_Normalized'
p106
sg9
I00
sg10
(lp107
sg12
(lp108
(S'TAttributedFloatList'
p109
S'normalizers'
p110
g110
S'normalizing factors for attributes'
p111
I0
I0
I00
Ntp112
a(S'TAttributedFloatList'
p113
S'bases'
p114
g114
S'lowest values for attributes'
p115
I0
I0
I00
Ntp116
a(S'TAttributedFloatList'
p117
S'averages'
p118
g118
S'average values for continuous attribute values'
p119
I0
I0
I00
Ntp120
a(S'TAttributedFloatList'
p121
S'variances'
p122
g122
S'variations for continuous attribute values'
p123
I0
I0
I00
Ntp124
a(S'int'
p125
S'domainVersion'
p126
S'domain_version'
p127
S'version of domain on which the ranges were computed'
p128
I0
I0
I01
Ntp129
a(S'bool'
p130
S'normalize'
p131
g131
S'tells whether to normalize distances between attributes'
p132
I0
I0
I01
Ntp133
a(S'bool'
p134
S'ignoreUnknowns'
p135
S'ignore_unknowns'
p136
S'if true (default: false) unknown values are ignored in computation'
p137
I0
I0
I01
Ntp138
asg29
(dp139
sbsS'TSubsetsGenerator_withRestrictions_iterator'
p140
(i__main__
ClassDefinition
p141
(dp142
g4
I1
sg5
I0
sg6
g140
sg7
S'TSubsetsGenerator_iterator'
p143
sg9
I00
sg10
(lp144
sg12
(lp145
(S'TSubsetsGenerator_iterator'
p146
S'subGenerator_iterator'
p147
S'sub_generator_iterator'
p148
S'subset generator'
p149
I0
I0
I00
Ntp150
a(S'TVarList'
p151
S'required'
p152
g152
S'set of required attributes'
p153
I0
I0
I00
Ntp154
a(S'TVarList'
p155
S'forbidden'
p156
g156
S'set of forbidden attributes'
p157
I0
I0
I00
Ntp158
a(S'TVarListList'
p159
S'forbiddenSubSubsets'
p160
S'forbidden_sub_subsets'
p161
S'set of forbidden subsets (attributes that must not occur together)'
p162
I0
I0
I00
Ntp163
a(S'TVarList'
p164
S'varList'
p165
S'var_list'
p166
S'a set of attributes from which subsets are generated'
p167
I0
I0
I00
Ntp168
asg29
(dp169
sbsS'TPreprocessor_discretize'
p170
(i__main__
ClassDefinition
p171
(dp172
g4
I1
sg5
I0
sg6
g170
sg7
S'TPreprocessor'
p173
sg9
I00
sg10
(lp174
sg12
(lp175
(S'TVarList'
p176
S'attributes'
p177
g177
S'attributes to be discretized (all, if not defined or empty)'
p178
I0
I0
I00
Ntp179
a(S'bool'
p180
S'discretizeClass'
p181
S'discretize_class'
p182
S'also discretize the class attribute (default: false)'
p183
I0
I0
I01
Ntp184
a(S'TDiscretization'
p185
S'method'
p186
g186
S'discretization method'
p187
I0
I0
I00
Ntp188
asg29
(dp189
sbsS'TProgressCallback_Python'
p190
(i__main__
ClassDefinition
p191
(dp192
g4
I1
sg5
I0
sg6
g190
sg7
S'TProgressCallback'
p193
sg9
I00
sg10
(lp194
sg12
(lp195
sg29
(dp196
sbsS'TAssociationRulesSparseInducer'
p197
(i__main__
ClassDefinition
p198
(dp199
g4
I1
sg5
I0
sg6
g197
sg7
S'TOrange'
p200
sg9
I00
sg10
(lp201
sg12
(lp202
(S'int'
p203
S'maxItemSets'
p204
S'max_item_sets'
p205
S'maximal number of itemsets (increase if you want)'
p206
I0
I0
I01
Ntp207
a(S'float'
p208
S'confidence'
p209
g209
S'required confidence'
p210
I0
I0
I01
Ntp211
a(S'float'
p212
S'support'
p213
g213
S'required support'
p214
I0
I0
I01
Ntp215
a(S'bool'
p216
S'storeExamples'
p217
S'store_examples'
p218
S'stores examples corresponding to rules'
p219
I0
I0
I01
Ntp220
asg29
(dp221
sbsS'TFilter_sameExample'
p222
(i__main__
ClassDefinition
p223
(dp224
g4
I1
sg5
I0
sg6
g222
sg7
S'TFilter'
p225
sg9
I00
sg10
(lp226
sg12
(lp227
(S'TExample'
p228
S'example'
p229
g229
S'example with which examples are compared'
p230
I0
I0
I00
Ntp231
a(S'bool'
p232
S'negate'
p233
g233
S'if true, filter output should be negated.'
p234
I0
I0
I01
Ntp235
a(S'TDomain'
p236
S'domain'
p237
g237
S'domain to which the examples are converted (if needed)'
p238
I0
I0
I00
Ntp239
asg29
(dp240
sbsS'TRuleClassifierConstructor'
p241
(i__main__
ClassDefinition
p242
(dp243
g4
I1
sg5
I0
sg6
g241
sg7
S'TOrange'
p244
sg9
I01
sg10
(lp245
sg12
(lp246
sg29
(dp247
sbsS'TMakeRandomIndicesMultiple'
p248
(i__main__
ClassDefinition
p249
(dp250
g4
I1
sg5
I0
sg6
g248
sg7
S'TMakeRandomIndices'
p251
sg9
I00
sg10
(lp252
sg12
(lp253
(S'int'
p254
S'stratified'
p255
g255
S' requests stratified distributions'
p256
I0
I0
I01
S'MakeRandomIndices_Stratification'
p257
tp258
a(S'int'
p259
S'randseed'
p260
g260
S'a seed for random generator'
p261
I0
I0
I01
Ntp262
a(S'TRandomGenerator'
p263
S'randomGenerator'
p264
S'random_generator'
p265
S'a random generator'
p266
I0
I0
I00
Ntp267
asg29
(dp268
sbsS'TLearnerFD'
p269
(i__main__
ClassDefinition
p270
(dp271
g4
I1
sg5
I0
sg6
g269
sg7
S'TLearner'
p272
sg9
I00
sg10
(lp273
sg12
(lp274
(S'TDomain'
p275
S'domain'
p276
g276
S'domain'
p277
I0
I0
I00
Ntp278
ag47
asg29
(dp279
sbsNNsS'TMapIntValue'
p280
(i__main__
ClassDefinition
p281
(dp282
g4
I1
sg5
I0
sg6
g280
sg7
S'TTransformValue'
p283
sg9
I00
sg10
(lp284
sg12
(lp285
(S'TIntList'
p286
S'mapping'
p287
g287
S'a lookup table'
p288
I0
I0
I00
Ntp289
a(S'TTransformValue'
p290
S'subTransform'
p291
S'sub_transform'
p292
S'transformation executed prior to this'
p293
I0
I0
I00
Ntp294
asg29
(dp295
sbsS'TEVDistGetter_Standard'
p296
(i__main__
ClassDefinition
p297
(dp298
g4
I1
sg5
I0
sg6
g296
sg7
S'TEVDistGetter'
p299
sg9
I00
sg10
(lp300
sg12
(lp301
(S'TEVDistList'
p302
S'dists'
p303
g303
S'EVC distribution (sorted by rule length, 0 = for rules without conditions)'
p304
I0
I0
I00
Ntp305
asg29
(dp306
sbsS'TFeatureByIM'
p307
(i__main__
ClassDefinition
p308
(dp309
g4
I1
sg5
I0
sg6
g307
sg7
S'TFeatureInducer'
p310
sg9
I00
sg10
(lp311
sg12
(lp312
(S'TIMConstructor'
p313
S'IMconstructor'
p314
g314
S'incompatibility matrix constructor'
p315
I0
I0
I00
Ntp316
a(S'TClustersFromIM'
p317
S'clustersFromIM'
p318
S'clusters_from_IM'
p319
S'clustering algorithm'
p320
I0
I0
I00
Ntp321
a(S'int'
p322
S'completion'
p323
g323
S' decides how to determine the class for points not covered by any cluster'
p324
I0
I0
I01
S'FeatureByIM_Completion'
p325
tp326
asg29
(dp327
S'Completion'
p328
(lp329
(S'NoCompletion'
p330
S'completion_no'
p331
tp332
a(S'CompletionByDefault'
p333
S'completion_default'
p334
tp335
a(S'CompletionByBayes'
p336
S'completion_bayes'
p337
tp338
assbsS'TRuleBeamRefiner'
p339
(i__main__
ClassDefinition
p340
(dp341
g4
I1
sg5
I0
sg6
g339
sg7
S'TOrange'
p342
sg9
I01
sg10
(lp343
sg12
(lp344
sg29
(dp345
sbsS'TSubsetsGenerator_iterator'
p346
(i__main__
ClassDefinition
p347
(dp348
g4
I1
sg5
I0
sg6
g346
sg7
S'TOrange'
p349
sg9
I01
sg10
(lp350
sg12
(lp351
g168
asg29
(dp352
sbsS'TEquiDistDiscretizer'
p353
(i__main__
ClassDefinition
p354
(dp355
g4
I1
sg5
I0
sg6
g353
sg7
S'TDiscretizer'
p356
sg9
I00
sg10
(lp357
sg12
(lp358
(S'int'
p359
S'numberOfIntervals'
p360
(g360
S'n'
p361
tp362
S' number of intervals'
p363
I0
I0
I01
Ntp364
a(S'float'
p365
S'firstCut'
p366
S'first_cut'
p367
S'the first cut-off point'
p368
I0
I0
I01
Ntp369
a(S'float'
p370
S'step'
p371
g371
S'step (width of interval)'
p372
I0
I0
I01
Ntp373
ag294
asg29
(dp374
sbsS'TFindNearest_BruteForce'
p375
(i__main__
ClassDefinition
p376
(dp377
g4
I1
sg5
I0
sg6
g375
sg7
S'TFindNearest'
p378
sg9
I00
sg10
(lp379
sg12
(lp380
(S'TExamplesDistance'
p381
S'distance'
p382
g382
S'metrics'
p383
I0
I0
I00
Ntp384
a(S'TExampleGenerator'
p385
S'examples'
p386
g386
S'a list of stored examples'
p387
I0
I0
I00
Ntp388
a(S'int'
p389
S'weightID'
p390
S'weight_ID'
p391
S'weight to use when counting examples'
p392
I0
I0
I01
Ntp393
a(S'int'
p394
S'distanceID'
p395
S'distance_ID'
p396
S'id of meta attribute where the distance should be stored (0 = no storing)'
p397
I0
I0
I01
Ntp398
a(S'bool'
p399
S'includeSame'
p400
S'include_same'
p401
S'tells whether to include examples that are same as the reference example'
p402
I0
I0
I01
Ntp403
asg29
(dp404
sbsS'TRuleBeamInitializer'
p405
(i__main__
ClassDefinition
p406
(dp407
g4
I1
sg5
I0
sg6
g405
sg7
S'TOrange'
p408
sg9
I01
sg10
(lp409
sg12
(lp410
sg29
(dp411
sbsS'TMeasureAttribute_relevance'
p412
(i__main__
ClassDefinition
p413
(dp414
g4
I1
sg5
I0
sg6
g412
sg7
S'TMeasureAttributeFromProbabilities'
p415
sg9
I00
sg10
(lp416
sg12
(lp417
(S'TProbabilityEstimatorConstructor'
p418
S'estimatorConstructor'
p419
S'estimator_constructor'
p420
S'probability estimator (none by default)'
p421
I0
I0
I00
Ntp422
a(S'TConditionalProbabilityEstimatorConstructor'
p423
S'conditionalEstimatorConstructor'
p424
S'conditional_estimator_constructor'
p425
S'conditional probability estimator (none by default)'
p426
I0
I0
I00
Ntp427
a(S'int'
p428
S'unknownsTreatment'
p429
S'unknowns_treatment'
p430
S' treatment of unknown values'
p431
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p432
tp433
a(S'int'
p434
S'needs'
p435
g435
S' describes what kind of data is needed for computation'
p436
I0
I0
I01
S'MeasureAttribute_Needs'
p437
tp438
a(S'bool'
p439
S'handlesDiscrete'
p440
S'handles_discrete'
p441
S'tells whether the measure can handle discrete attributes'
p442
I0
I0
I01
Ntp443
a(S'bool'
p444
S'handlesContinuous'
p445
S'handles_continuous'
p446
S'tells whether the measure can handle continuous attributes'
p447
I0
I0
I01
Ntp448
a(S'bool'
p449
S'computesThresholds'
p450
S'computes_thresholds'
p451
S'tells whether the measure can compute threshold functions/maxima for continuous attributes'
p452
I0
I0
I01
Ntp453
asg29
(dp454
sbsS'TBayesLearner'
p455
(i__main__
ClassDefinition
p456
(dp457
g4
I1
sg5
I0
sg6
g455
sg7
S'TLearner'
p458
sg9
I00
sg10
(lp459
sg12
(lp460
(S'TProbabilityEstimatorConstructor'
p461
S'estimatorConstructor'
p462
S'estimator_constructor'
p463
S'constructs a probability estimator for P(C)'
p464
I0
I0
I00
Ntp465
a(S'TConditionalProbabilityEstimatorConstructor'
p466
S'conditionalEstimatorConstructor'
p467
S'conditional_estimator_constructor'
p468
S'constructs a probability estimator for P(C|A) '
p469
I0
I0
I00
Ntp470
a(S'TConditionalProbabilityEstimatorConstructor'
p471
S'conditionalEstimatorConstructorContinuous'
p472
S'conditional_estimator_constructor_continuous'
p473
S'constructs a probability estimator for P(C|A) for continuous attributes'
p474
I0
I0
I00
Ntp475
a(S'bool'
p476
S'normalizePredictions'
p477
S'normalize_predictions'
p478
S'instructs learner to construct a classifier that normalizes probabilities'
p479
I0
I0
I01
Ntp480
a(S'bool'
p481
S'adjustThreshold'
p482
S'adjust_threshold'
p483
S'adjust probability thresholds (for binary classes only)'
p484
I0
I0
I01
Ntp485
ag47
asg29
(dp486
sbsS'TConditionalProbabilityEstimator'
p487
(i__main__
ClassDefinition
p488
(dp489
g4
I1
sg5
I0
sg6
g487
sg7
S'TOrange'
p490
sg9
I01
sg10
(lp491
sg12
(lp492
g63
ag68
asg29
(dp493
sbsS'TColumnAssessor_Laplace'
p494
(i__main__
ClassDefinition
p495
(dp496
g4
I1
sg5
I0
sg6
g494
sg7
S'TColumnAssessor'
p497
sg9
I00
sg10
(lp498
sg12
(lp499
sg29
(dp500
sbsS'TFilter_compatibleExample'
p501
(i__main__
ClassDefinition
p502
(dp503
g4
I1
sg5
I0
sg6
g501
sg7
S'TFilter'
p504
sg9
I00
sg10
(lp505
sg12
(lp506
(S'TExample'
p507
S'example'
p508
g508
S'example with which examples are compared'
p509
I0
I0
I00
Ntp510
ag235
ag239
asg29
(dp511
sbsS'TRemoveRedundant'
p512
(i__main__
ClassDefinition
p513
(dp514
g4
I1
sg5
I0
sg6
g512
sg7
S'TOrange'
p515
sg9
I01
sg10
(lp516
sg12
(lp517
(S'bool'
p518
S'keepValues'
p519
S'keep_values'
p520
S'keep an attribute if number values is only smaller, not one'
p521
I0
I0
I01
Ntp522
asg29
(dp523
sbsS'TExamplesDistanceConstructor_Hamming'
p524
(i__main__
ClassDefinition
p525
(dp526
g4
I1
sg5
I0
sg6
g524
sg7
S'TExamplesDistanceConstructor'
p527
sg9
I00
sg10
(lp528
sg12
(lp529
(S'bool'
p530
S'ignoreClass'
p531
S'ignore_class'
p532
S'if true (default), class value is ignored when computing distances'
p533
I0
I0
I01
Ntp534
a(S'bool'
p535
S'ignoreUnknowns'
p536
S'ignore_unknowns'
p537
S'if true (default: false) unknown values are ignored in computation'
p538
I0
I0
I01
Ntp539
a(S'bool'
p540
S'ignoreClass'
p541
S'ignore_class'
p542
S'if true (default), class value is ignored when computing distances'
p543
I0
I0
I01
Ntp544
asg29
(dp545
sbsS'TRuleClassifierConstructor_firstRule'
p546
(i__main__
ClassDefinition
p547
(dp548
g4
I1
sg5
I0
sg6
g546
sg7
S'TRuleClassifierConstructor'
p549
sg9
I00
sg10
(lp550
sg12
(lp551
sg29
(dp552
sbsS'TStopDistributionClustering_noProfit'
p553
(i__main__
ClassDefinition
p554
(dp555
g4
I1
sg5
I0
sg6
g553
sg7
S'TStopDistributionClustering'
p556
sg9
I00
sg10
(lp557
sg12
(lp558
(S'float'
p559
S'minProfitProportion'
p560
S'min_profit_proportion'
p561
S'minimal allowable profit proportion'
p562
I0
I0
I01
Ntp563
asg29
(dp564
sbsS'TColoredIG'
p565
(i__main__
ClassDefinition
p566
(dp567
g4
I1
sg5
I0
sg6
g565
sg7
S'TGeneralExampleClustering'
p568
sg9
I00
sg10
(lp569
sg12
(lp570
(S'TIG'
p571
S'ig'
p572
g572
S'incompatibility graph'
p573
I0
I0
I00
Ntp574
a(S'TIntList'
p575
S'colors'
p576
g576
S'colors (one element corresponding to each ig node)'
p577
I0
I0
I00
Ntp578
asg29
(dp579
sbsS'TMeasureAttribute'
p580
(i__main__
ClassDefinition
p581
(dp582
g4
I1
sg5
I0
sg6
g580
sg7
S'TOrange'
p583
sg9
I00
sg10
(lp584
sg12
(lp585
g438
ag443
ag448
ag453
asg29
(dp586
S'Needs'
p587
(lp588
(S'Contingency_Class'
p589
I0
tp590
a(S'DomainContingency'
p591
I1
tp592
a(S'Generator'
p593
I2
tp594
asS'UnknownsTreatment'
p595
(lp596
(S'IgnoreUnknowns'
p597
I0
tp598
a(S'ReduceByUnknowns'
p599
I1
tp600
a(S'UnknownsToCommon'
p601
I2
tp602
a(S'UnknownsAsValue'
p603
I3
tp604
assbsS'TRuleEvaluator'
p605
(i__main__
ClassDefinition
p606
(dp607
g4
I1
sg5
I0
sg6
g605
sg7
S'TOrange'
p608
sg9
I01
sg10
(lp609
sg12
(lp610
sg29
(dp611
sbsS'TStringVariable'
p612
(i__main__
ClassDefinition
p613
(dp614
g4
I1
sg5
I0
sg6
g612
sg7
S'TVariable'
p615
sg9
I00
sg10
(lp616
sg12
(lp617
(S'int'
p618
S'varType'
p619
S'var_type'
p620
S' variable type'
p621
I0
I0
I01
S'Variable_Type'
p622
tp623
a(S'bool'
p624
S'ordered'
p625
g625
S'variable values are ordered'
p626
I0
I0
I01
Ntp627
a(S'bool'
p628
S'distributed'
p629
g629
S'variable values are distributions'
p630
I0
I0
I01
Ntp631
a(S'int'
p632
S'defaultMetaId'
p633
S'default_meta_id'
p634
S'default (proposed, suggested...) meta id for this variable'
p635
I0
I0
I01
Ntp636
a(S'TRandomGenerator'
p637
S'randomGenerator'
p638
S'random_generator'
p639
S'random generator for random values (initialized when first needed)'
p640
I0
I0
I00
Ntp641
a(S'TVariable'
p642
S'sourceVariable'
p643
S'source_variable'
p644
S'The attribute that this attribute is computed from (when applicable)'
p645
I0
I0
I00
Ntp646
a(S'TClassifier'
p647
S'getValueFrom'
p648
S'get_value_from'
p649
S'Function to compute the value from values of other variables'
p650
I0
I0
I00
Ntp651
asg29
(dp652
sbsS'TGraphAsTree'
p653
(i__main__
ClassDefinition
p654
(dp655
g4
I1
sg5
I0
sg6
g653
sg7
S'TGraph'
p656
sg9
I00
sg10
(lp657
sg12
(lp658
(S'int'
p659
S'nVertices'
p660
S'n_vertices'
p661
S'the number of vertices'
p662
I01
I0
I01
Ntp663
a(S'int'
p664
S'nEdgeTypes'
p665
S'n_edge_types'
p666
S'the number of edge types'
p667
I01
I0
I01
Ntp668
a(S'bool'
p669
S'directed'
p670
g670
S'directed'
p671
I01
I0
I01
Ntp672
asg29
(dp673
sbsS'TTreeExampleSplitter_IgnoreUnknowns'
p674
(i__main__
ClassDefinition
p675
(dp676
g4
I1
sg5
I0
sg6
g674
sg7
S'TTreeExampleSplitter'
p677
sg9
I00
sg10
(lp678
sg12
(lp679
sg29
(dp680
sbsS'TProbabilityEstimator_FromDistribution'
p681
(i__main__
ClassDefinition
p682
(dp683
g4
I1
sg5
I0
sg6
g681
sg7
S'TProbabilityEstimator'
p684
sg9
I00
sg10
(lp685
sg12
(lp686
(S'TDistribution'
p687
S'probabilities'
p688
g688
S'probabilities'
p689
I0
I0
I00
Ntp690
a(S'bool'
p691
S'supportsDiscrete'
p692
S'supports_discrete'
p693
S'can estimate probabilities of discrete attributes'
p694
I01
I0
I01
Ntp695
a(S'bool'
p696
S'supportsContinuous'
p697
S'supports_continuous'
p698
S'can estimate probabilities of continuous attributes'
p699
I01
I0
I01
Ntp700
asg29
(dp701
sbsS'TExamplesDistance'
p702
(i__main__
ClassDefinition
p703
(dp704
g4
I1
sg5
I0
sg6
g702
sg7
S'TOrange'
p705
sg9
I01
sg10
(lp706
sg12
(lp707
sg29
(dp708
sbsS'TFileExampleGenerator'
p709
(i__main__
ClassDefinition
p710
(dp711
g4
I1
sg5
I0
sg6
g709
sg7
S'TExampleGenerator'
p712
sg9
I01
sg10
(lp713
sg12
(lp714
(S'string'
p715
S'filename'
p716
g716
S'filename'
p717
I0
I0
I01
Ntp718
a(S'int'
p719
S'startDataPos'
p720
S'start_data_pos'
p721
S'starting position of the data in file'
p722
I0
I0
I01
Ntp723
a(S'int'
p724
S'startDataLine'
p725
S'start_data_line'
p726
S'line in the file where the data starts'
p727
I0
I0
I01
Ntp728
ag97
ag101
asg29
(dp729
sbsS'TClassifierByLookupTable2'
p730
(i__main__
ClassDefinition
p731
(dp732
g4
I1
sg5
I0
sg6
g730
sg7
S'TClassifierByLookupTable'
p733
sg9
I00
sg10
(lp734
sg12
(lp735
(S'TVariable'
p736
S'variable1'
p737
g737
S'the first attribute used for classification'
p738
I01
I0
I00
Ntp739
a(S'TVariable'
p740
S'variable2'
p741
g741
S'the second attribute used for classification'
p742
I01
I0
I00
Ntp743
a(S'int'
p744
S'noOfValues1'
p745
S'no_of_values1'
p746
S'number of values of the first attribute'
p747
I01
I0
I01
Ntp748
a(S'int'
p749
S'noOfValues2'
p750
S'no_of_values2'
p751
S'number of values of the second attribute'
p752
I01
I0
I01
Ntp753
a(S'TEFMDataDescription'
p754
S'dataDescription'
p755
S'data_description'
p756
S'data description'
p757
I0
I0
I00
Ntp758
a(S'TValueList'
p759
S'lookupTable'
p760
S'lookup_table'
p761
S'a list of class values, one for each attribute value'
p762
I01
I0
I00
Ntp763
a(S'TDistributionList'
p764
S'distributions'
p765
g765
S'a list of class distributions, one for each attribute value'
p766
I01
I0
I00
Ntp767
a(S'TVariable'
p768
S'classVar'
p769
S'class_var'
p770
S'class variable'
p771
I0
I0
I00
Ntp772
a(S'bool'
p773
S'computesProbabilities'
p774
S'computes_probabilities'
p775
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p776
I0
I0
I01
Ntp777
asg29
(dp778
sbsS'TMeasureAttribute_gainRatio'
p779
(i__main__
ClassDefinition
p780
(dp781
g4
I1
sg5
I0
sg6
g779
sg7
S'TMeasureAttributeFromProbabilities'
p782
sg9
I00
sg10
(lp783
sg12
(lp784
g422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp785
sbsS'TContingencyClassAttr'
p786
(i__main__
ClassDefinition
p787
(dp788
g4
I1
sg5
I0
sg6
g786
sg7
S'TContingencyClass'
p789
sg9
I00
sg10
(lp790
sg12
(lp791
(S'TVariable'
p792
S'outerVariable'
p793
S'outer_variable'
p794
S'outer attribute'
p795
I0
I0
I00
Ntp796
a(S'TVariable'
p797
S'innerVariable'
p798
S'inner_variable'
p799
S'inner attribute'
p800
I0
I0
I00
Ntp801
a(S'int'
p802
S'varType'
p803
S'var_type'
p804
S' outer attribute type'
p805
I0
I0
I01
S'Variable_Type'
p806
tp807
a(S'TDistribution'
p808
S'outerDistribution'
p809
S'outer_distribution'
p810
S'distribution of values of outer attributes'
p811
I0
I0
I00
Ntp812
a(S'TDistribution'
p813
S'innerDistribution'
p814
S'inner_distribution'
p815
S'distribution of values of inner attributes'
p816
I0
I0
I00
Ntp817
a(S'TDistribution'
p818
S'innerDistributionUnknown'
p819
S'inner_distribution_unknown'
p820
S'distribution of inner variable for examples where the outer value was unknown'
p821
I0
I0
I00
Ntp822
asg29
(dp823
sbsS'TColumnAssessor_Measure'
p824
(i__main__
ClassDefinition
p825
(dp826
g4
I1
sg5
I0
sg6
g824
sg7
S'TColumnAssessor'
p827
sg9
I00
sg10
(lp828
sg12
(lp829
(S'TMeasureAttribute'
p830
S'measure'
p831
g831
S'attribute quality measure'
p832
I0
I0
I00
Ntp833
asg29
(dp834
sbsS'TLogRegClassifier'
p835
(i__main__
ClassDefinition
p836
(dp837
g4
I1
sg5
I0
sg6
g835
sg7
S'TClassifierFD'
p838
sg9
I00
sg10
(lp839
sg12
(lp840
(S'TDomain'
p841
S'continuizedDomain'
p842
S'continuized_domain'
p843
S'if absent, there is no continuous attributes in original domain'
p844
I0
I0
I00
Ntp845
a(S'TEFMDataDescription'
p846
S'dataDescription'
p847
S'data_description'
p848
S'Data needed for classification in presence of undefined values'
p849
I0
I0
I00
Ntp850
a(S'TAttributedFloatList'
p851
S'beta'
p852
g852
S'estimated beta coefficients for logistic regression'
p853
I0
I0
I00
Ntp854
a(S'TAttributedFloatList'
p855
S'beta_se'
p856
g856
S'estimated standard errors for beta coefficients'
p857
I0
I0
I00
Ntp858
a(S'TAttributedFloatList'
p859
S'wald_Z'
p860
g860
S'Wald Z statstic for beta coefficients'
p861
I0
I0
I00
Ntp862
a(S'TAttributedFloatList'
p863
S'P'
p864
g864
S'estimated significances for beta coefficients'
p865
I0
I0
I00
Ntp866
a(S'float'
p867
S'likelihood'
p868
g868
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p869
I0
I0
I01
Ntp870
a(S'int'
p871
S'fit_status'
p872
g872
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p873
I0
I0
I01
Ntp874
a(S'TImputer'
p875
S'imputer'
p876
g876
S'if present, it imputes unknown values'
p877
I0
I0
I00
Ntp878
a(S'TDomain'
p879
S'domain'
p880
g880
S'domain'
p881
I0
I0
I00
Ntp882
ag772
ag777
asg29
(dp883
sbsS'TEquiDistDiscretization'
p884
(i__main__
ClassDefinition
p885
(dp886
g4
I1
sg5
I0
sg6
g884
sg7
S'TDiscretization'
p887
sg9
I00
sg10
(lp888
sg12
(lp889
(S'int'
p890
S'numberOfIntervals'
p891
(g891
g361
tp892
S' number of intervals'
p893
I0
I0
I01
Ntp894
asg29
(dp895
sbsS'TPreprocessor_select'
p896
(i__main__
ClassDefinition
p897
(dp898
g4
I1
sg5
I0
sg6
g896
sg7
S'TPreprocessor'
p899
sg9
I00
sg10
(lp900
sg12
(lp901
(S'TVarList'
p902
S'attributes'
p903
g903
S'tells which attributes to select'
p904
I0
I0
I00
Ntp905
asg29
(dp906
sbsS'TSVMClassifierSparse'
p907
(i__main__
ClassDefinition
p908
(dp909
g4
I1
sg5
I0
sg6
g907
sg7
S'TSVMClassifier'
p910
sg9
I00
sg10
(lp911
sg12
(lp912
(S'bool'
p913
S'useNonMeta'
p914
S'use_non_meta'
p915
S'include non meta attributes'
p916
I0
I0
I01
Ntp917
a(S'TIntList'
p918
S'nSV'
p919
S'n_SV'
p920
S'nSV'
p921
I0
I0
I00
Ntp922
a(S'TFloatList'
p923
S'rho'
p924
g924
S'rho'
p925
I0
I0
I00
Ntp926
a(S'TFloatListList'
p927
S'coef'
p928
g928
S'coef'
p929
I0
I0
I00
Ntp930
a(S'TFloatList'
p931
S'probA'
p932
S'prob_a'
p933
S'probA - pairwise probability information'
p934
I0
I0
I00
Ntp935
a(S'TFloatList'
p936
S'probB'
p937
S'prob_b'
p938
S'probB - pairwise probability information'
p939
I0
I0
I00
Ntp940
a(S'TExampleTable'
p941
S'supportVectors'
p942
S'support_vectors'
p943
S'support vectors'
p944
I0
I0
I00
Ntp945
a(S'TExampleTable'
p946
S'examples'
p947
g947
S'examples used to train the classifier'
p948
I0
I0
I00
Ntp949
a(S'TKernelFunc'
p950
S'kernelFunc'
p951
S'kernel_func'
p952
S'custom kernel function'
p953
I0
I0
I00
Ntp954
a(S'int'
p955
S'svm_type'
p956
g956
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p957
I0
I0
I01
S'SVMLearner_SVMType'
p958
tp959
a(S'int'
p960
S'kernel_type'
p961
g961
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p962
I0
I0
I01
S'SVMLearner_Kernel'
p963
tp964
ag882
ag772
ag777
asg29
(dp965
sbsS'TChangeExampleGenerator'
p966
(i__main__
ClassDefinition
p967
(dp968
g4
I1
sg5
I0
sg6
g966
sg7
S'TAdapterGenerator'
p969
sg9
I01
sg10
(lp970
sg12
(lp971
g97
ag101
asg29
(dp972
sbsS'TIMByRowsByRelief'
p973
(i__main__
ClassDefinition
p974
(dp975
g4
I1
sg5
I0
sg6
g973
sg7
S'TIMByRowsConstructor'
p976
sg9
I00
sg10
(lp977
sg12
(lp978
(S'float'
p979
S'k'
p980
g980
S'number of neighbours'
p981
I0
I0
I01
Ntp982
a(S'float'
p983
S'm'
p984
g984
S'number of reference examples'
p985
I0
I0
I01
Ntp986
a(S'float'
p987
S'kFromColumns'
p988
S'k_from_columns'
p989
S'if positive, number of neighbours is #columns*kFromColumns'
p990
I0
I0
I01
Ntp991
a(S'bool'
p992
S'ignoreSameExample'
p993
S'ignore_same_example'
p994
S'does not put reference example into M'
p995
I0
I0
I01
Ntp996
a(S'bool'
p997
S'convertToBinary'
p998
S'convert_to_binary'
p999
S'convert to binary class (hit-miss)'
p1000
I0
I0
I01
Ntp1001
a(S'bool'
p1002
S'correctClassFirst'
p1003
S'correct_class_first'
p1004
S'puts the correct class proportion to the first place'
p1005
I0
I0
I01
Ntp1006
a(S'bool'
p1007
S'allExamples'
p1008
S'all_examples'
p1009
S'uses all examples for reference examples'
p1010
I0
I0
I01
Ntp1011
a(S'bool'
p1012
S'allSameNeighbours'
p1013
S'all_same_neighbours'
p1014
S'uses all the examples same to the reference as neighbours'
p1015
I0
I0
I01
Ntp1016
asg29
(dp1017
sbsS'TFindNearestConstructor'
p1018
(i__main__
ClassDefinition
p1019
(dp1020
g4
I1
sg5
I0
sg6
g1018
sg7
S'TOrange'
p1021
sg9
I01
sg10
(lp1022
sg12
(lp1023
(S'TExamplesDistanceConstructor'
p1024
S'distanceConstructor'
p1025
S'distance_constructor'
p1026
S'metrics'
p1027
I0
I0
I00
Ntp1028
a(S'bool'
p1029
S'includeSame'
p1030
S'include_same'
p1031
S'tells whether to include examples that are same as the reference example'
p1032
I0
I0
I01
Ntp1033
asg29
(dp1034
sbsS'TTableAverager'
p1035
(i__main__
ClassDefinition
p1036
(dp1037
g4
I1
sg5
I0
sg6
g1035
sg7
S'TOrange'
p1038
sg9
I00
sg10
(lp1039
sg12
(lp1040
sg29
(dp1041
sbsS'TStopIMClusteringByAssessor_noBigChange'
p1042
(i__main__
ClassDefinition
p1043
(dp1044
g4
I1
sg5
I0
sg6
g1042
sg7
S'TStopIMClusteringByAssessor'
p1045
sg9
I00
sg10
(lp1046
sg12
(lp1047
sg29
(dp1048
sbsS'TImputer_asValue'
p1049
(i__main__
ClassDefinition
p1050
(dp1051
g4
I1
sg5
I0
sg6
g1049
sg7
S'TImputer'
p1052
sg9
I00
sg10
(lp1053
sg12
(lp1054
(S'TDomain'
p1055
S'domain'
p1056
g1056
S'domain to which the values are converted'
p1057
I0
I0
I00
Ntp1058
a(S'TExample'
p1059
S'defaults'
p1060
g1060
S'values to impute instead of missing ones - for continuous attributes only!'
p1061
I0
I0
I00
Ntp1062
asg29
(dp1063
sbsS'TDomainContinuizer'
p1064
(i__main__
ClassDefinition
p1065
(dp1066
g4
I1
sg5
I0
sg6
g1064
sg7
S'TOrange'
p1067
sg9
I00
sg10
(lp1068
sg12
(lp1069
(S'bool'
p1070
S'zeroBased'
p1071
S'zero_based'
p1072
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1073
I0
I0
I01
Ntp1074
a(S'int'
p1075
S'continuousTreatment'
p1076
S'continuous_treatment'
p1077
S' 0-leave as they are, 1-divide by span, 1-normalize'
p1078
I0
I0
I01
S'DomainContinuizer_ContinuousTreatment'
p1079
tp1080
a(S'int'
p1081
S'multinomialTreatment'
p1082
S'multinomial_treatment'
p1083
S' 0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-ignore all discrete, 5-error, 6-convert as ordinal, 7-ordinal,normalized'
p1084
I0
I0
I01
S'DomainContinuizer_MultinomialTreatment'
p1085
tp1086
a(S'int'
p1087
S'classTreatment'
p1088
S'class_treatment'
p1089
S' 3-leave as is unless target is given, 5-error if not continuous nor binary nor target given, 6-convert as ordinal (unless target given)'
p1090
I0
I0
I01
S'DomainContinuizer_ClassTreatment'
p1091
tp1092
asg29
(dp1093
S'MultinomialTreatment'
p1094
(lp1095
(S'LowestIsBase'
p1096
I0
tp1097
a(S'FrequentIsBase'
p1098
I1
tp1099
a(S'NValues'
p1100
I2
tp1101
a(S'Ignore'
p1102
I3
tp1103
a(S'IgnoreAllDiscrete'
p1104
I4
tp1105
a(S'ReportError'
p1106
I5
tp1107
a(S'AsOrdinal'
p1108
I6
tp1109
a(S'AsNormalizedOrdinal'
p1110
I7
tp1111
asS'ClassTreatment'
p1112
(lp1113
(S'LeaveUnlessTarget'
p1114
S'3'
p1115
tp1116
a(S'ErrorIfCannotHandle'
p1117
S'5'
p1118
tp1119
a(S'AsOrdinal'
p1120
S'6'
p1121
tp1122
asS'ContinuousTreatment'
p1123
(lp1124
(S'Leave'
p1125
I0
tp1126
a(S'NormalizeBySpan'
p1127
I1
tp1128
a(S'NormalizeByVariance'
p1129
I2
tp1130
assbsS'TSimpleTreeClassifier'
p1131
(i__main__
ClassDefinition
p1132
(dp1133
g4
I1
sg5
I0
sg6
g1131
sg7
S'TClassifier'
p1134
sg9
I00
sg10
(lp1135
sg12
(lp1136
g772
ag777
asg29
(dp1137
sbsS'TExamplesDistanceConstructor_Euclidean'
p1138
(i__main__
ClassDefinition
p1139
(dp1140
g4
I1
sg5
I0
sg6
g1138
sg7
S'TExamplesDistanceConstructor_Normalized'
p1141
sg9
I00
sg10
(lp1142
sg12
(lp1143
(S'bool'
p1144
S'normalize'
p1145
g1145
S'tells whether to normalize distances between attributes'
p1146
I0
I0
I01
Ntp1147
a(S'bool'
p1148
S'ignoreUnknowns'
p1149
S'ignore_unknowns'
p1150
S'if true (default: false) unknown values are ignored in computation'
p1151
I0
I0
I01
Ntp1152
ag544
asg29
(dp1153
sbsS'TContingencyAttrAttr'
p1154
(i__main__
ClassDefinition
p1155
(dp1156
g4
I1
sg5
I0
sg6
g1154
sg7
S'TContingency'
p1157
sg9
I00
sg10
(lp1158
sg12
(lp1159
g796
ag801
ag807
ag812
ag817
ag822
asg29
(dp1160
sbsS'TRuleBeamRefiner_Selector'
p1161
(i__main__
ClassDefinition
p1162
(dp1163
g4
I1
sg5
I0
sg6
g1161
sg7
S'TRuleBeamRefiner'
p1164
sg9
I00
sg10
(lp1165
sg12
(lp1166
(S'TDiscretization'
p1167
S'discretization'
p1168
g1168
S'discretization for continuous attributes'
p1169
I0
I0
I00
Ntp1170
asg29
(dp1171
sbsS'TExamplesDistance_Relief'
p1172
(i__main__
ClassDefinition
p1173
(dp1174
g4
I1
sg5
I0
sg6
g1172
sg7
S'TExamplesDistance'
p1175
sg9
I00
sg10
(lp1176
sg12
(lp1177
(S'TDomainDistributions'
p1178
S'distributions'
p1179
g1179
S"distributions of attributes' values"
p1180
I0
I0
I00
Ntp1181
a(S'TAttributedFloatList'
p1182
S'averages'
p1183
g1183
S'average values of attributes'
p1184
I0
I0
I00
Ntp1185
a(S'TAttributedFloatList'
p1186
S'normalizations'
p1187
g1187
S"ranges of attributes' values"
p1188
I0
I0
I00
Ntp1189
a(S'TAttributedFloatList'
p1190
S'bothSpecial'
p1191
S'both_special'
p1192
S'distance if both values of both attributes are undefined'
p1193
I0
I0
I00
Ntp1194
asg29
(dp1195
sbsS'TExamplesDistance_Manhattan'
p1196
(i__main__
ClassDefinition
p1197
(dp1198
g4
I1
sg5
I0
sg6
g1196
sg7
S'TExamplesDistance_Normalized'
p1199
sg9
I00
sg10
(lp1200
sg12
(lp1201
g112
ag116
ag120
ag124
ag129
ag133
ag138
asg29
(dp1202
sbsS'TTreeDescender'
p1203
(i__main__
ClassDefinition
p1204
(dp1205
g4
I1
sg5
I0
sg6
g1203
sg7
S'TOrange'
p1206
sg9
I01
sg10
(lp1207
sg12
(lp1208
sg29
(dp1209
sbsS'TIMBlurer'
p1210
(i__main__
ClassDefinition
p1211
(dp1212
g4
I1
sg5
I0
sg6
g1210
sg7
S'TIMByRowsPreprocessor'
p1213
sg9
I00
sg10
(lp1214
sg12
(lp1215
(S'float'
p1216
S'weight'
p1217
g1217
S'weight of neighbours'
p1218
I0
I0
I01
Ntp1219
a(S'float'
p1220
S'origWeight'
p1221
S'orig_weight'
p1222
S'weight of original row'
p1223
I0
I0
I01
Ntp1224
a(S'TFloatList'
p1225
S'attrWeights'
p1226
S'attr_weights'
p1227
S'weights by individual (different) attributes'
p1228
I0
I0
I00
Ntp1229
a(S'bool'
p1230
S'adjustOrigWeight'
p1231
S'adjust_orig_weight'
p1232
S'uses 1-weight(s) for weight of original row'
p1233
I0
I0
I01
Ntp1234
a(S'bool'
p1235
S'onlyEmpty'
p1236
S'only_empty'
p1237
S'blurs only empty cells'
p1238
I0
I0
I01
Ntp1239
asg29
(dp1240
sbsS'TFeatureByMinComplexity'
p1241
(i__main__
ClassDefinition
p1242
(dp1243
g4
I1
sg5
I0
sg6
g1241
sg7
S'TFeatureInducer'
p1244
sg9
I00
sg10
(lp1245
sg12
(lp1246
(S'TColorIG'
p1247
S'colorIG'
p1248
S'color_IG'
p1249
S'graph coloring algorithm'
p1250
I0
I0
I00
Ntp1251
a(S'int'
p1252
S'completion'
p1253
g1253
S' decides how to determine the class for points not covered by any cluster'
p1254
I0
I0
I01
S'FeatureByMinComplexity_Completion'
p1255
tp1256
asg29
(dp1257
S'Completion'
p1258
(lp1259
(S'NoCompletion'
p1260
S'completion_no'
p1261
tp1262
a(S'CompletionByDefault'
p1263
S'completion_default'
p1264
tp1265
a(S'CompletionByBayes'
p1266
S'completion_bayes'
p1267
tp1268
assbsS'TPreprocessor_dropMissingClasses'
p1269
(i__main__
ClassDefinition
p1270
(dp1271
g4
I1
sg5
I0
sg6
g1269
sg7
S'TPreprocessor'
p1272
sg9
I00
sg10
(lp1273
sg12
(lp1274
sg29
(dp1275
sbsS'TkNNClassifier'
p1276
(i__main__
ClassDefinition
p1277
(dp1278
g4
I1
sg5
I0
sg6
g1276
sg7
S'TClassifierFD'
p1279
sg9
I00
sg10
(lp1280
sg12
(lp1281
(S'TFindNearest'
p1282
S'findNearest'
p1283
S'find_nearest'
p1284
S''
p1285
I0
I0
I00
Ntp1286
a(S'float'
p1287
g980
g980
S'number of neighbours (0 for sqrt of #examples)'
p1288
I0
I0
I01
Ntp1289
a(S'bool'
p1290
S'rankWeight'
p1291
S'rank_weight'
p1292
S'enable weighting by ranks'
p1293
I0
I0
I01
Ntp1294
a(S'int'
p1295
S'weightID'
p1296
S'weight_ID'
p1297
S'id of meta-attribute with weight'
p1298
I0
I0
I01
Ntp1299
a(S'int'
p1300
S'nExamples'
p1301
S'n_examples'
p1302
S'the number of learning examples '
p1303
I0
I0
I01
Ntp1304
ag882
ag772
ag777
asg29
(dp1305
sbsS'TOrange'
p1306
(i__main__
ClassDefinition
p1307
(dp1308
g4
I1
sg5
I0
sg6
g1306
sg7
Nsg9
I00
sg10
(lp1309
sg12
(lp1310
sg29
(dp1311
sbsS'TRuleValidator'
p1312
(i__main__
ClassDefinition
p1313
(dp1314
g4
I1
sg5
I0
sg6
g1312
sg7
S'TOrange'
p1315
sg9
I01
sg10
(lp1316
sg12
(lp1317
sg29
(dp1318
sbsS'TIMByRowsBySorting'
p1319
(i__main__
ClassDefinition
p1320
(dp1321
g4
I1
sg5
I0
sg6
g1319
sg7
S'TIMByRowsConstructor'
p1322
sg9
I00
sg10
(lp1323
sg12
(lp1324
sg29
(dp1325
sbsS'TRuleBeamInitializer_Python'
p1326
(i__main__
ClassDefinition
p1327
(dp1328
g4
I1
sg5
I0
sg6
g1326
sg7
S'TRuleBeamInitializer'
p1329
sg9
I00
sg10
(lp1330
sg12
(lp1331
sg29
(dp1332
sbsS'TRuleCovererAndRemover_Python'
p1333
(i__main__
ClassDefinition
p1334
(dp1335
g4
I1
sg5
I0
sg6
g1333
sg7
S'TRuleCovererAndRemover'
p1336
sg9
I00
sg10
(lp1337
sg12
(lp1338
sg29
(dp1339
sbsS'TMeasureAttribute_gainRatioA'
p1340
(i__main__
ClassDefinition
p1341
(dp1342
g4
I1
sg5
I0
sg6
g1340
sg7
S'TMeasureAttribute_gainRatio'
p1343
sg9
I00
sg10
(lp1344
sg12
(lp1345
g422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp1346
sbsS'TCartesianClassifier'
p1347
(i__main__
ClassDefinition
p1348
(dp1349
g4
I1
sg5
I0
sg6
g1347
sg7
S'TClassifierFD'
p1350
sg9
I00
sg10
(lp1351
sg12
(lp1352
g882
ag772
ag777
asg29
(dp1353
sbsS'TLinearClassifier'
p1354
(i__main__
ClassDefinition
p1355
(dp1356
g4
I1
sg5
I0
sg6
g1354
sg7
S'TClassifierFD'
p1357
sg9
I00
sg10
(lp1358
sg12
(lp1359
(S'TFloatListList'
p1360
S'weights'
p1361
g1361
S'Computed feature weights'
p1362
I0
I0
I00
Ntp1363
a(S'TExampleTable'
p1364
S'examples'
p1365
g1365
S'Examples used to train the classifier'
p1366
I0
I0
I00
Ntp1367
ag882
ag772
ag777
asg29
(dp1368
sbsS'TRemoveRedundantByInduction'
p1369
(i__main__
ClassDefinition
p1370
(dp1371
g4
I1
sg5
I0
sg6
g1369
sg7
S'TRemoveRedundant'
p1372
sg9
I00
sg10
(lp1373
sg12
(lp1374
(S'TFeatureInducer'
p1375
S'featureReducer'
p1376
S'feature_reducer'
p1377
S'feature construction algorithm'
p1378
I0
I0
I00
Ntp1379
a(S'TMeasureAttribute'
p1380
S'measure'
p1381
g1381
S'measure for initial ordering of attributes'
p1382
I0
I0
I00
Ntp1383
a(S'TDiscretization'
p1384
S'discretization'
p1385
g1385
S'discretization method'
p1386
I0
I0
I00
Ntp1387
ag522
asg29
(dp1388
sbsS'TFilter_conjunction'
p1389
(i__main__
ClassDefinition
p1390
(dp1391
g4
I1
sg5
I0
sg6
g1389
sg7
S'TFilter'
p1392
sg9
I00
sg10
(lp1393
sg12
(lp1394
(S'TFilterList'
p1395
S'filters'
p1396
g1396
S'a list of filters;'
p1397
I0
I0
I00
Ntp1398
ag235
ag239
asg29
(dp1399
sbsS'TGraph'
p1400
(i__main__
ClassDefinition
p1401
(dp1402
g4
I1
sg5
I0
sg6
g1400
sg7
S'TOrange'
p1403
sg9
I01
sg10
(lp1404
sg12
(lp1405
g663
ag668
ag672
asg29
(dp1406
sbsS'TStopIMClusteringByAssessor'
p1407
(i__main__
ClassDefinition
p1408
(dp1409
g4
I1
sg5
I0
sg6
g1407
sg7
S'TOrange'
p1410
sg9
I01
sg10
(lp1411
sg12
(lp1412
sg29
(dp1413
sbsS'TClustersFromDistributions'
p1414
(i__main__
ClassDefinition
p1415
(dp1416
g4
I1
sg5
I0
sg6
g1414
sg7
S'TOrange'
p1417
sg9
I01
sg10
(lp1418
sg12
(lp1419
sg29
(dp1420
sbsS'TVariable'
p1421
(i__main__
ClassDefinition
p1422
(dp1423
g4
I1
sg5
I0
sg6
g1421
sg7
S'TOrange'
p1424
sg9
I01
sg10
(lp1425
sg12
(lp1426
g623
ag627
ag631
ag636
ag641
ag646
ag651
asg29
(dp1427
S'Type'
p1428
(lp1429
(S'None'
p1430
S'(int)TValue::NONE'
p1431
tp1432
a(S'Discrete'
p1433
S'(int)TValue::INTVAR'
p1434
tp1435
a(S'Continuous'
p1436
S'(int)TValue::FLOATVAR'
p1437
tp1438
a(S'Other'
p1439
S'(int)(TValue::FLOATVAR+1)'
p1440
tp1441
a(S'String'
p1442
S'(int)STRINGVAR'
p1443
tp1444
asS'MakeStatus'
p1445
(lp1446
(S'OK'
p1447
I0
tp1448
a(S'MissingValues'
p1449
I1
tp1450
a(S'NoRecognizedValues'
p1451
I2
tp1452
a(S'Incompatible'
p1453
I3
tp1454
a(S'NotFound'
p1455
I4
tp1456
assbsS'TImputerConstructor_average'
p1457
(i__main__
ClassDefinition
p1458
(dp1459
g4
I1
sg5
I0
sg6
g1457
sg7
S'TImputerConstructor'
p1460
sg9
I00
sg10
(lp1461
sg12
(lp1462
(S'bool'
p1463
S'imputeClass'
p1464
S'impute_class'
p1465
S'tells whether to impute the class value (default: true)'
p1466
I0
I0
I01
Ntp1467
asg29
(dp1468
sbsS'TStopDistributionClustering'
p1469
(i__main__
ClassDefinition
p1470
(dp1471
g4
I1
sg5
I0
sg6
g1469
sg7
S'TOrange'
p1472
sg9
I01
sg10
(lp1473
sg12
(lp1474
sg29
(dp1475
sbsS'TExampleTable'
p1476
(i__main__
ClassDefinition
p1477
(dp1478
g4
I1
sg5
I0
sg6
g1476
sg7
S'TExampleGenerator'
p1479
sg9
I00
sg10
(lp1480
sg12
(lp1481
(S'TRandomGenerator'
p1482
S'randomGenerator'
p1483
S'random_generator'
p1484
S'random generator used by randomExample'
p1485
I0
I0
I00
Ntp1486
a(S'TExampleGenerator'
p1487
S'lock'
p1488
(g1488
S'owner'
p1489
tp1490
S' the real owner of examples'
p1491
I01
I0
I00
Ntp1492
a(S'bool'
p1493
S'ownsExamples'
p1494
(g1494
S'owns_instances'
p1495
tp1496
S' if false, examples in this table are references to examples in another table'
p1497
I01
I0
I01
Ntp1498
ag97
ag101
asg29
(dp1499
sbsS'TRemoveRedundantByQuality'
p1500
(i__main__
ClassDefinition
p1501
(dp1502
g4
I1
sg5
I0
sg6
g1500
sg7
S'TRemoveRedundant'
p1503
sg9
I00
sg10
(lp1504
sg12
(lp1505
(S'bool'
p1506
S'remeasure'
p1507
g1507
S'reapply the measure after removal'
p1508
I0
I0
I01
Ntp1509
a(S'float'
p1510
S'minQuality'
p1511
S'min_quality'
p1512
S'minimal acceptable quality'
p1513
I0
I0
I01
Ntp1514
a(S'int'
p1515
S'removeBut'
p1516
S'remove_but'
p1517
S'the desired number of attributes'
p1518
I0
I0
I01
Ntp1519
a(S'TMeasureAttribute'
p1520
S'measure'
p1521
g1521
S'attribute quality measure'
p1522
I0
I0
I00
Ntp1523
ag522
asg29
(dp1524
sbsS'TGraphAsList'
p1525
(i__main__
ClassDefinition
p1526
(dp1527
g4
I1
sg5
I0
sg6
g1525
sg7
S'TGraph'
p1528
sg9
I00
sg10
(lp1529
sg12
(lp1530
g663
ag668
ag672
asg29
(dp1531
sbsS'TDistanceMapConstructor'
p1532
(i__main__
ClassDefinition
p1533
(dp1534
g4
I1
sg5
I0
sg6
g1532
sg7
S'TOrange'
p1535
sg9
I00
sg10
(lp1536
sg12
(lp1537
(S'TSymMatrix'
p1538
S'distanceMatrix'
p1539
S'distance_matrix'
p1540
S'distance matrix'
p1541
I0
I0
I00
Ntp1542
a(S'TIntList'
p1543
S'order'
p1544
g1544
S'order of elements'
p1545
I0
I0
I00
Ntp1546
asg29
(dp1547
sbsS'TTransformValue'
p1548
(i__main__
ClassDefinition
p1549
(dp1550
g4
I1
sg5
I0
sg6
g1548
sg7
S'TOrange'
p1551
sg9
I01
sg10
(lp1552
sg12
(lp1553
g294
asg29
(dp1554
sbsS'TComputeDomainContingency_DomainTransformation'
p1555
(i__main__
ClassDefinition
p1556
(dp1557
g4
I1
sg5
I0
sg6
g1555
sg7
S'TComputeDomainContingency'
p1558
sg9
I00
sg10
(lp1559
sg12
(lp1560
(S'TDomainTransformerConstructor'
p1561
S'domainTransformerConstructor'
p1562
S'domain_transformer_constructor'
p1563
S'constructs a domain in which each attribute corresponds one of originals'
p1564
I0
I0
I00
Ntp1565
a(S'bool'
p1566
S'resultInOriginalDomain'
p1567
S'result_in_original_domain'
p1568
S'tells whether the resulting DomainContingency should consist of original attributes'
p1569
I0
I0
I01
Ntp1570
ag28
asg29
(dp1571
sbsS'TTreePruner'
p1572
(i__main__
ClassDefinition
p1573
(dp1574
g4
I1
sg5
I0
sg6
g1572
sg7
S'TOrange'
p1575
sg9
I01
sg10
(lp1576
sg12
(lp1577
sg29
(dp1578
sbsS'TStringValue'
p1579
(i__main__
ClassDefinition
p1580
(dp1581
g4
I1
sg5
I0
sg6
g1579
sg7
S'TSomeValue'
p1582
sg9
I00
sg10
(lp1583
sg12
(lp1584
sg29
(dp1585
sbsS'TPreprocessor_addGaussianClassNoise'
p1586
(i__main__
ClassDefinition
p1587
(dp1588
g4
I1
sg5
I0
sg6
g1586
sg7
S'TPreprocessor'
p1589
sg9
I00
sg10
(lp1590
sg12
(lp1591
(S'float'
p1592
S'deviation'
p1593
g1593
S'class deviation'
p1594
I0
I0
I01
Ntp1595
a(S'TRandomGenerator'
p1596
S'randomGenerator'
p1597
S'random_generator'
p1598
S'random number generator'
p1599
I0
I0
I00
Ntp1600
asg29
(dp1601
sbsS'TRuleEvaluator_Python'
p1602
(i__main__
ClassDefinition
p1603
(dp1604
g4
I1
sg5
I0
sg6
g1602
sg7
S'TRuleEvaluator'
p1605
sg9
I00
sg10
(lp1606
sg12
(lp1607
sg29
(dp1608
sbsS'TIGBySorting'
p1609
(i__main__
ClassDefinition
p1610
(dp1611
g4
I1
sg5
I0
sg6
g1609
sg7
S'TIGConstructor'
p1612
sg9
I00
sg10
(lp1613
sg12
(lp1614
sg29
(dp1615
sbsS'TConditionalProbabilityEstimator_ByRows'
p1616
(i__main__
ClassDefinition
p1617
(dp1618
g4
I1
sg5
I0
sg6
g1616
sg7
S'TConditionalProbabilityEstimator'
p1619
sg9
I00
sg10
(lp1620
sg12
(lp1621
(S'TProbabilityEstimatorList'
p1622
S'estimatorList'
p1623
S'estimator_list'
p1624
S'A list of probability estimators'
p1625
I0
I0
I00
Ntp1626
ag63
ag68
asg29
(dp1627
sbsS'TProgressCallback'
p1628
(i__main__
ClassDefinition
p1629
(dp1630
g4
I1
sg5
I0
sg6
g1628
sg7
S'TOrange'
p1631
sg9
I01
sg10
(lp1632
sg12
(lp1633
sg29
(dp1634
sbsS'THierarchicalClustering'
p1635
(i__main__
ClassDefinition
p1636
(dp1637
g4
I1
sg5
I0
sg6
g1635
sg7
S'TOrange'
p1638
sg9
I00
sg10
(lp1639
sg12
(lp1640
(S'int'
p1641
S'linkage'
p1642
g1642
S' linkage'
p1643
I0
I0
I01
S'HierarchicalClustering_Linkage'
p1644
tp1645
a(S'bool'
p1646
S'overwriteMatrix'
p1647
S'overwrite_matrix'
p1648
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p1649
I0
I0
I01
Ntp1650
a(S'TProgressCallback'
p1651
S'progressCallback'
p1652
S'progress_callback'
p1653
S'progress callback function'
p1654
I0
I0
I00
Ntp1655
asg29
(dp1656
S'Linkage'
p1657
(lp1658
(S'Single'
p1659
I0
tp1660
a(S'Average'
p1661
I1
tp1662
a(S'Complete'
p1663
I2
tp1664
a(S'Ward'
p1665
I3
tp1666
assbsS'TTreeSplitConstructor_Python'
p1667
(i__main__
ClassDefinition
p1668
(dp1669
g4
I1
sg5
I0
sg6
g1667
sg7
S'TTreeSplitConstructor'
p1670
sg9
I00
sg10
(lp1671
sg12
(lp1672
(S'float'
p1673
S'minSubset'
p1674
S'min_subset'
p1675
S'minimal number of examples in a subset'
p1676
I0
I0
I01
Ntp1677
asg29
(dp1678
sbsS'TEarthLearner'
p1679
(i__main__
ClassDefinition
p1680
(dp1681
g4
I1
sg5
I0
sg6
g1679
sg7
S'TLearner'
p1682
sg9
I00
sg10
(lp1683
sg12
(lp1684
(S'int'
p1685
S'max_terms'
p1686
g1686
S'Maximum number of terms.'
p1687
I0
I0
I01
Ntp1688
a(S'int'
p1689
S'max_degree'
p1690
g1690
S'Maximum degree of terms.'
p1691
I0
I0
I01
Ntp1692
a(S'float'
p1693
S'penalty'
p1694
g1694
S'Penalty.'
p1695
I0
I0
I01
Ntp1696
a(S'float'
p1697
S'threshold'
p1698
g1698
S'Forward step threshold.'
p1699
I0
I0
I01
Ntp1700
a(S'bool'
p1701
S'prune'
p1702
g1702
S'Prune terms (do backward pass).'
p1703
I0
I0
I01
Ntp1704
a(S'float'
p1705
S'fast_beta'
p1706
g1706
S'Fast beta (aging coefficient).'
p1707
I0
I0
I01
Ntp1708
a(S'float'
p1709
S'trace'
p1710
g1710
S'Execution trace (for debugging only).'
p1711
I0
I0
I01
Ntp1712
a(S'int'
p1713
S'min_span'
p1714
g1714
S'Min. span (training instances) between knots.'
p1715
I0
I0
I01
Ntp1716
a(S'int'
p1717
S'fast_k'
p1718
g1718
S'Fast K.'
p1719
I0
I0
I01
Ntp1720
a(S'bool'
p1721
S'new_var_penalty'
p1722
g1722
S'Penalty for adding a new variable.'
p1723
I0
I0
I01
Ntp1724
a(S'bool'
p1725
S'use_beta_cache'
p1726
g1726
S'Use caching for betas.'
p1727
I0
I0
I01
Ntp1728
ag47
asg29
(dp1729
sbsS'TKernelFunc_Python'
p1730
(i__main__
ClassDefinition
p1731
(dp1732
g4
I1
sg5
I0
sg6
g1730
sg7
S'TKernelFunc'
p1733
sg9
I00
sg10
(lp1734
sg12
(lp1735
sg29
(dp1736
sbsS'TAdapterGenerator'
p1737
(i__main__
ClassDefinition
p1738
(dp1739
g4
I1
sg5
I0
sg6
g1737
sg7
S'TExampleGenerator'
p1740
sg9
I00
sg10
(lp1741
sg12
(lp1742
g97
ag101
asg29
(dp1743
sbsS'TIMFromExamples'
p1744
(i__main__
ClassDefinition
p1745
(dp1746
g4
I1
sg5
I0
sg6
g1744
sg7
S'TOrange'
p1747
sg9
I01
sg10
(lp1748
sg12
(lp1749
sg29
(dp1750
sbsS'TExamplesDistance_Lp'
p1751
(i__main__
ClassDefinition
p1752
(dp1753
g4
I1
sg5
I0
sg6
g1751
sg7
S'TExamplesDistance_Normalized'
p1754
sg9
I00
sg10
(lp1755
sg12
(lp1756
(S'float'
p1757
S'p'
p1758
g1758
g1758
I01
I0
I01
Ntp1759
ag112
ag116
ag120
ag124
ag129
ag133
ag138
asg29
(dp1760
sbsS'TMakeRandomIndicesCV'
p1761
(i__main__
ClassDefinition
p1762
(dp1763
g4
I1
sg5
I0
sg6
g1761
sg7
S'TMakeRandomIndices'
p1764
sg9
I00
sg10
(lp1765
sg12
(lp1766
(S'int'
p1767
S'folds'
p1768
g1768
S'number of folds'
p1769
I0
I0
I01
Ntp1770
ag258
ag262
ag267
asg29
(dp1771
sbsS'TPreprocessor_removeDuplicates'
p1772
(i__main__
ClassDefinition
p1773
(dp1774
g4
I1
sg5
I0
sg6
g1772
sg7
S'TPreprocessor'
p1775
sg9
I00
sg10
(lp1776
sg12
(lp1777
sg29
(dp1778
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p1779
(i__main__
ClassDefinition
p1780
(dp1781
g4
I1
sg5
I0
sg6
g1779
sg7
S'TTreeExampleSplitter'
p1782
sg9
I00
sg10
(lp1783
sg12
(lp1784
sg29
(dp1785
sbsS'TExamplesDistanceConstructor_Normalized'
p1786
(i__main__
ClassDefinition
p1787
(dp1788
g4
I1
sg5
I0
sg6
g1786
sg7
S'TExamplesDistanceConstructor'
p1789
sg9
I01
sg10
(lp1790
sg12
(lp1791
g1147
ag1152
ag544
asg29
(dp1792
sbsS'TCostWrapperLearner'
p1793
(i__main__
ClassDefinition
p1794
(dp1795
g4
I1
sg5
I0
sg6
g1793
sg7
S'TLearner'
p1796
sg9
I00
sg10
(lp1797
sg12
(lp1798
(S'TLearner'
p1799
S'basicLearner'
p1800
S'basic_learner'
p1801
S'basic learner'
p1802
I0
I0
I00
Ntp1803
a(S'TCostMatrix'
p1804
S'costMatrix'
p1805
S'cost_matrix'
p1806
S'cost matrix'
p1807
I0
I0
I00
Ntp1808
ag47
asg29
(dp1809
sbsS'TPearsonCorrelation'
p1810
(i__main__
ClassDefinition
p1811
(dp1812
g4
I1
sg5
I0
sg6
g1810
sg7
S'TOrange'
p1813
sg9
I00
sg10
(lp1814
sg12
(lp1815
(S'float'
p1816
S'r'
p1817
g1817
S'correlation coefficient'
p1818
I0
I0
I01
Ntp1819
a(S'float'
p1820
S't'
p1821
g1821
S't-statics significance'
p1822
I0
I0
I01
Ntp1823
a(S'int'
p1824
S'df'
p1825
g1825
S'degrees of freedom'
p1826
I0
I0
I01
Ntp1827
a(S'float'
p1828
g1758
g1758
S'significance'
p1829
I0
I0
I01
Ntp1830
asg29
(dp1831
sbsS'TDistributionAssessor_Laplace'
p1832
(i__main__
ClassDefinition
p1833
(dp1834
g4
I1
sg5
I0
sg6
g1832
sg7
S'TDistributionAssessor'
p1835
sg9
I00
sg10
(lp1836
sg12
(lp1837
sg29
(dp1838
sbsS'TColumnAssessor_Relief'
p1839
(i__main__
ClassDefinition
p1840
(dp1841
g4
I1
sg5
I0
sg6
g1839
sg7
S'TColumnAssessor'
p1842
sg9
I00
sg10
(lp1843
sg12
(lp1844
sg29
(dp1845
sbsS'TClassifierByLookupTable'
p1846
(i__main__
ClassDefinition
p1847
(dp1848
g4
I1
sg5
I0
sg6
g1846
sg7
S'TClassifier'
p1849
sg9
I01
sg10
(lp1850
sg12
(lp1851
g763
ag767
ag772
ag777
asg29
(dp1852
sbsS'TRuleBeamFinder'
p1853
(i__main__
ClassDefinition
p1854
(dp1855
g4
I1
sg5
I0
sg6
g1853
sg7
S'TRuleFinder'
p1856
sg9
I00
sg10
(lp1857
sg12
(lp1858
(S'TRuleBeamInitializer'
p1859
S'initializer'
p1860
g1860
g1285
I0
I0
I00
Ntp1861
a(S'TRuleBeamRefiner'
p1862
S'refiner'
p1863
g1863
g1285
I0
I0
I00
Ntp1864
a(S'TRuleBeamCandidateSelector'
p1865
S'candidateSelector'
p1866
S'candidate_selector'
p1867
g1285
I0
I0
I00
Ntp1868
a(S'TRuleBeamFilter'
p1869
S'ruleFilter'
p1870
S'rule_filter'
p1871
g1285
I0
I0
I00
Ntp1872
a(S'TRuleValidator'
p1873
S'ruleStoppingValidator'
p1874
S'rule_stopping_validator'
p1875
g1285
I0
I0
I00
Ntp1876
a(S'TRuleValidator'
p1877
S'validator'
p1878
g1878
g1285
I0
I0
I00
Ntp1879
a(S'TRuleEvaluator'
p1880
S'evaluator'
p1881
g1881
g1285
I0
I0
I00
Ntp1882
asg29
(dp1883
sbsS'TC45Classifier'
p1884
(i__main__
ClassDefinition
p1885
(dp1886
g4
I1
sg5
I0
sg6
g1884
sg7
S'TClassifierFD'
p1887
sg9
I00
sg10
(lp1888
sg12
(lp1889
(S'TC45TreeNode'
p1890
S'tree'
p1891
g1891
S'tree'
p1892
I0
I0
I00
Ntp1893
ag882
ag772
ag777
asg29
(dp1894
sbsS'TFilter_values'
p1895
(i__main__
ClassDefinition
p1896
(dp1897
g4
I1
sg5
I0
sg6
g1895
sg7
S'TFilter'
p1898
sg9
I00
sg10
(lp1899
sg12
(lp1900
(S'TValueFilterList'
p1901
S'conditions'
p1902
g1902
S'a list of filters'
p1903
I0
I0
I00
Ntp1904
a(S'bool'
p1905
S'conjunction'
p1906
g1906
S'if true, filter computes conjunction, otherwise disjunction'
p1907
I0
I0
I01
Ntp1908
ag235
ag239
asg29
(dp1909
S'Operator'
p1910
(lp1911
(S'None'
p1912
I0
tp1913
a(S'Equal'
p1914
I1
tp1915
a(S'NotEqual'
p1916
I2
tp1917
a(S'Less'
p1918
I3
tp1919
a(S'LessEqual'
p1920
I4
tp1921
a(S'Greater'
p1922
I5
tp1923
a(S'GreaterEqual'
p1924
I6
tp1925
a(S'Between'
p1926
I7
tp1927
a(S'Outside'
p1928
I8
tp1929
a(S'Contains'
p1930
I9
tp1931
a(S'NotContains'
p1932
I10
tp1933
a(S'BeginsWith'
p1934
I11
tp1935
a(S'EndsWith'
p1936
I12
tp1937
a(S'Listed'
p1938
I13
tp1939
assbsS'TRuleClassifier'
p1940
(i__main__
ClassDefinition
p1941
(dp1942
g4
I1
sg5
I0
sg6
g1940
sg7
S'TClassifier'
p1943
sg9
I01
sg10
(lp1944
sg12
(lp1945
(S'TRuleList'
p1946
S'rules'
p1947
g1947
g1285
I0
I0
I00
Ntp1948
a(S'TExampleTable'
p1949
S'examples'
p1950
g1950
g1285
I0
I0
I00
Ntp1951
a(S'int'
p1952
S'weightID'
p1953
S'weight_ID'
p1954
g1285
I0
I0
I01
Ntp1955
ag772
ag777
asg29
(dp1956
sbsS'TMajorityLearner'
p1957
(i__main__
ClassDefinition
p1958
(dp1959
g4
I1
sg5
I0
sg6
g1957
sg7
S'TLearner'
p1960
sg9
I00
sg10
(lp1961
sg12
(lp1962
(S'TProbabilityEstimatorConstructor'
p1963
S'estimatorConstructor'
p1964
S'estimator_constructor'
p1965
S'constructs probability estimator'
p1966
I0
I0
I00
Ntp1967
a(S'TDistribution'
p1968
S'aprioriDistribution'
p1969
S'apriori_distribution'
p1970
S'apriori class distribution'
p1971
I0
I0
I00
Ntp1972
ag47
asg29
(dp1973
sbsS'TSVMLearner'
p1974
(i__main__
ClassDefinition
p1975
(dp1976
g4
I1
sg5
I0
sg6
g1974
sg7
S'TLearner'
p1977
sg9
I00
sg10
(lp1978
sg12
(lp1979
(S'int'
p1980
S'svm_type'
p1981
g1981
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p1982
I0
I0
I01
S'SVMLearner_SVMType'
p1983
tp1984
a(S'int'
p1985
S'kernel_type'
p1986
g1986
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p1987
I0
I0
I01
S'SVMLearner_Kernel'
p1988
tp1989
a(S'float'
p1990
S'degree'
p1991
g1991
S'polynomial kernel degree'
p1992
I0
I0
I01
Ntp1993
a(S'float'
p1994
S'gamma'
p1995
g1995
S'poly/rbf/sigm parameter'
p1996
I0
I0
I01
Ntp1997
a(S'float'
p1998
S'coef0'
p1999
g1999
S'poly/sigm parameter'
p2000
I0
I0
I01
Ntp2001
a(S'float'
p2002
S'cache_size'
p2003
g2003
S'cache size in MB'
p2004
I0
I0
I01
Ntp2005
a(S'float'
p2006
S'eps'
p2007
g2007
S'stopping criteria'
p2008
I0
I0
I01
Ntp2009
a(S'float'
p2010
S'C'
p2011
g2011
S'for C_SVC and C_SVR'
p2012
I0
I0
I01
Ntp2013
a(S'float'
p2014
S'nu'
p2015
g2015
S'for NU_SVC and ONE_CLASS'
p2016
I0
I0
I01
Ntp2017
a(S'float'
p2018
g1758
g1758
S'for C_SVR'
p2019
I0
I0
I01
Ntp2020
a(S'int'
p2021
S'shrinking'
p2022
g2022
S'shrinking'
p2023
I0
I0
I01
Ntp2024
a(S'int'
p2025
S'probability'
p2026
g2026
S'probability'
p2027
I0
I0
I01
Ntp2028
a(S'bool'
p2029
S'verbose'
p2030
g2030
S'verbose'
p2031
I0
I0
I01
Ntp2032
a(S'TKernelFunc'
p2033
S'kernelFunc'
p2034
S'kernel_func'
p2035
S'custom kernel function'
p2036
I0
I0
I00
Ntp2037
ag47
asg29
(dp2038
S'Kernel'
p2039
(lp2040
(S'Linear'
p2041
S'LINEAR'
p2042
tp2043
a(S'Polynomial'
p2044
S'POLY'
p2045
tp2046
a(S'RBF'
p2047
S'RBF'
p2048
tp2049
a(S'Sigmoid'
p2050
S'SIGMOID'
p2051
tp2052
a(S'Custom'
p2053
S'PRECOMPUTED'
p2054
tp2055
asS'LIBSVM_VERSION'
p2056
(lp2057
(S'VERSION'
p2058
S'LIBSVM_VERSION'
p2059
tp2060
asS'SVMType'
p2061
(lp2062
(S'C_SVC'
p2063
S'C_SVC'
p2064
tp2065
a(S'Nu_SVC'
p2066
S'NU_SVC'
p2067
tp2068
a(S'OneClass'
p2069
S'ONE_CLASS'
p2070
tp2071
a(S'Epsilon_SVR'
p2072
S'EPSILON_SVR'
p2073
tp2074
a(S'Nu_SVR'
p2075
S'NU_SVR'
p2076
tp2077
assbsS'TImputerConstructor_defaults'
p2078
(i__main__
ClassDefinition
p2079
(dp2080
g4
I1
sg5
I0
sg6
g2078
sg7
S'TImputerConstructor'
p2081
sg9
I00
sg10
(lp2082
sg12
(lp2083
(S'TExample'
p2084
S'defaults'
p2085
g2085
S'default values to be imputed instead missing ones'
p2086
I0
I0
I00
Ntp2087
ag1467
asg29
(dp2088
sbsS'TConditionalProbabilityEstimatorConstructor'
p2089
(i__main__
ClassDefinition
p2090
(dp2091
g4
I1
sg5
I0
sg6
g2089
sg7
S'TOrange'
p2092
sg9
I01
sg10
(lp2093
sg12
(lp2094
sg29
(dp2095
sbsS'TPreprocessor_takeMissingClasses'
p2096
(i__main__
ClassDefinition
p2097
(dp2098
g4
I1
sg5
I0
sg6
g2096
sg7
S'TPreprocessor'
p2099
sg9
I00
sg10
(lp2100
sg12
(lp2101
sg29
(dp2102
sbsS'TRuleValidator_LRS'
p2103
(i__main__
ClassDefinition
p2104
(dp2105
g4
I1
sg5
I0
sg6
g2103
sg7
S'TRuleValidator'
p2106
sg9
I00
sg10
(lp2107
sg12
(lp2108
(S'float'
p2109
S'alpha'
p2110
g2110
g1285
I0
I0
I01
Ntp2111
a(S'float'
p2112
S'min_coverage'
p2113
g2113
g1285
I0
I0
I01
Ntp2114
a(S'int'
p2115
S'max_rule_complexity'
p2116
g2116
g1285
I0
I0
I01
Ntp2117
a(S'float'
p2118
S'min_quality'
p2119
g2119
g1285
I0
I0
I01
Ntp2120
asg29
(dp2121
sbsS'TLogRegFitter_Python'
p2122
(i__main__
ClassDefinition
p2123
(dp2124
g4
I1
sg5
I0
sg6
g2122
sg7
S'TLogRegFitter'
p2125
sg9
I00
sg10
(lp2126
sg12
(lp2127
sg29
(dp2128
sbsS'TContDistribution'
p2129
(i__main__
ClassDefinition
p2130
(dp2131
g4
I1
sg5
I0
sg6
g2129
sg7
S'TDistribution'
p2132
sg9
I00
sg10
(lp2133
sg12
(lp2134
(S'TFloatList'
p2135
S'variances'
p2136
g2136
S'variances'
p2137
I0
I0
I00
Ntp2138
a(S'float'
p2139
S'sum'
p2140
g2140
S'weighted sum of elements (i.e. N*average)'
p2141
I01
I0
I01
Ntp2142
a(S'float'
p2143
S'sum2'
p2144
g2144
S'weighted sum of squares of elements'
p2145
I01
I0
I01
Ntp2146
a(S'TVariable'
p2147
S'variable'
p2148
g2148
S'attribute descriptor (optional)'
p2149
I0
I0
I00
Ntp2150
a(S'float'
p2151
S'unknowns'
p2152
g2152
S'number of unknown values'
p2153
I0
I0
I01
Ntp2154
a(S'float'
p2155
S'abs'
p2156
g2156
S'sum of frequencies (not including unknown values!)'
p2157
I0
I0
I01
Ntp2158
a(S'float'
p2159
S'cases'
p2160
g2160
S"number of cases; as abs, but doesn't change at *= and normalize()"
p2161
I0
I0
I01
Ntp2162
a(S'bool'
p2163
S'normalized'
p2164
g2164
S'distribution is normalized'
p2165
I0
I0
I01
Ntp2166
a(S'bool'
p2167
S'supportsDiscrete'
p2168
S'supports_discrete'
p2169
S'distribution supports discrete interface'
p2170
I01
I0
I01
Ntp2171
a(S'bool'
p2172
S'supportsContinuous'
p2173
S'supports_continuous'
p2174
S'distribution supports continuous interface'
p2175
I01
I0
I01
Ntp2176
a(S'TRandomGenerator'
p2177
S'randomGenerator'
p2178
S'random_generator'
p2179
S'random generator; initialized when needed, if not given earlier'
p2180
I0
I0
I00
Ntp2181
asg29
(dp2182
sbsS'TContingencyAttrClass'
p2183
(i__main__
ClassDefinition
p2184
(dp2185
g4
I1
sg5
I0
sg6
g2183
sg7
S'TContingencyClass'
p2186
sg9
I00
sg10
(lp2187
sg12
(lp2188
g796
ag801
ag807
ag812
ag817
ag822
asg29
(dp2189
sbsS'TPythonValueSpecial'
p2190
(i__main__
ClassDefinition
p2191
(dp2192
g4
I1
sg5
I0
sg6
g2190
sg7
S'TOrange'
p2193
sg9
I00
sg10
(lp2194
sg12
(lp2195
(S'int'
p2196
S'valueType'
p2197
S'value_type'
p2198
S'value type'
p2199
I0
I0
I01
Ntp2200
asg29
(dp2201
sbsS'TProbabilityEstimatorConstructor'
p2202
(i__main__
ClassDefinition
p2203
(dp2204
g4
I1
sg5
I0
sg6
g2202
sg7
S'TOrange'
p2205
sg9
I01
sg10
(lp2206
sg12
(lp2207
sg29
(dp2208
sbsS'TFloatVariable'
p2209
(i__main__
ClassDefinition
p2210
(dp2211
g4
I1
sg5
I0
sg6
g2209
sg7
S'TVariable'
p2212
sg9
I00
sg10
(lp2213
sg12
(lp2214
(S'float'
p2215
S'startValue'
p2216
S'start_value'
p2217
S'lowest value'
p2218
I0
I0
I01
Ntp2219
a(S'float'
p2220
S'endValue'
p2221
S'end_value'
p2222
S'highest value'
p2223
I0
I0
I01
Ntp2224
a(S'float'
p2225
S'stepValue'
p2226
S'step_value'
p2227
S'step'
p2228
I0
I0
I01
Ntp2229
a(S'int'
p2230
S'numberOfDecimals'
p2231
S'number_of_decimals'
p2232
S'number of digits after decimal point'
p2233
I0
I0
I01
Ntp2234
a(S'bool'
p2235
S'scientificFormat'
p2236
S'scientific_format'
p2237
S'use scientific format in output'
p2238
I0
I0
I01
Ntp2239
a(S'int'
p2240
S'adjustDecimals'
p2241
S'adjust_decimals'
p2242
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p2243
I0
I0
I01
Ntp2244
ag623
ag627
ag631
ag636
ag641
ag646
ag651
asg29
(dp2245
sbsS'TImputer_random'
p2246
(i__main__
ClassDefinition
p2247
(dp2248
g4
I1
sg5
I0
sg6
g2246
sg7
S'TImputer'
p2249
sg9
I00
sg10
(lp2250
sg12
(lp2251
(S'bool'
p2252
S'imputeClass'
p2253
S'impute_class'
p2254
S'Tells whether to impute the class values, too (default: true)'
p2255
I0
I0
I01
Ntp2256
a(S'bool'
p2257
S'deterministic'
p2258
g2258
S"tells whether to initialize random by example's CRC (default: false)"
p2259
I0
I0
I01
Ntp2260
a(S'TDistributionList'
p2261
S'distributions'
p2262
g2262
S'probability functions'
p2263
I0
I0
I00
Ntp2264
asg29
(dp2265
sbsS'TFilter_hasMeta'
p2266
(i__main__
ClassDefinition
p2267
(dp2268
g4
I1
sg5
I0
sg6
g2266
sg7
S'TFilter'
p2269
sg9
I00
sg10
(lp2270
sg12
(lp2271
(S'int'
p2272
S'id'
p2273
g2273
S'meta attribute id'
p2274
I0
I0
I01
Ntp2275
ag235
ag239
asg29
(dp2276
sbsS'TProbabilityEstimatorConstructor_kernel'
p2277
(i__main__
ClassDefinition
p2278
(dp2279
g4
I1
sg5
I0
sg6
g2277
sg7
S'TProbabilityEstimatorConstructor'
p2280
sg9
I00
sg10
(lp2281
sg12
(lp2282
(S'float'
p2283
S'minImpact'
p2284
S'min_impact'
p2285
S'Minimal impact the point must have to be counted'
p2286
I0
I0
I01
Ntp2287
a(S'float'
p2288
S'smoothing'
p2289
g2289
S'Smoothing factor'
p2290
I0
I0
I01
Ntp2291
a(S'int'
p2292
S'nPoints'
p2293
S'n_points'
p2294
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p2295
I0
I0
I01
Ntp2296
asg29
(dp2297
sbsS'TSubsetsGenerator_constant'
p2298
(i__main__
ClassDefinition
p2299
(dp2300
g4
I1
sg5
I0
sg6
g2298
sg7
S'TSubsetsGenerator'
p2301
sg9
I00
sg10
(lp2302
sg12
(lp2303
(S'TVarList'
p2304
S'constant'
p2305
g2305
S'a subset that is returned (once!)'
p2306
I0
I0
I00
Ntp2307
a(S'TVarList'
p2308
S'varList'
p2309
S'var_list'
p2310
S'a set of attributes from which subsets are generated'
p2311
I0
I0
I00
Ntp2312
asg29
(dp2313
sbsS'TDefaultClassifier'
p2314
(i__main__
ClassDefinition
p2315
(dp2316
g4
I1
sg5
I0
sg6
g2314
sg7
S'TClassifier'
p2317
sg9
I00
sg10
(lp2318
sg12
(lp2319
(S'TValue'
p2320
S'defaultVal'
p2321
S'default_val'
p2322
S'default prediction'
p2323
I0
I0
I01
Ntp2324
a(S'TDistribution'
p2325
S'defaultDistribution'
p2326
S'default_distribution'
p2327
S'default distribution'
p2328
I0
I0
I00
Ntp2329
ag772
ag777
asg29
(dp2330
sbsS'TTreeSplitConstructor_Measure'
p2331
(i__main__
ClassDefinition
p2332
(dp2333
g4
I1
sg5
I0
sg6
g2331
sg7
S'TTreeSplitConstructor'
p2334
sg9
I01
sg10
(lp2335
sg12
(lp2336
(S'TMeasureAttribute'
p2337
S'measure'
p2338
g2338
S'attribute quality measure'
p2339
I0
I0
I00
Ntp2340
a(S'float'
p2341
S'worstAcceptable'
p2342
S'worst_acceptable'
p2343
S'the worst acceptable quality of the attribute'
p2344
I0
I0
I01
Ntp2345
ag1677
asg29
(dp2346
sbsS'TTreeNode'
p2347
(i__main__
ClassDefinition
p2348
(dp2349
g4
I1
sg5
I0
sg6
g2347
sg7
S'TOrange'
p2350
sg9
I00
sg10
(lp2351
sg12
(lp2352
(S'TClassifier'
p2353
S'nodeClassifier'
p2354
S'node_classifier'
p2355
S'classifies an example'
p2356
I0
I0
I00
Ntp2357
a(S'TDistribution'
p2358
S'distribution'
p2359
g2359
S'distribution of classes in the node'
p2360
I0
I0
I00
Ntp2361
a(S'TDomainContingency'
p2362
S'contingency'
p2363
g2363
S'domain contingency for examples in the node'
p2364
I0
I0
I00
Ntp2365
a(S'TExampleGenerator'
p2366
S'examples'
p2367
g2367
S'learning examples (if stored)'
p2368
I0
I0
I00
Ntp2369
a(S'int'
p2370
S'weightID'
p2371
S'weight_ID'
p2372
S'weightID used to construct this node'
p2373
I0
I0
I01
Ntp2374
a(S'TClassifier'
p2375
S'branchSelector'
p2376
S'branch_selector'
p2377
S'classifier that select a branch for an example'
p2378
I0
I0
I00
Ntp2379
a(S'TTreeNodeList'
p2380
S'branches'
p2381
g2381
S'classifiers presenting the branches'
p2382
I0
I0
I00
Ntp2383
a(S'TStringList'
p2384
S'branchDescriptions'
p2385
S'branch_descriptions'
p2386
S'descriptions of branches'
p2387
I0
I0
I00
Ntp2388
a(S'TDiscDistribution'
p2389
S'branchSizes'
p2390
S'branch_sizes'
p2391
S'numbers of examples in branches'
p2392
I0
I0
I00
Ntp2393
asg29
(dp2394
sbsS'TTransformValue_IsDefined'
p2395
(i__main__
ClassDefinition
p2396
(dp2397
g4
I1
sg5
I0
sg6
g2395
sg7
S'TTransformValue'
p2398
sg9
I00
sg10
(lp2399
sg12
(lp2400
g294
asg29
(dp2401
sbsS'TFilter_hasClassValue'
p2402
(i__main__
ClassDefinition
p2403
(dp2404
g4
I1
sg5
I0
sg6
g2402
sg7
S'TFilter'
p2405
sg9
I00
sg10
(lp2406
sg12
(lp2407
g235
ag239
asg29
(dp2408
sbsS'TStopDistributionClustering_binary'
p2409
(i__main__
ClassDefinition
p2410
(dp2411
g4
I1
sg5
I0
sg6
g2409
sg7
S'TStopDistributionClustering'
p2412
sg9
I00
sg10
(lp2413
sg12
(lp2414
sg29
(dp2415
sbsS'TRuleFinder'
p2416
(i__main__
ClassDefinition
p2417
(dp2418
g4
I1
sg5
I0
sg6
g2416
sg7
S'TOrange'
p2419
sg9
I01
sg10
(lp2420
sg12
(lp2421
g1879
ag1882
asg29
(dp2422
sbsS'TClassifierByExampleTable'
p2423
(i__main__
ClassDefinition
p2424
(dp2425
g4
I1
sg5
I0
sg6
g2423
sg7
S'TClassifierFD'
p2426
sg9
I00
sg10
(lp2427
sg12
(lp2428
(S'TExampleTable'
p2429
S'sortedExamples'
p2430
S'sorted_examples'
p2431
S'a table of examples'
p2432
I0
I0
I00
Ntp2433
a(S'bool'
p2434
S'containsUnknowns'
p2435
S'contains_unknowns'
p2436
S'if true, the table contains unknown values'
p2437
I0
I0
I01
Ntp2438
a(S'TClassifier'
p2439
S'classifierForUnknown'
p2440
S'classifier_for_unknown'
p2441
S'a classifier for unknown cases'
p2442
I0
I0
I00
Ntp2443
a(S'TEFMDataDescription'
p2444
S'dataDescription'
p2445
S'data_description'
p2446
S'data description'
p2447
I0
I0
I00
Ntp2448
ag882
ag772
ag777
asg29
(dp2449
sbsS'TMeasureAttribute_gini'
p2450
(i__main__
ClassDefinition
p2451
(dp2452
g4
I1
sg5
I0
sg6
g2450
sg7
S'TMeasureAttributeFromProbabilities'
p2453
sg9
I00
sg10
(lp2454
sg12
(lp2455
g422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp2456
sbsS'TThresholdCA'
p2457
(i__main__
ClassDefinition
p2458
(dp2459
g4
I1
sg5
I0
sg6
g2457
sg7
S'TOrange'
p2460
sg9
I00
sg10
(lp2461
sg12
(lp2462
sg29
(dp2463
sbsS'TRemoveRedundantOneValue'
p2464
(i__main__
ClassDefinition
p2465
(dp2466
g4
I1
sg5
I0
sg6
g2464
sg7
S'TRemoveRedundant'
p2467
sg9
I00
sg10
(lp2468
sg12
(lp2469
(S'bool'
p2470
S'onData'
p2471
S'on_data'
p2472
S'observe the actual number of value on the data (not on attribute definitions)'
p2473
I0
I0
I01
Ntp2474
ag522
asg29
(dp2475
sbsS'TDistributionAssessor_Relief'
p2476
(i__main__
ClassDefinition
p2477
(dp2478
g4
I1
sg5
I0
sg6
g2476
sg7
S'TDistributionAssessor'
p2479
sg9
I00
sg10
(lp2480
sg12
(lp2481
sg29
(dp2482
sbsS'TRuleBeamCandidateSelector'
p2483
(i__main__
ClassDefinition
p2484
(dp2485
g4
I1
sg5
I0
sg6
g2483
sg7
S'TOrange'
p2486
sg9
I01
sg10
(lp2487
sg12
(lp2488
sg29
(dp2489
sbsS'TSubsetsGenerator_minMaxSize'
p2490
(i__main__
ClassDefinition
p2491
(dp2492
g4
I1
sg5
I0
sg6
g2490
sg7
S'TSubsetsGenerator'
p2493
sg9
I00
sg10
(lp2494
sg12
(lp2495
(S'int'
p2496
S'min'
p2497
g2497
S'minimal subset size'
p2498
I0
I0
I01
Ntp2499
a(S'int'
p2500
S'max'
p2501
g2501
S'maximal subset size'
p2502
I0
I0
I01
Ntp2503
ag2312
asg29
(dp2504
sbsS'TContingencyClass'
p2505
(i__main__
ClassDefinition
p2506
(dp2507
g4
I1
sg5
I0
sg6
g2505
sg7
S'TContingency'
p2508
sg9
I01
sg10
(lp2509
sg12
(lp2510
g796
ag801
ag807
ag812
ag817
ag822
asg29
(dp2511
sbsS'TAssociationClassifier'
p2512
(i__main__
ClassDefinition
p2513
(dp2514
g4
I1
sg5
I0
sg6
g2512
sg7
S'TClassifierFD'
p2515
sg9
I00
sg10
(lp2516
sg12
(lp2517
(S'TAssociationRules'
p2518
S'rules'
p2519
g2519
S'association rules'
p2520
I0
I0
I00
Ntp2521
a(S'int'
p2522
S'voteWeight'
p2523
S'vote_weight'
p2524
S'vote weight (s=support, c=confidence, p=product)'
p2525
I0
I0
I01
Ntp2526
ag882
ag772
ag777
asg29
(dp2527
sbsS'TDomainDistributions'
p2528
(i__main__
ClassDefinition
p2529
(dp2530
g4
I1
sg5
I0
sg6
g2528
sg7
S'TOrange'
p2531
sg9
I00
sg10
(lp2532
sg12
(lp2533
sg29
(dp2534
sbsS'TSVMLearnerSparse'
p2535
(i__main__
ClassDefinition
p2536
(dp2537
g4
I1
sg5
I0
sg6
g2535
sg7
S'TSVMLearner'
p2538
sg9
I00
sg10
(lp2539
sg12
(lp2540
(S'bool'
p2541
S'useNonMeta'
p2542
S'use_non_meta'
p2543
S'include non meta attributes in the learning process'
p2544
I0
I0
I01
Ntp2545
ag1984
ag1989
ag1993
ag1997
ag2001
ag2005
ag2009
ag2013
ag2017
ag2020
ag2024
ag2028
ag2032
ag2037
ag47
asg29
(dp2546
sbsS'TSubsetsGenerator_constant_iterator'
p2547
(i__main__
ClassDefinition
p2548
(dp2549
g4
I1
sg5
I0
sg6
g2547
sg7
S'TSubsetsGenerator_iterator'
p2550
sg9
I00
sg10
(lp2551
sg12
(lp2552
(S'TVarList'
p2553
S'constant'
p2554
g2554
S'a subset that is returned (once!)'
p2555
I0
I0
I00
Ntp2556
a(S'bool'
p2557
S'moreToCome'
p2558
S'more_to_come'
p2559
g1285
I0
I0
I01
Ntp2560
ag168
asg29
(dp2561
sbsS'TExampleDistConstructor'
p2562
(i__main__
ClassDefinition
p2563
(dp2564
g4
I1
sg5
I0
sg6
g2562
sg7
S'TOrange'
p2565
sg9
I01
sg10
(lp2566
sg12
(lp2567
sg29
(dp2568
sbsS'TIMByIMByRows'
p2569
(i__main__
ClassDefinition
p2570
(dp2571
g4
I1
sg5
I0
sg6
g2569
sg7
S'TIMConstructor'
p2572
sg9
I00
sg10
(lp2573
sg12
(lp2574
(S'bool'
p2575
S'recordRowExamples'
p2576
S'record_row_examples'
p2577
S'enables creation of rowExample list'
p2578
I0
I0
I01
Ntp2579
asg29
(dp2580
sbsS'TDiscrete2Continuous'
p2581
(i__main__
ClassDefinition
p2582
(dp2583
g4
I1
sg5
I0
sg6
g2581
sg7
S'TTransformValue'
p2584
sg9
I00
sg10
(lp2585
sg12
(lp2586
(S'int'
p2587
S'value'
p2588
g2588
S'target value'
p2589
I0
I0
I01
Ntp2590
a(S'bool'
p2591
S'invert'
p2592
g2592
S'give 1.0 to values not equal to the target'
p2593
I0
I0
I01
Ntp2594
a(S'bool'
p2595
S'zeroBased'
p2596
S'zero_based'
p2597
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p2598
I0
I0
I01
Ntp2599
ag294
asg29
(dp2600
sbsS'TColumnAssessor_m'
p2601
(i__main__
ClassDefinition
p2602
(dp2603
g4
I1
sg5
I0
sg6
g2601
sg7
S'TColumnAssessor'
p2604
sg9
I00
sg10
(lp2605
sg12
(lp2606
(S'float'
p2607
g984
g984
S'm for m-estimate'
p2608
I0
I0
I01
Ntp2609
asg29
(dp2610
sbsS'TImputer_defaults'
p2611
(i__main__
ClassDefinition
p2612
(dp2613
g4
I1
sg5
I0
sg6
g2611
sg7
S'TImputer'
p2614
sg9
I00
sg10
(lp2615
sg12
(lp2616
(S'TExample'
p2617
S'defaults'
p2618
g2618
S'values that are to be inserted instead of missing ones'
p2619
I0
I0
I00
Ntp2620
asg29
(dp2621
sbsS'TContingency'
p2622
(i__main__
ClassDefinition
p2623
(dp2624
g4
I1
sg5
I0
sg6
g2622
sg7
S'TOrange'
p2625
sg9
I00
sg10
(lp2626
sg12
(lp2627
g796
ag801
ag807
ag812
ag817
ag822
asg29
(dp2628
sbsS'TImputer_Python'
p2629
(i__main__
ClassDefinition
p2630
(dp2631
g4
I1
sg5
I0
sg6
g2629
sg7
S'TImputer'
p2632
sg9
I00
sg10
(lp2633
sg12
(lp2634
sg29
(dp2635
sbsS'TClassifierGenerator'
p2636
(i__main__
ClassDefinition
p2637
(dp2638
g4
I1
sg5
I0
sg6
g2636
sg7
S'TExampleGenerator'
p2639
sg9
I00
sg10
(lp2640
sg12
(lp2641
(S'TClassifier'
p2642
S'classify'
p2643
g2643
S'classifier'
p2644
I0
I0
I00
Ntp2645
ag97
ag101
asg29
(dp2646
sbsS'TRuleDataStoppingCriteria_Python'
p2647
(i__main__
ClassDefinition
p2648
(dp2649
g4
I1
sg5
I0
sg6
g2647
sg7
S'TRuleDataStoppingCriteria'
p2650
sg9
I00
sg10
(lp2651
sg12
(lp2652
sg29
(dp2653
sbsS'TTreeDescender_UnknownToCommonSelector'
p2654
(i__main__
ClassDefinition
p2655
(dp2656
g4
I1
sg5
I0
sg6
g2654
sg7
S'TTreeDescender'
p2657
sg9
I0
sg10
(lp2658
sg12
(lp2659
sg29
(dp2660
sbsS'TPreprocessIM'
p2661
(i__main__
ClassDefinition
p2662
(dp2663
g4
I1
sg5
I0
sg6
g2661
sg7
S'TOrange'
p2664
sg9
I01
sg10
(lp2665
sg12
(lp2666
sg29
(dp2667
sbsS'TRuleEvaluator_Laplace'
p2668
(i__main__
ClassDefinition
p2669
(dp2670
g4
I1
sg5
I0
sg6
g2668
sg7
S'TRuleEvaluator'
p2671
sg9
I00
sg10
(lp2672
sg12
(lp2673
sg29
(dp2674
sbsS'TColumnAssessor_N'
p2675
(i__main__
ClassDefinition
p2676
(dp2677
g4
I1
sg5
I0
sg6
g2675
sg7
S'TColumnAssessor'
p2678
sg9
I00
sg10
(lp2679
sg12
(lp2680
sg29
(dp2681
sbsS'TPreprocessor_dropMissing'
p2682
(i__main__
ClassDefinition
p2683
(dp2684
g4
I1
sg5
I0
sg6
g2682
sg7
S'TPreprocessor'
p2685
sg9
I00
sg10
(lp2686
sg12
(lp2687
sg29
(dp2688
sbsS'TExample'
p2689
(i__main__
ClassDefinition
p2690
(dp2691
g4
I1
sg5
I0
sg6
g2689
sg7
S'TOrange'
p2692
sg9
I00
sg10
(lp2693
sg12
(lp2694
(S'TDomain'
p2695
S'domain'
p2696
g2696
S"Example's domain"
p2697
I01
I0
I00
Ntp2698
a(S'int'
p2699
S'id'
p2700
g2700
g1285
I0
I0
I01
Ntp2701
asg29
(dp2702
sbsS'TOrdinal2Continuous'
p2703
(i__main__
ClassDefinition
p2704
(dp2705
g4
I1
sg5
I0
sg6
g2703
sg7
S'TTransformValue'
p2706
sg9
I00
sg10
(lp2707
sg12
(lp2708
(S'float'
p2709
S'factor'
p2710
g2710
S'number of values'
p2711
I0
I0
I01
Ntp2712
ag294
asg29
(dp2713
sbsS'TExampleDistBySorting'
p2714
(i__main__
ClassDefinition
p2715
(dp2716
g4
I1
sg5
I0
sg6
g2714
sg7
S'TExampleDistConstructor'
p2717
sg9
I00
sg10
(lp2718
sg12
(lp2719
sg29
(dp2720
sbsS'TValueFilter_discrete'
p2721
(i__main__
ClassDefinition
p2722
(dp2723
g4
I1
sg5
I0
sg6
g2721
sg7
S'TValueFilter'
p2724
sg9
I00
sg10
(lp2725
sg12
(lp2726
(S'TValueList'
p2727
S'values'
p2728
g2728
S'accepted values'
p2729
I0
I0
I00
Ntp2730
a(S'bool'
p2731
S'negate'
p2732
g2732
S'negate'
p2733
I0
I0
I01
Ntp2734
a(S'int'
p2735
S'position'
p2736
g2736
S"attribute's position in domain"
p2737
I0
I0
I01
Ntp2738
a(S'int'
p2739
S'acceptSpecial'
p2740
S'accept_special'
p2741
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p2742
I0
I0
I01
Ntp2743
asg29
(dp2744
sbsS'TAssociationRulesInducer'
p2745
(i__main__
ClassDefinition
p2746
(dp2747
g4
I1
sg5
I0
sg6
g2745
sg7
S'TOrange'
p2748
sg9
I00
sg10
(lp2749
sg12
(lp2750
(S'int'
p2751
S'maxItemSets'
p2752
S'max_item_sets'
p2753
S'maximal number of itemsets (increase if you want)'
p2754
I0
I0
I01
Ntp2755
a(S'float'
p2756
S'confidence'
p2757
g2757
S'required confidence'
p2758
I0
I0
I01
Ntp2759
a(S'float'
p2760
S'support'
p2761
g2761
S'required support'
p2762
I0
I0
I01
Ntp2763
a(S'bool'
p2764
S'classificationRules'
p2765
S'classification_rules'
p2766
S'if true, rules will have the class and only the class attribute on the right-hand side'
p2767
I0
I0
I01
Ntp2768
a(S'bool'
p2769
S'storeExamples'
p2770
S'store_examples'
p2771
S'if true, each rule is going to have tables with references to examples which match its left side or both sides'
p2772
I0
I0
I01
Ntp2773
asg29
(dp2774
sbsS'TPreprocessor_addMissingClasses'
p2775
(i__main__
ClassDefinition
p2776
(dp2777
g4
I1
sg5
I0
sg6
g2775
sg7
S'TPreprocessor'
p2778
sg9
I00
sg10
(lp2779
sg12
(lp2780
(S'float'
p2781
S'proportion'
p2782
g2782
S'proportion of removed class values'
p2783
I0
I0
I01
Ntp2784
a(S'int'
p2785
S'specialType'
p2786
S'special_type'
p2787
S'special value type (1=DC, 2=DK)'
p2788
I0
I0
I01
Ntp2789
a(S'TRandomGenerator'
p2790
S'randomGenerator'
p2791
S'random_generator'
p2792
S'random number generator'
p2793
I0
I0
I00
Ntp2794
asg29
(dp2795
sbsS'TBasketExampleGenerator'
p2796
(i__main__
ClassDefinition
p2797
(dp2798
g4
I1
sg5
I0
sg6
g2796
sg7
S'TFileExampleGenerator'
p2799
sg9
I00
sg10
(lp2800
sg12
(lp2801
g718
ag723
ag728
ag97
ag101
asg29
(dp2802
sbsS'TRuleEvaluator_Entropy'
p2803
(i__main__
ClassDefinition
p2804
(dp2805
g4
I1
sg5
I0
sg6
g2803
sg7
S'TRuleEvaluator'
p2806
sg9
I00
sg10
(lp2807
sg12
(lp2808
sg29
(dp2809
sbsS'TExamplesDistance_DTW'
p2810
(i__main__
ClassDefinition
p2811
(dp2812
g4
I1
sg5
I0
sg6
g2810
sg7
S'TExamplesDistance_Normalized'
p2813
sg9
I00
sg10
(lp2814
sg12
(lp2815
(S'int'
p2816
S'dtwDistance'
p2817
S'dtw_distance'
p2818
S' distance measure between individual attributes (default: square of difference)'
p2819
I0
I0
I01
S'ExamplesDistance_DTW_DistanceType'
p2820
tp2821
ag112
ag116
ag120
ag124
ag129
ag133
ag138
asg29
(dp2822
S'DistanceType'
p2823
(lp2824
(S'Euclidean'
p2825
I0
tp2826
a(S'Derivative'
p2827
I1
tp2828
assbsS'TTreeExampleSplitter_UnknownsToRandom'
p2829
(i__main__
ClassDefinition
p2830
(dp2831
g4
I1
sg5
I0
sg6
g2829
sg7
S'TTreeExampleSplitter'
p2832
sg9
I00
sg10
(lp2833
sg12
(lp2834
sg29
(dp2835
sbsS'TTreeSplitConstructor_Combined'
p2836
(i__main__
ClassDefinition
p2837
(dp2838
g4
I1
sg5
I0
sg6
g2836
sg7
S'TTreeSplitConstructor'
p2839
sg9
I00
sg10
(lp2840
sg12
(lp2841
(S'TTreeSplitConstructor'
p2842
S'discreteSplitConstructor'
p2843
S'discrete_split_constructor'
p2844
S'split constructor for discrete attributes'
p2845
I0
I0
I00
Ntp2846
a(S'TTreeSplitConstructor'
p2847
S'continuousSplitConstructor'
p2848
S'continuous_split_constructor'
p2849
S'split constructor for continuous attributes'
p2850
I0
I0
I00
Ntp2851
ag1677
asg29
(dp2852
sbsS'TExamplesDistanceConstructor_DTW'
p2853
(i__main__
ClassDefinition
p2854
(dp2855
g4
I1
sg5
I0
sg6
g2853
sg7
S'TExamplesDistanceConstructor_Normalized'
p2856
sg9
I00
sg10
(lp2857
sg12
(lp2858
(S'int'
p2859
S'dtwDistance'
p2860
S'dtw_distance'
p2861
S'distance measure between individual attributes (default: square of difference)'
p2862
I0
I0
I01
Ntp2863
ag1147
ag1152
ag544
asg29
(dp2864
sbsS'TStopIMClusteringByAssessor_n'
p2865
(i__main__
ClassDefinition
p2866
(dp2867
g4
I1
sg5
I0
sg6
g2865
sg7
S'TStopIMClusteringByAssessor'
p2868
sg9
I00
sg10
(lp2869
sg12
(lp2870
(S'int'
p2871
g361
g361
S'number of clusters'
p2872
I0
I0
I01
Ntp2873
asg29
(dp2874
sbsS'TRandomGenerator'
p2875
(i__main__
ClassDefinition
p2876
(dp2877
g4
I1
sg5
I0
sg6
g2875
sg7
S'TOrange'
p2878
sg9
I00
sg10
(lp2879
sg12
(lp2880
(S'int'
p2881
S'initseed'
p2882
g2882
S'initial random seed'
p2883
I0
I0
I01
Ntp2884
a(S'int'
p2885
S'uses'
p2886
g2886
S'#times a number was returned'
p2887
I0
I0
I01
Ntp2888
asg29
(dp2889
sbsS'TPreprocessor_imputeByLearner'
p2890
(i__main__
ClassDefinition
p2891
(dp2892
g4
I1
sg5
I0
sg6
g2890
sg7
S'TPreprocessor'
p2893
sg9
I00
sg10
(lp2894
sg12
(lp2895
(S'TLearner'
p2896
S'learner'
p2897
g2897
S'learner used for inducing a model for imputation'
p2898
I0
I0
I00
Ntp2899
asg29
(dp2900
sbsS'TLogRegLearner'
p2901
(i__main__
ClassDefinition
p2902
(dp2903
g4
I1
sg5
I0
sg6
g2901
sg7
S'TLearner'
p2904
sg9
I00
sg10
(lp2905
sg12
(lp2906
(S'TLogRegFitter'
p2907
S'fitter'
p2908
g2908
S'fits beta coefficients and calculates beta errors.'
p2909
I0
I0
I00
Ntp2910
a(S'TImputerConstructor'
p2911
S'imputerConstructor'
p2912
S'imputer_constructor'
p2913
S'if present, it constructs an imputer for unknown values'
p2914
I0
I0
I00
Ntp2915
a(S'TDomainContinuizer'
p2916
S'domainContinuizer'
p2917
S'domain_continuizer'
p2918
S'if present, it constructs continuous domain if needed; if absent, default is used'
p2919
I0
I0
I00
Ntp2920
ag47
asg29
(dp2921
sbsS'TExamplesDistance_Euclidean'
p2922
(i__main__
ClassDefinition
p2923
(dp2924
g4
I1
sg5
I0
sg6
g2922
sg7
S'TExamplesDistance_Normalized'
p2925
sg9
I00
sg10
(lp2926
sg12
(lp2927
(S'TDomainDistributions'
p2928
S'distributions'
p2929
g2929
S'distributions (of discrete attributes only)'
p2930
I0
I0
I00
Ntp2931
a(S'TAttributedFloatList'
p2932
S'bothSpecialDist'
p2933
S'both_special_dist'
p2934
S'distances between discrete attributes if both values are unknown'
p2935
I0
I0
I00
Ntp2936
ag112
ag116
ag120
ag124
ag129
ag133
ag138
asg29
(dp2937
sbsS'TMeasureAttribute_IM'
p2938
(i__main__
ClassDefinition
p2939
(dp2940
g4
I1
sg5
I0
sg6
g2938
sg7
S'TMeasureAttribute'
p2941
sg9
I00
sg10
(lp2942
sg12
(lp2943
(S'TIMConstructor'
p2944
S'IMconstructor'
p2945
g2945
S'incompatibility matrix constructor'
p2946
I0
I0
I00
Ntp2947
a(S'TColumnAssessor'
p2948
S'columnAssessor'
p2949
S'column_assessor'
p2950
S'column quality assessor'
p2951
I0
I0
I00
Ntp2952
ag438
ag443
ag448
ag453
asg29
(dp2953
sbsS'TStopIMClusteringByAssessor_noProfit'
p2954
(i__main__
ClassDefinition
p2955
(dp2956
g4
I1
sg5
I0
sg6
g2954
sg7
S'TStopIMClusteringByAssessor'
p2957
sg9
I00
sg10
(lp2958
sg12
(lp2959
(S'float'
p2960
S'minProfitProportion'
p2961
S'min_profit_proportion'
p2962
S'minimal allowable profit proportion'
p2963
I0
I0
I01
Ntp2964
asg29
(dp2965
sbsS'TRemoveUnusedValues'
p2966
(i__main__
ClassDefinition
p2967
(dp2968
g4
I1
sg5
I0
sg6
g2966
sg7
S'TOrange'
p2969
sg9
I00
sg10
(lp2970
sg12
(lp2971
(S'bool'
p2972
S'removeOneValued'
p2973
S'remove_one_valued'
p2974
S'if true (default is false), one valued attributes are also removed'
p2975
I0
I0
I01
Ntp2976
asg29
(dp2977
sbsS'TExamplesDistance_Normalized'
p2978
(i__main__
ClassDefinition
p2979
(dp2980
g4
I1
sg5
I0
sg6
g2978
sg7
S'TExamplesDistance'
p2981
sg9
I01
sg10
(lp2982
sg12
(lp2983
g112
ag116
ag120
ag124
ag129
ag133
ag138
asg29
(dp2984
sbsS'TDistributionAssessor_Measure'
p2985
(i__main__
ClassDefinition
p2986
(dp2987
g4
I1
sg5
I0
sg6
g2985
sg7
S'TDistributionAssessor'
p2988
sg9
I00
sg10
(lp2989
sg12
(lp2990
(S'TMeasureAttribute'
p2991
S'measure'
p2992
g2992
S'attribute quality measure'
p2993
I0
I0
I00
Ntp2994
asg29
(dp2995
sbsS'TRuleFinder_Python'
p2996
(i__main__
ClassDefinition
p2997
(dp2998
g4
I1
sg5
I0
sg6
g2996
sg7
S'TRuleFinder'
p2999
sg9
I00
sg10
(lp3000
sg12
(lp3001
g1879
ag1882
asg29
(dp3002
sbsS'TTabDelimExampleGenerator'
p3003
(i__main__
ClassDefinition
p3004
(dp3005
g4
I1
sg5
I0
sg6
g3003
sg7
S'TFileExampleGenerator'
p3006
sg9
I00
sg10
(lp3007
sg12
(lp3008
(S'TIntList'
p3009
S'attributeTypes'
p3010
S'attribute_types'
p3011
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p3012
I0
I0
I00
Ntp3013
a(S'int'
p3014
S'classPos'
p3015
S'class_pos'
p3016
S'position of the class attribute'
p3017
I0
I0
I01
Ntp3018
a(S'TIntList'
p3019
S'classPoses'
p3020
S'class_poses'
p3021
S'positions of class attributes if there are multiple; otherwise None'
p3022
I0
I0
I00
Ntp3023
a(S'int'
p3024
S'basketPos'
p3025
S'basket_pos'
p3026
S'position of the (virtual) basket attribute'
p3027
I0
I0
I01
Ntp3028
a(S'int'
p3029
S'headerLines'
p3030
S'header_lines'
p3031
S'number of header lines (3 for .tab, 1 for .txt)'
p3032
I0
I0
I01
Ntp3033
a(S'bool'
p3034
S'csv'
p3035
g3035
S"also allow ',' as a separator"
p3036
I0
I0
I01
Ntp3037
a(S'TBasketFeeder'
p3038
S'basketFeeder'
p3039
S'basket_feeder'
p3040
S'takes care of inserting the meta attributes from the basket if need be'
p3041
I0
I0
I00
Ntp3042
ag718
ag723
ag728
ag97
ag101
asg29
(dp3043
sbsS'TkNNLearner'
p3044
(i__main__
ClassDefinition
p3045
(dp3046
g4
I1
sg5
I0
sg6
g3044
sg7
S'TLearner'
p3047
sg9
I00
sg10
(lp3048
sg12
(lp3049
(S'float'
p3050
g980
g980
S'number of neighbours (0 for sqrt of #examples)'
p3051
I0
I0
I01
Ntp3052
a(S'bool'
p3053
S'rankWeight'
p3054
S'rank_weight'
p3055
S'enable weighting by ranks'
p3056
I0
I0
I01
Ntp3057
a(S'TExamplesDistanceConstructor'
p3058
S'distanceConstructor'
p3059
S'distance_constructor'
p3060
S'metrics'
p3061
I0
I0
I00
Ntp3062
ag47
asg29
(dp3063
sbsS'TDistributionAssessor_mf'
p3064
(i__main__
ClassDefinition
p3065
(dp3066
g4
I1
sg5
I0
sg6
g3064
sg7
S'TDistributionAssessor'
p3067
sg9
I00
sg10
(lp3068
sg12
(lp3069
(S'float'
p3070
g984
g984
S'm for m-estimate'
p3071
I0
I0
I01
Ntp3072
asg29
(dp3073
sbsS'TEFMDataDescription'
p3074
(i__main__
ClassDefinition
p3075
(dp3076
g4
I1
sg5
I0
sg6
g3074
sg7
S'TOrange'
p3077
sg9
I00
sg10
(lp3078
S'domainDistributions'
p3079
asg12
(lp3080
(S'TDomain'
p3081
S'domain'
p3082
g3082
S'domain'
p3083
I01
I0
I00
Ntp3084
asg29
(dp3085
sbsS'TClassifierFD'
p3086
(i__main__
ClassDefinition
p3087
(dp3088
g4
I1
sg5
I0
sg6
g3086
sg7
S'TClassifier'
p3089
sg9
I00
sg10
(lp3090
sg12
(lp3091
g882
ag772
ag777
asg29
(dp3092
sbsS'TTreeDescender_UnknownToCommonBranch'
p3093
(i__main__
ClassDefinition
p3094
(dp3095
g4
I1
sg5
I0
sg6
g3093
sg7
g2657
sg9
I0
sg10
(lp3096
sg12
(lp3097
sg29
(dp3098
sbsS'TStopIMClusteringByAssessor_binary'
p3099
(i__main__
ClassDefinition
p3100
(dp3101
g4
I1
sg5
I0
sg6
g3099
sg7
S'TStopIMClusteringByAssessor'
p3102
sg9
I00
sg10
(lp3103
sg12
(lp3104
sg29
(dp3105
sbsS'TExamplesDistanceConstructor'
p3106
(i__main__
ClassDefinition
p3107
(dp3108
g4
I1
sg5
I0
sg6
g3106
sg7
S'TOrange'
p3109
sg9
I01
sg10
(lp3110
sg12
(lp3111
g544
asg29
(dp3112
sbsS'TRuleBeamCandidateSelector_Python'
p3113
(i__main__
ClassDefinition
p3114
(dp3115
g4
I1
sg5
I0
sg6
g3113
sg7
S'TRuleBeamCandidateSelector'
p3116
sg9
I00
sg10
(lp3117
sg12
(lp3118
sg29
(dp3119
sbsS'TEntropyDiscretization'
p3120
(i__main__
ClassDefinition
p3121
(dp3122
g4
I1
sg5
I0
sg6
g3120
sg7
S'TDiscretization'
p3123
sg9
I00
sg10
(lp3124
sg12
(lp3125
(S'int'
p3126
S'maxNumberOfIntervals'
p3127
(g3127
g361
tp3128
S' maximal number of intervals; default = 0 (no limits)'
p3129
I0
I0
I01
Ntp3130
a(S'bool'
p3131
S'forceAttribute'
p3132
(g3132
S'forced'
p3133
tp3134
S' minimal number of intervals; default = 0 (no limits)'
p3135
I0
I0
I01
Ntp3136
asg29
(dp3137
sbsS'TIMBySorting'
p3138
(i__main__
ClassDefinition
p3139
(dp3140
g4
I1
sg5
I0
sg6
g3138
sg7
S'TIMConstructor'
p3141
sg9
I00
sg10
(lp3142
sg12
(lp3143
g2579
asg29
(dp3144
sbsS'TImputerConstructor_asValue'
p3145
(i__main__
ClassDefinition
p3146
(dp3147
g4
I1
sg5
I0
sg6
g3145
sg7
S'TImputerConstructor'
p3148
sg9
I00
sg10
(lp3149
sg12
(lp3150
g1467
asg29
(dp3151
sbsS'TExampleDistVector'
p3152
(i__main__
ClassDefinition
p3153
(dp3154
g4
I1
sg5
I0
sg6
g3152
sg7
S'TOrange'
p3155
sg9
I00
sg10
(lp3156
sg12
(lp3157
sg29
(dp3158
sbsS'TIMClustering'
p3159
(i__main__
ClassDefinition
p3160
(dp3161
g4
I1
sg5
I0
sg6
g3159
sg7
S'TOrange'
p3162
sg9
I00
sg10
(lp3163
sg12
(lp3164
(S'TIM'
p3165
S'im'
p3166
g3166
S'incompatibilty matrix'
p3167
I0
I0
I00
Ntp3168
a(S'TIntList'
p3169
S'clusters'
p3170
g3170
S'cluster index for each matrix column'
p3171
I0
I0
I00
Ntp3172
a(S'int'
p3173
S'maxCluster'
p3174
S'max_cluster'
p3175
S'the highest cluster index'
p3176
I0
I0
I01
Ntp3177
a(S'float'
p3178
S'quality'
p3179
g3179
S'cluster quality'
p3180
I0
I0
I01
Ntp3181
asg29
(dp3182
sbsS'TRuleStoppingCriteria'
p3183
(i__main__
ClassDefinition
p3184
(dp3185
g4
I1
sg5
I0
sg6
g3183
sg7
S'TOrange'
p3186
sg9
I01
sg10
(lp3187
sg12
(lp3188
sg29
(dp3189
sbsS'TImputerConstructor_model'
p3190
(i__main__
ClassDefinition
p3191
(dp3192
g4
I1
sg5
I0
sg6
g3190
sg7
S'TImputerConstructor'
p3193
sg9
I00
sg10
(lp3194
sg12
(lp3195
(S'TLearner'
p3196
S'learnerDiscrete'
p3197
S'learner_discrete'
p3198
S'learner for discrete attributes'
p3199
I0
I0
I00
Ntp3200
a(S'TLearner'
p3201
S'learnerContinuous'
p3202
S'learner_continuous'
p3203
S'learner for continuous attributes'
p3204
I0
I0
I00
Ntp3205
a(S'bool'
p3206
S'useClass'
p3207
S'use_class'
p3208
S'tells whether to use class value in imputation (default: false)'
p3209
I0
I0
I01
Ntp3210
ag1467
asg29
(dp3211
sbsS'TFindNearestConstructor_BruteForce'
p3212
(i__main__
ClassDefinition
p3213
(dp3214
g4
I1
sg5
I0
sg6
g3212
sg7
S'TFindNearestConstructor'
p3215
sg9
I00
sg10
(lp3216
sg12
(lp3217
g1028
ag1033
asg29
(dp3218
sbsS'TImputerConstructor'
p3219
(i__main__
ClassDefinition
p3220
(dp3221
g4
I1
sg5
I0
sg6
g3219
sg7
S'TOrange'
p3222
sg9
I01
sg10
(lp3223
sg12
(lp3224
g1467
asg29
(dp3225
sbsS'TDiscretizer'
p3226
(i__main__
ClassDefinition
p3227
(dp3228
g4
I1
sg5
I0
sg6
g3226
sg7
S'TTransformValue'
p3229
sg9
I01
sg10
(lp3230
sg12
(lp3231
g294
asg29
(dp3232
sbsS'TIMByRowsPreprocessor'
p3233
(i__main__
ClassDefinition
p3234
(dp3235
g4
I1
sg5
I0
sg6
g3233
sg7
S'TOrange'
p3236
sg9
I01
sg10
(lp3237
sg12
(lp3238
sg29
(dp3239
sbsS'TTreeStopCriteria_common'
p3240
(i__main__
ClassDefinition
p3241
(dp3242
g4
I1
sg5
I0
sg6
g3240
sg7
S'TTreeStopCriteria'
p3243
sg9
I00
sg10
(lp3244
sg12
(lp3245
(S'float'
p3246
S'maxMajority'
p3247
S'max_majority'
p3248
S'a maximal proportion of majority class for division to continue'
p3249
I0
I0
I01
Ntp3250
a(S'float'
p3251
S'minExamples'
p3252
S'min_examples'
p3253
S'a minimal number of examples for division to continue'
p3254
I0
I0
I01
Ntp3255
asg29
(dp3256
sbsS'TTreeStopCriteria_Python'
p3257
(i__main__
ClassDefinition
p3258
(dp3259
g4
I1
sg5
I0
sg6
g3257
sg7
S'TTreeStopCriteria'
p3260
sg9
I00
sg10
(lp3261
sg12
(lp3262
sg29
(dp3263
sbsS'TIGByIM'
p3264
(i__main__
ClassDefinition
p3265
(dp3266
g4
I1
sg5
I0
sg6
g3264
sg7
S'TIGConstructor'
p3267
sg9
I00
sg10
(lp3268
sg12
(lp3269
(S'TIMConstructor'
p3270
S'IMconstructor'
p3271
g3271
S'IM constructor'
p3272
I0
I0
I00
Ntp3273
asg29
(dp3274
sbsS'TRuleEvaluator_LRS'
p3275
(i__main__
ClassDefinition
p3276
(dp3277
g4
I1
sg5
I0
sg6
g3275
sg7
S'TRuleEvaluator'
p3278
sg9
I00
sg10
(lp3279
sg12
(lp3280
(S'TRuleList'
p3281
S'rules'
p3282
g3282
g1285
I0
I0
I00
Ntp3283
a(S'bool'
p3284
S'storeRules'
p3285
S'store_rules'
p3286
g1285
I0
I0
I01
Ntp3287
asg29
(dp3288
sbsS'TExampleCluster'
p3289
(i__main__
ClassDefinition
p3290
(dp3291
g4
I1
sg5
I0
sg6
g3289
sg7
S'TOrange'
p3292
sg9
I00
sg10
(lp3293
sg12
(lp3294
(S'TExampleCluster'
p3295
S'left'
p3296
g3296
S"'left' cluster"
p3297
I0
I0
I00
Ntp3298
a(S'TExampleCluster'
p3299
S'right'
p3300
g3300
S"'right' cluster"
p3301
I0
I0
I00
Ntp3302
a(S'float'
p3303
S'distance'
p3304
g3304
S'distance between the two clusters (not defined for leaves)'
p3305
I0
I0
I01
Ntp3306
a(S'TExample'
p3307
S'centroid'
p3308
g3308
S"cluster's centroid (always defined for leaves)"
p3309
I0
I0
I00
Ntp3310
asg29
(dp3311
sbsS'TClassifierByLookupTableN'
p3312
(i__main__
ClassDefinition
p3313
(dp3314
g4
I1
sg5
I0
sg6
g3312
sg7
S'TClassifierByLookupTable'
p3315
sg9
I00
sg10
(lp3316
sg12
(lp3317
(S'TVarList'
p3318
S'variables'
p3319
g3319
S'attributes'
p3320
I01
I0
I00
Ntp3321
a(S'TIntList'
p3322
S'noOfValues'
p3323
S'no_of_values'
p3324
S'number of values for each attribute'
p3325
I01
I0
I00
Ntp3326
a(S'TEFMDataDescription'
p3327
S'dataDescription'
p3328
S'data_description'
p3329
S'data description'
p3330
I0
I0
I00
Ntp3331
ag763
ag767
ag772
ag777
asg29
(dp3332
sbsS'TP2NN'
p3333
(i__main__
ClassDefinition
p3334
(dp3335
g4
I1
sg5
I0
sg6
g3333
sg7
S'TPNN'
p3336
sg9
I00
sg10
(lp3337
sg12
(lp3338
(S'int'
p3339
S'dimensions'
p3340
g3340
S'the number of dimensions'
p3341
I01
I0
I01
Ntp3342
a(S'TFloatList'
p3343
S'offsets'
p3344
g3344
S'offsets to subtract from the attribute values'
p3345
I0
I0
I00
Ntp3346
a(S'TFloatList'
p3347
S'normalizers'
p3348
g3348
S'number to divide the values by'
p3349
I0
I0
I00
Ntp3350
a(S'TFloatList'
p3351
S'averages'
p3352
g3352
S'numbers to use instead of the missing'
p3353
I0
I0
I00
Ntp3354
a(S'bool'
p3355
S'normalizeExamples'
p3356
S'normalize_examples'
p3357
S'if true, attribute values are divided to sum up to 1'
p3358
I0
I0
I01
Ntp3359
a(S'int'
p3360
S'nExamples'
p3361
S'n_examples'
p3362
S'the number of examples'
p3363
I01
I0
I01
Ntp3364
a(S'int'
p3365
S'law'
p3366
g3366
S'law'
p3367
I0
I0
I01
Ntp3368
ag882
ag772
ag777
asg29
(dp3369
sbsS'TImputerConstruct_Python'
p3370
(i__main__
ClassDefinition
p3371
(dp3372
g4
I1
sg5
I0
sg6
g3370
sg7
S'TImputerConstructor'
p3373
sg9
I00
sg10
(lp3374
sg12
(lp3375
g1467
asg29
(dp3376
sbsS'TSubsetsGenerator_withRestrictions'
p3377
(i__main__
ClassDefinition
p3378
(dp3379
g4
I1
sg5
I0
sg6
g3377
sg7
S'TSubsetsGenerator'
p3380
sg9
I00
sg10
(lp3381
sg12
(lp3382
(S'TSubsetsGenerator'
p3383
S'subGenerator'
p3384
S'sub_generator'
p3385
S'subset generator'
p3386
I0
I0
I00
Ntp3387
a(S'TVarList'
p3388
S'required'
p3389
g3389
S'set of required attributes'
p3390
I0
I0
I00
Ntp3391
a(S'TVarList'
p3392
S'forbidden'
p3393
g3393
S'set of forbidden attributes'
p3394
I0
I0
I00
Ntp3395
a(S'TVarListList'
p3396
S'forbiddenSubSubsets'
p3397
S'forbidden_sub_subsets'
p3398
S'set of forbidden subsets (attributes that must not occur together)'
p3399
I0
I0
I00
Ntp3400
ag2312
asg29
(dp3401
sbsS'TRuleBeamFilter_Python'
p3402
(i__main__
ClassDefinition
p3403
(dp3404
g4
I1
sg5
I0
sg6
g3402
sg7
S'TRuleBeamFilter'
p3405
sg9
I00
sg10
(lp3406
sg12
(lp3407
sg29
(dp3408
sbsS'TTreeExampleSplitter'
p3409
(i__main__
ClassDefinition
p3410
(dp3411
g4
I1
sg5
I0
sg6
g3409
sg7
S'TOrange'
p3412
sg9
I01
sg10
(lp3413
sg12
(lp3414
sg29
(dp3415
sbsS'TSVMClassifier'
p3416
(i__main__
ClassDefinition
p3417
(dp3418
g4
I1
sg5
I0
sg6
g3416
sg7
S'TClassifierFD'
p3419
sg9
I00
sg10
(lp3420
sg12
(lp3421
g922
ag926
ag930
ag935
ag940
ag945
ag949
ag954
ag959
ag964
ag882
ag772
ag777
asg29
(dp3422
sbsS'TTreeLearner'
p3423
(i__main__
ClassDefinition
p3424
(dp3425
g4
I1
sg5
I0
sg6
g3423
sg7
S'TLearner'
p3426
sg9
I00
sg10
(lp3427
sg12
(lp3428
(S'TTreeSplitConstructor'
p3429
S'split'
p3430
g3430
S'split criterion'
p3431
I0
I0
I00
Ntp3432
a(S'TTreeStopCriteria'
p3433
S'stop'
p3434
g3434
S'stop criterion'
p3435
I0
I0
I00
Ntp3436
a(S'TComputeDomainContingency'
p3437
S'contingencyComputer'
p3438
S'contingency_computer'
p3439
S'computes contingency matrix'
p3440
I0
I0
I00
Ntp3441
a(S'TLearner'
p3442
S'nodeLearner'
p3443
S'node_learner'
p3444
S'node learner'
p3445
I0
I0
I00
Ntp3446
a(S'TTreeExampleSplitter'
p3447
S'exampleSplitter'
p3448
S'example_splitter'
p3449
S'splits examples to branches'
p3450
I0
I0
I00
Ntp3451
a(S'int'
p3452
S'maxDepth'
p3453
S'max_depth'
p3454
S'maximal tree depth (0 = root only, -1 = no limit)'
p3455
I0
I0
I01
Ntp3456
a(S'bool'
p3457
S'storeExamples'
p3458
S'store_examples'
p3459
S'if true (default: false), learning examples in nodes are stored'
p3460
I0
I0
I01
Ntp3461
a(S'bool'
p3462
S'storeDistributions'
p3463
S'store_distributions'
p3464
S'if true (default), class distributions of learning examples in nodes are stored'
p3465
I0
I0
I01
Ntp3466
a(S'bool'
p3467
S'storeContingencies'
p3468
S'store_contingencies'
p3469
S'if true (default), contingency matrices for examples are stored'
p3470
I0
I0
I01
Ntp3471
a(S'bool'
p3472
S'storeNodeClassifier'
p3473
S'store_node_classifier'
p3474
S'if true (default), the internal nodes have classifiers; needed for pruning'
p3475
I0
I0
I01
Ntp3476
a(S'TTreeDescender'
p3477
S'descender'
p3478
g3478
S'descends down the tree'
p3479
I0
I0
I00
Ntp3480
ag47
asg29
(dp3481
sbsS'TPreprocessor_shuffle'
p3482
(i__main__
ClassDefinition
p3483
(dp3484
g4
I1
sg5
I0
sg6
g3482
sg7
S'TPreprocessor'
p3485
sg9
I00
sg10
(lp3486
sg12
(lp3487
(S'TVarList'
p3488
S'attributes'
p3489
g3489
S'tells which attributes to shuffle'
p3490
I0
I0
I00
Ntp3491
a(S'TRandomGenerator'
p3492
S'randomGenerator'
p3493
S'random_generator'
p3494
S'random number generator'
p3495
I0
I0
I00
Ntp3496
asg29
(dp3497
sbsS'TLearner'
p3498
(i__main__
ClassDefinition
p3499
(dp3500
g4
I1
sg5
I0
sg6
g3498
sg7
S'TOrange'
p3501
sg9
I00
sg10
(lp3502
sg12
(lp3503
g47
asg29
(dp3504
sbsS'TLookupLearner'
p3505
(i__main__
ClassDefinition
p3506
(dp3507
g4
I1
sg5
I0
sg6
g3505
sg7
S'TLearner'
p3508
sg9
I00
sg10
(lp3509
sg12
(lp3510
(S'TLearner'
p3511
S'learnerForUnknown'
p3512
S'learner_for_unknown'
p3513
S'a learner for classifying cases not found in the table'
p3514
I0
I0
I00
Ntp3515
a(S'bool'
p3516
S'allowFastLookups'
p3517
S'allow_fast_lookups'
p3518
S'if true, it constructs LookupClassifiers for <=3 attributes'
p3519
I0
I0
I01
Ntp3520
a(S'int'
p3521
S'unknownsHandling'
p3522
S'unknowns_handling'
p3523
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p3524
I0
I0
I01
Ntp3525
ag47
asg29
(dp3526
sbsS'TRuleClassifier_logit'
p3527
(i__main__
ClassDefinition
p3528
(dp3529
g4
I1
sg5
I0
sg6
g3527
sg7
S'TRuleClassifier'
p3530
sg9
I00
sg10
(lp3531
sg12
(lp3532
(S'TDistribution'
p3533
S'prior'
p3534
g3534
S'prior distribution'
p3535
I0
I0
I00
Ntp3536
a(S'TDomain'
p3537
S'domain'
p3538
g3538
S'Domain'
p3539
I0
I0
I00
Ntp3540
a(S'TFloatList'
p3541
S'ruleBetas'
p3542
S'rule_betas'
p3543
S'Rule betas'
p3544
I0
I0
I00
Ntp3545
a(S'float'
p3546
S'minStep'
p3547
S'min_step'
p3548
S'minimal step value'
p3549
I0
I0
I01
Ntp3550
a(S'float'
p3551
S'minSignificance'
p3552
S'min_significance'
p3553
S'minimum requested significance for betas. '
p3554
I0
I0
I01
Ntp3555
a(S'float'
p3556
S'minBeta'
p3557
S'min_beta'
p3558
S'minimum beta by rule to be included in the model. '
p3559
I0
I0
I01
Ntp3560
a(S'TClassifier'
p3561
S'priorClassifier'
p3562
S'prior_classifier'
p3563
S'prior classifier used if provided'
p3564
I0
I0
I00
Ntp3565
a(S'TRuleList'
p3566
S'prefixRules'
p3567
S'prefix_rules'
p3568
S'rules that trigger before logit sum.'
p3569
I0
I0
I00
Ntp3570
ag1948
ag1951
ag1955
ag772
ag777
asg29
(dp3571
sbsS'TRuleCovererAndRemover'
p3572
(i__main__
ClassDefinition
p3573
(dp3574
g4
I1
sg5
I0
sg6
g3572
sg7
S'TOrange'
p3575
sg9
I01
sg10
(lp3576
sg12
(lp3577
sg29
(dp3578
sbsS'TPythonValue'
p3579
(i__main__
ClassDefinition
p3580
(dp3581
g4
I1
sg5
I0
sg6
g3579
sg7
S'TSomeValue'
p3582
sg9
I00
sg10
(lp3583
sg12
(lp3584
sg29
(dp3585
sbsS'TDistributionAssessor_Kramer'
p3586
(i__main__
ClassDefinition
p3587
(dp3588
g4
I1
sg5
I0
sg6
g3586
sg7
S'TDistributionAssessor'
p3589
sg9
I00
sg10
(lp3590
sg12
(lp3591
sg29
(dp3592
sbsS'TIM'
p3593
(i__main__
ClassDefinition
p3594
(dp3595
g4
I1
sg5
I0
sg6
g3593
sg7
S'TOrange'
p3596
sg9
I00
sg10
(lp3597
sg12
(lp3598
(S'int'
p3599
S'varType'
p3600
S'var_type'
p3601
S' class variable type'
p3602
I0
I0
I01
S'Variable_Type'
p3603
tp3604
a(S'TExampleTable'
p3605
S'rowExamples'
p3606
S'row_examples'
p3607
S'examples with free attributes for each row'
p3608
I0
I0
I00
Ntp3609
asg29
(dp3610
sbsS'TSymMatrix'
p3611
(i__main__
ClassDefinition
p3612
(dp3613
g4
I1
sg5
I0
sg6
g3611
sg7
S'TOrange'
p3614
sg9
I00
sg10
(lp3615
sg12
(lp3616
(S'int'
p3617
S'dim'
p3618
g3618
S'matrix dimension'
p3619
I01
I0
I01
Ntp3620
a(S'int'
p3621
S'matrixType'
p3622
S'matrix_type'
p3623
S' 0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3624
I0
I0
I01
S'SymMatrix_Shape'
p3625
tp3626
asg29
(dp3627
S'Shape'
p3628
(lp3629
(S'Lower'
p3630
I0
tp3631
a(S'Upper'
p3632
I1
tp3633
a(S'Symmetric'
p3634
I2
tp3635
a(S'LowerFilled'
p3636
I3
tp3637
a(S'UpperFilled'
p3638
I4
tp3639
assbsS'TMeasureAttributeFromProbabilities'
p3640
(i__main__
ClassDefinition
p3641
(dp3642
g4
I1
sg5
I0
sg6
g3640
sg7
S'TMeasureAttribute'
p3643
sg9
I01
sg10
(lp3644
sg12
(lp3645
g422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp3646
sbsS'TProbabilityEstimatorConstructor_relative'
p3647
(i__main__
ClassDefinition
p3648
(dp3649
g4
I1
sg5
I0
sg6
g3647
sg7
S'TProbabilityEstimatorConstructor'
p3650
sg9
I00
sg10
(lp3651
sg12
(lp3652
sg29
(dp3653
sbsS'TClassifierByLookupTable3'
p3654
(i__main__
ClassDefinition
p3655
(dp3656
g4
I1
sg5
I0
sg6
g3654
sg7
S'TClassifierByLookupTable'
p3657
sg9
I00
sg10
(lp3658
sg12
(lp3659
(S'TVariable'
p3660
S'variable1'
p3661
g3661
S'the first attribute used for classification'
p3662
I01
I0
I00
Ntp3663
a(S'TVariable'
p3664
S'variable2'
p3665
g3665
S'the second attribute used for classification'
p3666
I01
I0
I00
Ntp3667
a(S'TVariable'
p3668
S'variable3'
p3669
g3669
S'the third attribute used for classification'
p3670
I01
I0
I00
Ntp3671
a(S'int'
p3672
S'noOfValues1'
p3673
S'no_of_values1'
p3674
S'number of values of the first attribute'
p3675
I01
I0
I01
Ntp3676
a(S'int'
p3677
S'noOfValues2'
p3678
S'no_of_values2'
p3679
S'number of values of the second attribute'
p3680
I01
I0
I01
Ntp3681
a(S'int'
p3682
S'noOfValues3'
p3683
S'no_of_values3'
p3684
S'number of values of the third attribute'
p3685
I01
I0
I01
Ntp3686
a(S'TEFMDataDescription'
p3687
S'dataDescription'
p3688
S'data_description'
p3689
S'data description'
p3690
I0
I0
I00
Ntp3691
ag763
ag767
ag772
ag777
asg29
(dp3692
sbsS'TImputerConstructor_maximal'
p3693
(i__main__
ClassDefinition
p3694
(dp3695
g4
I1
sg5
I0
sg6
g3693
sg7
S'TImputerConstructor'
p3696
sg9
I00
sg10
(lp3697
sg12
(lp3698
g1467
asg29
(dp3699
sbsS'TClassifierByLookupTable1'
p3700
(i__main__
ClassDefinition
p3701
(dp3702
g4
I1
sg5
I0
sg6
g3700
sg7
S'TClassifierByLookupTable'
p3703
sg9
I00
sg10
(lp3704
sg12
(lp3705
(S'TVariable'
p3706
S'variable1'
p3707
(g3707
S'variable'
p3708
tp3709
S' attribute used for classification'
p3710
I01
I0
I00
Ntp3711
ag763
ag767
ag772
ag777
asg29
(dp3712
sbsS'TValueFilter_string'
p3713
(i__main__
ClassDefinition
p3714
(dp3715
g4
I1
sg5
I0
sg6
g3713
sg7
S'TValueFilter'
p3716
sg9
I00
sg10
(lp3717
sg12
(lp3718
(S'string'
p3719
S'min'
p3720
(g3720
S'ref'
p3721
tp3722
S' reference value (lower bound for interval operators)'
p3723
I0
I0
I01
Ntp3724
a(S'string'
p3725
S'max'
p3726
g3726
S'upper bound for interval operators'
p3727
I0
I0
I01
Ntp3728
a(S'int'
p3729
S'oper'
p3730
g3730
S' operator'
p3731
I0
I0
I01
S'ValueFilter_Operator'
p3732
tp3733
a(S'bool'
p3734
S'caseSensitive'
p3735
S'case_sensitive'
p3736
S'if true (default), the operator is case sensitive'
p3737
I0
I0
I01
Ntp3738
ag2738
ag2743
asg29
(dp3739
sbsS'TGraphAsMatrix'
p3740
(i__main__
ClassDefinition
p3741
(dp3742
g4
I1
sg5
I0
sg6
g3740
sg7
S'TGraph'
p3743
sg9
I00
sg10
(lp3744
sg12
(lp3745
g663
ag668
ag672
asg29
(dp3746
sbsS'TFilter_hasSpecial'
p3747
(i__main__
ClassDefinition
p3748
(dp3749
g4
I1
sg5
I0
sg6
g3747
sg7
S'TFilter'
p3750
sg9
I00
sg10
(lp3751
sg12
(lp3752
g235
ag239
asg29
(dp3753
sbsS'TIMByRelief'
p3754
(i__main__
ClassDefinition
p3755
(dp3756
g4
I1
sg5
I0
sg6
g3754
sg7
S'TIMConstructor'
p3757
sg9
I00
sg10
(lp3758
sg12
(lp3759
(S'TExamplesDistance_Relief'
p3760
S'distance'
p3761
g3761
S'distance measure'
p3762
I0
I0
I00
Ntp3763
a(S'float'
p3764
g980
g980
S'number of neighbours'
p3765
I0
I0
I01
Ntp3766
a(S'float'
p3767
g984
g984
S'number of reference examples'
p3768
I0
I0
I01
Ntp3769
a(S'float'
p3770
S'kFromColumns'
p3771
S'k_from_columns'
p3772
S'if positive, number of neighbours is #columns*kFromColumns'
p3773
I0
I0
I01
Ntp3774
a(S'bool'
p3775
S'ignoreSameExample'
p3776
S'ignore_same_example'
p3777
S'does not put reference example into M'
p3778
I0
I0
I01
Ntp3779
a(S'bool'
p3780
S'convertToBinary'
p3781
S'convert_to_binary'
p3782
S'convert to binary class (hit-miss)'
p3783
I0
I0
I01
Ntp3784
a(S'bool'
p3785
S'correctClassFirst'
p3786
S'correct_class_first'
p3787
S'puts the correct class proportion to the first place'
p3788
I0
I0
I01
Ntp3789
a(S'bool'
p3790
S'allExamples'
p3791
S'all_examples'
p3792
S'uses all examples for reference examples'
p3793
I0
I0
I01
Ntp3794
a(S'bool'
p3795
S'allSameNeighbours'
p3796
S'all_same_neighbours'
p3797
S'uses all the examples same to the reference as neighbours'
p3798
I0
I0
I01
Ntp3799
ag2579
asg29
(dp3800
sbsS'TPreprocessor_addGaussianNoise'
p3801
(i__main__
ClassDefinition
p3802
(dp3803
g4
I1
sg5
I0
sg6
g3801
sg7
S'TPreprocessor'
p3804
sg9
I00
sg10
(lp3805
sg12
(lp3806
(S'TVariableFloatMap'
p3807
S'deviations'
p3808
g3808
S'deviations individual attribute values'
p3809
I0
I0
I00
Ntp3810
a(S'float'
p3811
S'defaultDeviation'
p3812
S'default_deviation'
p3813
S'default deviation'
p3814
I0
I0
I01
Ntp3815
a(S'TRandomGenerator'
p3816
S'randomGenerator'
p3817
S'random_generator'
p3818
S'random number generator'
p3819
I0
I0
I00
Ntp3820
asg29
(dp3821
sbsS'TRuleStoppingCriteria_NegativeDistribution'
p3822
(i__main__
ClassDefinition
p3823
(dp3824
g4
I1
sg5
I0
sg6
g3822
sg7
S'TRuleStoppingCriteria'
p3825
sg9
I00
sg10
(lp3826
sg12
(lp3827
sg29
(dp3828
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p3829
(i__main__
ClassDefinition
p3830
(dp3831
g4
I1
sg5
I0
sg6
g3829
sg7
S'TTreeSplitConstructor_Measure'
p3832
sg9
I00
sg10
(lp3833
sg12
(lp3834
g2340
ag2345
ag1677
asg29
(dp3835
sbsS'TMeasureAttribute_relief'
p3836
(i__main__
ClassDefinition
p3837
(dp3838
g4
I1
sg5
I0
sg6
g3836
sg7
S'TMeasureAttribute'
p3839
sg9
I00
sg10
(lp3840
sg12
(lp3841
(S'float'
p3842
g980
g980
S'number of neighbours'
p3843
I0
I0
I01
Ntp3844
a(S'float'
p3845
g984
g984
S'number of reference examples'
p3846
I0
I0
I01
Ntp3847
a(S'bool'
p3848
S'checkCachedData'
p3849
S'check_cached_data'
p3850
S'tells whether to check the checksum of the data before reusing the cached neighbours'
p3851
I0
I0
I01
Ntp3852
ag438
ag443
ag448
ag453
asg29
(dp3853
sbsS'TSomeValue'
p3854
(i__main__
ClassDefinition
p3855
(dp3856
g4
I1
sg5
I0
sg6
g3854
sg7
S'TOrange'
p3857
sg9
I01
sg10
(lp3858
sg12
(lp3859
sg29
(dp3860
sbsS'TDiscDistribution'
p3861
(i__main__
ClassDefinition
p3862
(dp3863
g4
I1
sg5
I0
sg6
g3861
sg7
S'TDistribution'
p3864
sg9
I00
sg10
(lp3865
sg12
(lp3866
(S'TFloatList'
p3867
S'variances'
p3868
g3868
S'variances'
p3869
I0
I0
I00
Ntp3870
ag2150
ag2154
ag2158
ag2162
ag2166
ag2171
ag2176
ag2181
asg29
(dp3871
sbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p3872
(i__main__
ClassDefinition
p3873
(dp3874
g4
I1
sg5
I0
sg6
g3872
sg7
g2657
sg9
I0
sg10
(lp3875
sg12
(lp3876
sg29
(dp3877
sbsS'THierarchicalClusterOrdering'
p3878
(i__main__
ClassDefinition
p3879
(dp3880
g4
I1
sg5
I0
sg6
g3878
sg7
S'TOrange'
p3881
sg9
I00
sg10
(lp3882
sg12
(lp3883
(S'TProgressCallback'
p3884
S'progress_callback'
p3885
g3885
S'progress callback function'
p3886
I0
I0
I00
Ntp3887
asg29
(dp3888
sbsS'TLogitClassifierState'
p3889
(i__main__
ClassDefinition
p3890
(dp3891
g4
I1
sg5
I0
sg6
g3889
sg7
S'TOrange'
p3892
sg9
I00
sg10
(lp3893
sg12
(lp3894
sg29
(dp3895
sbsS'TColorIG'
p3896
(i__main__
ClassDefinition
p3897
(dp3898
g4
I1
sg5
I0
sg6
g3896
sg7
S'TOrange'
p3899
sg9
I01
sg10
(lp3900
sg12
(lp3901
sg29
(dp3902
sbsS'TSimpleTreeLearner'
p3903
(i__main__
ClassDefinition
p3904
(dp3905
g4
I1
sg5
I0
sg6
g3903
sg7
S'TLearner'
p3906
sg9
I00
sg10
(lp3907
sg12
(lp3908
(S'float'
p3909
S'maxMajority'
p3910
S'max_majority'
p3911
g1285
I0
I0
I01
Ntp3912
a(S'int'
p3913
S'minInstances'
p3914
S'min_instances'
p3915
g1285
I0
I0
I01
Ntp3916
a(S'int'
p3917
S'maxDepth'
p3918
S'max_depth'
p3919
g1285
I0
I0
I01
Ntp3920
a(S'float'
p3921
S'skipProb'
p3922
S'skip_prob'
p3923
g1285
I0
I0
I01
Ntp3924
a(S'TRandomGenerator'
p3925
S'randomGenerator'
p3926
S'random_generator'
p3927
g1285
I0
I0
I00
Ntp3928
ag47
asg29
(dp3929
sbsS'TFilter_disjunction'
p3930
(i__main__
ClassDefinition
p3931
(dp3932
g4
I1
sg5
I0
sg6
g3930
sg7
S'TFilter'
p3933
sg9
I00
sg10
(lp3934
sg12
(lp3935
(S'TFilterList'
p3936
S'filters'
p3937
g3937
S'a list of filters;'
p3938
I0
I0
I00
Ntp3939
ag235
ag239
asg29
(dp3940
sbsS'TColumnAssessor'
p3941
(i__main__
ClassDefinition
p3942
(dp3943
g4
I1
sg5
I0
sg6
g3941
sg7
S'TOrange'
p3944
sg9
I01
sg10
(lp3945
sg12
(lp3946
sg29
(dp3947
sbsS'TComputeDomainContingency_Preprocessor'
p3948
(i__main__
ClassDefinition
p3949
(dp3950
g4
I1
sg5
I0
sg6
g3948
sg7
S'TComputeDomainContingency'
p3951
sg9
I00
sg10
(lp3952
sg12
(lp3953
(S'TPreprocessor'
p3954
S'preprocessor'
p3955
g3955
S'preprocesses the exmaples (see the manual for restrictions!)'
p3956
I0
I0
I00
Ntp3957
a(S'bool'
p3958
S'resultInOriginalDomain'
p3959
S'result_in_original_domain'
p3960
S'tells whether the resulting DomainContingency should consist of original attributes'
p3961
I0
I0
I01
Ntp3962
ag28
asg29
(dp3963
sbsS'TMeasureAttribute_MSE'
p3964
(i__main__
ClassDefinition
p3965
(dp3966
g4
I1
sg5
I0
sg6
g3964
sg7
S'TMeasureAttribute'
p3967
sg9
I00
sg10
(lp3968
sg12
(lp3969
(S'float'
p3970
g984
g984
S'm for m-estimate'
p3971
I0
I0
I01
Ntp3972
a(S'int'
p3973
S'unknownsTreatment'
p3974
S'unknowns_treatment'
p3975
S' treatment of unknown values'
p3976
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p3977
tp3978
ag438
ag443
ag448
ag453
asg29
(dp3979
sbsS'TNormalizeContinuous'
p3980
(i__main__
ClassDefinition
p3981
(dp3982
g4
I1
sg5
I0
sg6
g3980
sg7
S'TTransformValue'
p3983
sg9
I00
sg10
(lp3984
sg12
(lp3985
(S'float'
p3986
S'average'
p3987
g3987
S'the average value'
p3988
I0
I0
I01
Ntp3989
a(S'float'
p3990
S'span'
p3991
g3991
S'the value span'
p3992
I0
I0
I01
Ntp3993
ag294
asg29
(dp3994
sbsS'TPNN'
p3995
(i__main__
ClassDefinition
p3996
(dp3997
g4
I1
sg5
I0
sg6
g3995
sg7
S'TClassifierFD'
p3998
sg9
I00
sg10
(lp3999
sg12
(lp4000
g3342
ag3346
ag3350
ag3354
ag3359
ag3364
ag3368
ag882
ag772
ag777
asg29
(dp4001
sbsS'TBiModalDiscretizer'
p4002
(i__main__
ClassDefinition
p4003
(dp4004
g4
I1
sg5
I0
sg6
g4002
sg7
S'TDiscretizer'
p4005
sg9
I00
sg10
(lp4006
sg12
(lp4007
(S'float'
p4008
S'low'
p4009
g4009
S'low threshold'
p4010
I0
I0
I01
Ntp4011
a(S'float'
p4012
S'high'
p4013
g4013
S'high threshold'
p4014
I0
I0
I01
Ntp4015
ag294
asg29
(dp4016
sbsS'TProbabilityEstimatorConstructor_Laplace'
p4017
(i__main__
ClassDefinition
p4018
(dp4019
g4
I1
sg5
I0
sg6
g4017
sg7
S'TProbabilityEstimatorConstructor'
p4020
sg9
I00
sg10
(lp4021
sg12
(lp4022
(S'float'
p4023
S'l'
p4024
g4024
S'number of examples added to each class (default: 1)'
p4025
I0
I0
I01
Ntp4026
a(S'bool'
p4027
S'renormalize'
p4028
g4028
S'computes the estimate on the original (not the normalized) distribution'
p4029
I0
I0
I01
Ntp4030
asg29
(dp4031
sbsS'TEnumVariable'
p4032
(i__main__
ClassDefinition
p4033
(dp4034
g4
I1
sg5
I0
sg6
g4032
sg7
S'TVariable'
p4035
sg9
I00
sg10
(lp4036
sg12
(lp4037
(S'TStringList'
p4038
S'values'
p4039
g4039
S"attribute's values"
p4040
I0
I0
I00
Ntp4041
a(S'int'
p4042
S'baseValue'
p4043
S'base_value'
p4044
S'the index of the base value'
p4045
I0
I0
I01
Ntp4046
ag623
ag627
ag631
ag636
ag641
ag646
ag651
asg29
(dp4047
sbsS'TExamplesDistanceConstructor_Manhattan'
p4048
(i__main__
ClassDefinition
p4049
(dp4050
g4
I1
sg5
I0
sg6
g4048
sg7
S'TExamplesDistanceConstructor_Normalized'
p4051
sg9
I00
sg10
(lp4052
sg12
(lp4053
g1147
ag1152
ag544
asg29
(dp4054
sbsS'TC45Learner'
p4055
(i__main__
ClassDefinition
p4056
(dp4057
g4
I1
sg5
I0
sg6
g4055
sg7
S'TLearner'
p4058
sg9
I00
sg10
(lp4059
sg12
(lp4060
(S'bool'
p4061
S'gainRatio'
p4062
(g4062
S'g'
p4063
tp4064
S' use gain ratio (instead of information gain)'
p4065
I0
I0
I01
Ntp4066
a(S'bool'
p4067
S'subset'
p4068
(g4068
S's'
p4069
tp4070
S' use subsetting'
p4071
I0
I0
I01
Ntp4072
a(S'bool'
p4073
S'batch'
p4074
(g4074
S'b'
p4075
tp4076
S' batch'
p4077
I0
I0
I01
Ntp4078
a(S'bool'
p4079
S'probThresh'
p4080
(g4080
g1758
tp4081
S' probability threshold'
p4082
I0
I0
I01
Ntp4083
a(S'int'
p4084
S'minObjs'
p4085
(g4085
g984
tp4086
S' minimal number of objects (examples) in leaves'
p4087
I0
I0
I01
Ntp4088
a(S'int'
p4089
S'window'
p4090
(g4090
S'w'
p4091
tp4092
S' window'
p4093
I0
I0
I01
Ntp4094
a(S'int'
p4095
S'increment'
p4096
(g4096
S'i'
p4097
tp4098
S' increment'
p4099
I0
I0
I01
Ntp4100
a(S'float'
p4101
S'cf'
p4102
(g4102
S'c'
p4103
tp4104
S' cf'
p4105
I0
I0
I01
Ntp4106
a(S'int'
p4107
S'trials'
p4108
(g4108
g1821
tp4109
S' trials'
p4110
I0
I0
I01
Ntp4111
a(S'bool'
p4112
S'prune'
p4113
g4113
S'return pruned tree'
p4114
I0
I0
I01
Ntp4115
a(S'bool'
p4116
S'convertToOrange'
p4117
S'convert_to_orange'
p4118
S'return TreeClassifier instead of C45TreeClassifier'
p4119
I0
I0
I01
Ntp4120
a(S'bool'
p4121
S'storeExamples'
p4122
S'store_examples'
p4123
S'stores examples when (if) converting to TreeClassifier'
p4124
I0
I0
I01
Ntp4125
a(S'bool'
p4126
S'storeContingencies'
p4127
S'store_contingencies'
p4128
S'stores contingencies when (if) converting to TreeClassifier'
p4129
I0
I0
I01
Ntp4130
ag47
asg29
(dp4131
sbsS'TExamplesDistance_Python'
p4132
(i__main__
ClassDefinition
p4133
(dp4134
g4
I1
sg5
I0
sg6
g4132
sg7
S'TExamplesDistance'
p4135
sg9
I00
sg10
(lp4136
sg12
(lp4137
sg29
(dp4138
sbsS'TTreeStopCriteria'
p4139
(i__main__
ClassDefinition
p4140
(dp4141
g4
I1
sg5
I0
sg6
g4139
sg7
S'TOrange'
p4142
sg9
I00
sg10
(lp4143
sg12
(lp4144
sg29
(dp4145
sbsS'TCostMatrix'
p4146
(i__main__
ClassDefinition
p4147
(dp4148
g4
I1
sg5
I0
sg6
g4146
sg7
S'TOrange'
p4149
sg9
I00
sg10
(lp4150
sg12
(lp4151
(S'TVariable'
p4152
S'classVar'
p4153
S'class_var'
p4154
S'attribute to which the matrix applies'
p4155
I0
I0
I00
Ntp4156
a(S'int'
p4157
S'dimension'
p4158
g4158
S'dimension (should equal classVar.noOfValues())'
p4159
I01
I0
I01
Ntp4160
asg29
(dp4161
sbsS'TMissValuesGenerator'
p4162
(i__main__
ClassDefinition
p4163
(dp4164
g4
I1
sg5
I0
sg6
g4162
sg7
S'TChangeExampleGenerator'
p4165
sg9
I00
sg10
(lp4166
sg12
(lp4167
(S'TIntFloatList'
p4168
S'replaceProbabilities'
p4169
S'replace_probabilities'
p4170
S"probabilities for replacing attributes' values"
p4171
I0
I0
I00
Ntp4172
a(S'TRandomGenerator'
p4173
S'randomGenerator'
p4174
S'random_generator'
p4175
S'random generator'
p4176
I0
I0
I00
Ntp4177
ag97
ag101
asg29
(dp4178
sbsS'TRuleValidator_Python'
p4179
(i__main__
ClassDefinition
p4180
(dp4181
g4
I1
sg5
I0
sg6
g4179
sg7
S'TRuleValidator'
p4182
sg9
I00
sg10
(lp4183
sg12
(lp4184
sg29
(dp4185
sbsS'TSubsetsGenerator_constSize_iterator'
p4186
(i__main__
ClassDefinition
p4187
(dp4188
g4
I1
sg5
I0
sg6
g4186
sg7
S'TSubsetsGenerator_iterator'
p4189
sg9
I00
sg10
(lp4190
sg12
(lp4191
(S'bool'
p4192
S'moreToCome'
p4193
S'more_to_come'
p4194
g1285
I01
I0
I01
Ntp4195
ag168
asg29
(dp4196
sbsS'TRuleClassifier_firstRule'
p4197
(i__main__
ClassDefinition
p4198
(dp4199
g4
I1
sg5
I0
sg6
g4197
sg7
S'TRuleClassifier'
p4200
sg9
I00
sg10
(lp4201
sg12
(lp4202
(S'TDistribution'
p4203
S'prior'
p4204
g4204
S'prior distribution'
p4205
I0
I0
I00
Ntp4206
ag1948
ag1951
ag1955
ag772
ag777
asg29
(dp4207
sbsS'TAssociationLearner'
p4208
(i__main__
ClassDefinition
p4209
(dp4210
g4
I1
sg5
I0
sg6
g4208
sg7
S'TLearner'
p4211
sg9
I00
sg10
(lp4212
sg12
(lp4213
(S'float'
p4214
S'confidence'
p4215
g4215
S'required confidence'
p4216
I0
I0
I01
Ntp4217
a(S'float'
p4218
S'support'
p4219
g4219
S'required support'
p4220
I0
I0
I01
Ntp4221
a(S'int'
p4222
S'voteWeight'
p4223
S'vote_weight'
p4224
S'vote weight (s=support, c=confidence, p=product)'
p4225
I0
I0
I01
Ntp4226
a(S'int'
p4227
S'maxItemSets'
p4228
S'max_item_sets'
p4229
S'maximal number of itemsets (increase if you want)'
p4230
I0
I0
I01
Ntp4231
ag47
asg29
(dp4232
sbsS'TDistributionAssessor'
p4233
(i__main__
ClassDefinition
p4234
(dp4235
g4
I1
sg5
I0
sg6
g4233
sg7
S'TOrange'
p4236
sg9
I01
sg10
(lp4237
sg12
(lp4238
sg29
(dp4239
sbsS'TClassifierRandomGenerator'
p4240
(i__main__
ClassDefinition
p4241
(dp4242
g4
I1
sg5
I0
sg6
g4240
sg7
S'TExampleGenerator'
p4243
sg9
I00
sg10
(lp4244
sg12
(lp4245
(S'TClassifier'
p4246
S'classify'
p4247
g4247
S'classifier'
p4248
I0
I0
I00
Ntp4249
a(S'int'
p4250
S'noOfEx'
p4251
S'no_of_ex'
p4252
S'number of examples'
p4253
I0
I0
I01
Ntp4254
ag97
ag101
asg29
(dp4255
sbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p4256
(i__main__
ClassDefinition
p4257
(dp4258
g4
I1
sg5
I0
sg6
g4256
sg7
S'TConditionalProbabilityEstimatorConstructor'
p4259
sg9
I00
sg10
(lp4260
sg12
(lp4261
(S'TProbabilityEstimatorConstructor'
p4262
S'estimatorConstructor'
p4263
S'estimator_constructor'
p4264
S'ProbabilityEstimator to be used '
p4265
I0
I0
I00
Ntp4266
asg29
(dp4267
sbsS'TTreeSplitConstructor'
p4268
(i__main__
ClassDefinition
p4269
(dp4270
g4
I1
sg5
I0
sg6
g4268
sg7
S'TOrange'
p4271
sg9
I01
sg10
(lp4272
sg12
(lp4273
g1677
asg29
(dp4274
sbsS'TSubsetsGenerator_constSize'
p4275
(i__main__
ClassDefinition
p4276
(dp4277
g4
I1
sg5
I0
sg6
g4275
sg7
S'TSubsetsGenerator'
p4278
sg9
I00
sg10
(lp4279
sg12
(lp4280
(S'int'
p4281
S'B'
p4282
g4282
S'subset size'
p4283
I0
I0
I01
Ntp4284
ag2312
asg29
(dp4285
sbsS'TColorIG_MCF'
p4286
(i__main__
ClassDefinition
p4287
(dp4288
g4
I1
sg5
I0
sg6
g4286
sg7
S'TColorIG'
p4289
sg9
I00
sg10
(lp4290
sg12
(lp4291
sg29
(dp4292
sbsS'TBasicAttrStat'
p4293
(i__main__
ClassDefinition
p4294
(dp4295
g4
I1
sg5
I0
sg6
g4293
sg7
S'TOrange'
p4296
sg9
I00
sg10
(lp4297
sg12
(lp4298
(S'float'
p4299
S'sum'
p4300
g4300
S'sum of values'
p4301
I0
I0
I01
Ntp4302
a(S'float'
p4303
S'sum2'
p4304
g4304
S'sum of squares of values'
p4305
I0
I0
I01
Ntp4306
a(S'float'
p4307
g361
g361
S'number of examples for which the attribute is defined'
p4308
I0
I0
I01
Ntp4309
a(S'float'
p4310
S'min'
p4311
g4311
S'the lowest value of the attribute'
p4312
I0
I0
I01
Ntp4313
a(S'float'
p4314
S'max'
p4315
g4315
S'the highest value of the attribute'
p4316
I0
I0
I01
Ntp4317
a(S'float'
p4318
S'avg'
p4319
g4319
S'the average value of the attribute'
p4320
I0
I0
I01
Ntp4321
a(S'float'
p4322
S'dev'
p4323
g4323
S'the deviation of the value of the attribute'
p4324
I0
I0
I01
Ntp4325
a(S'TVariable'
p4326
S'variable'
p4327
g4327
S'the attribute to which the data applies'
p4328
I0
I0
I00
Ntp4329
a(S'bool'
p4330
S'holdRecomputation'
p4331
S'hold_recomputation'
p4332
S'temporarily disables recomputation of avg and dev while adding values'
p4333
I0
I0
I01
Ntp4334
asg29
(dp4335
sbsS'TRuleBeamFilter'
p4336
(i__main__
ClassDefinition
p4337
(dp4338
g4
I1
sg5
I0
sg6
g4336
sg7
S'TOrange'
p4339
sg9
I01
sg10
(lp4340
sg12
(lp4341
sg29
(dp4342
sbsS'TPreprocessor_addClassWeight'
p4343
(i__main__
ClassDefinition
p4344
(dp4345
g4
I1
sg5
I0
sg6
g4343
sg7
S'TPreprocessor'
p4346
sg9
I00
sg10
(lp4347
sg12
(lp4348
(S'TFloatList'
p4349
S'classWeights'
p4350
S'class_weights'
p4351
S'weights of examples of particular classes'
p4352
I0
I0
I00
Ntp4353
a(S'bool'
p4354
S'equalize'
p4355
g4355
S'reweight examples to equalize class proportions'
p4356
I0
I0
I01
Ntp4357
a(S'TRandomGenerator'
p4358
S'randomGenerator'
p4359
S'random_generator'
p4360
S'random number generator'
p4361
I0
I0
I00
Ntp4362
asg29
(dp4363
sbsS'TValueFilter_continuous'
p4364
(i__main__
ClassDefinition
p4365
(dp4366
g4
I1
sg5
I0
sg6
g4364
sg7
S'TValueFilter'
p4367
sg9
I00
sg10
(lp4368
sg12
(lp4369
(S'float'
p4370
S'min'
p4371
(g4371
S'ref'
p4372
tp4373
S' reference value (lower bound for interval operators)'
p4374
I0
I0
I01
Ntp4375
a(S'float'
p4376
S'max'
p4377
g4377
S'upper bound for interval operators'
p4378
I0
I0
I01
Ntp4379
a(S'bool'
p4380
S'outside'
p4381
g4381
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p4382
I0
I0
I01
Ntp4383
a(S'int'
p4384
S'oper'
p4385
g4385
S' operator'
p4386
I0
I0
I01
S'ValueFilter_Operator'
p4387
tp4388
ag2738
ag2743
asg29
(dp4389
sbsS'TAssociationRule'
p4390
(i__main__
ClassDefinition
p4391
(dp4392
g4
I1
sg5
I0
sg6
g4390
sg7
S'TOrange'
p4393
sg9
I00
sg10
(lp4394
sg12
(lp4395
(S'TExample'
p4396
S'left'
p4397
g4397
S'left side of the rule'
p4398
I01
I0
I00
Ntp4399
a(S'TExample'
p4400
S'right'
p4401
g4401
S'right side of the rule'
p4402
I01
I0
I00
Ntp4403
a(S'float'
p4404
S'support'
p4405
g4405
S'support for the rule'
p4406
I0
I0
I01
Ntp4407
a(S'float'
p4408
S'confidence'
p4409
g4409
S'confidence of the rule'
p4410
I0
I0
I01
Ntp4411
a(S'float'
p4412
S'coverage'
p4413
g4413
S"rule's coverage"
p4414
I0
I0
I01
Ntp4415
a(S'float'
p4416
S'strength'
p4417
g4417
S"rule's strength"
p4418
I0
I0
I01
Ntp4419
a(S'float'
p4420
S'lift'
p4421
g4421
S"rule's lift"
p4422
I0
I0
I01
Ntp4423
a(S'float'
p4424
S'leverage'
p4425
g4425
S"rule's leverage"
p4426
I0
I0
I01
Ntp4427
a(S'float'
p4428
S'nAppliesLeft'
p4429
S'n_applies_left'
p4430
S"number of examples covered by the rule's left side"
p4431
I0
I0
I01
Ntp4432
a(S'float'
p4433
S'nAppliesRight'
p4434
S'n_applies_right'
p4435
S"number of examples covered by the rule's right side"
p4436
I0
I0
I01
Ntp4437
a(S'float'
p4438
S'nAppliesBoth'
p4439
S'n_applies_both'
p4440
S'number of examples covered by the rule'
p4441
I0
I0
I01
Ntp4442
a(S'float'
p4443
S'nExamples'
p4444
S'n_examples'
p4445
S'number of learning examples'
p4446
I0
I0
I01
Ntp4447
a(S'int'
p4448
S'nLeft'
p4449
S'n_left'
p4450
S"number of items on the rule's left side"
p4451
I01
I0
I01
Ntp4452
a(S'int'
p4453
S'nRight'
p4454
S'n_right'
p4455
S"number of items on the rule's right side"
p4456
I01
I0
I01
Ntp4457
a(S'TExampleTable'
p4458
S'examples'
p4459
g4459
S'examples which the rule was built from'
p4460
I01
I0
I00
Ntp4461
a(S'TIntList'
p4462
S'matchLeft'
p4463
S'match_left'
p4464
S'indices of examples that match the left side of the rule'
p4465
I01
I0
I00
Ntp4466
a(S'TIntList'
p4467
S'matchBoth'
p4468
S'match_both'
p4469
S'indices to examples that match both sides of the rule'
p4470
I01
I0
I00
Ntp4471
asg29
(dp4472
sbsS'TValueFilter'
p4473
(i__main__
ClassDefinition
p4474
(dp4475
g4
I1
sg5
I0
sg6
g4473
sg7
S'TOrange'
p4476
sg9
I01
sg10
(lp4477
sg12
(lp4478
g2738
ag2743
asg29
(dp4479
S'Operator'
p4480
(lp4481
(S'None'
p4482
I0
tp4483
a(S'Equal'
p4484
I1
tp4485
a(S'NotEqual'
p4486
I2
tp4487
a(S'Less'
p4488
I3
tp4489
a(S'LessEqual'
p4490
I4
tp4491
a(S'Greater'
p4492
I5
tp4493
a(S'GreaterEqual'
p4494
I6
tp4495
a(S'Between'
p4496
I7
tp4497
a(S'Outside'
p4498
I8
tp4499
a(S'Contains'
p4500
I9
tp4501
a(S'NotContains'
p4502
I10
tp4503
a(S'BeginsWith'
p4504
I11
tp4505
a(S'EndsWith'
p4506
I12
tp4507
a(S'Listed'
p4508
I13
tp4509
assbsS'TNoiseValuesGenerator'
p4510
(i__main__
ClassDefinition
p4511
(dp4512
g4
I1
sg5
I0
sg6
g4510
sg7
S'TChangeExampleGenerator'
p4513
sg9
I00
sg10
(lp4514
sg12
(lp4515
(S'TIntFloatList'
p4516
S'replaceProbabilities'
p4517
S'replace_probabilities'
p4518
S"probabilities for replacing attributes' values"
p4519
I0
I0
I00
Ntp4520
a(S'TRandomGenerator'
p4521
S'randomGenerator'
p4522
S'random_generator'
p4523
S'random generator'
p4524
I0
I0
I00
Ntp4525
ag97
ag101
asg29
(dp4526
sbsS'TTreeExampleSplitter_UnknownsToAll'
p4527
(i__main__
ClassDefinition
p4528
(dp4529
g4
I1
sg5
I0
sg6
g4527
sg7
S'TTreeExampleSplitter'
p4530
sg9
I00
sg10
(lp4531
sg12
(lp4532
sg29
(dp4533
sbsS'TEquiNDiscretization'
p4534
(i__main__
ClassDefinition
p4535
(dp4536
g4
I1
sg5
I0
sg6
g4534
sg7
S'TDiscretization'
p4537
sg9
I00
sg10
(lp4538
sg12
(lp4539
(S'int'
p4540
S'numberOfIntervals'
p4541
(g4541
g361
tp4542
S' number of intervals'
p4543
I0
I0
I01
Ntp4544
a(S'bool'
p4545
S'recursiveDivision'
p4546
S'recursive_division'
p4547
S'find cut-off points by recursive division (default = true)'
p4548
I0
I0
I01
Ntp4549
asg29
(dp4550
sbsS'TGaussianDistribution'
p4551
(i__main__
ClassDefinition
p4552
(dp4553
g4
I1
sg5
I0
sg6
g4551
sg7
S'TDistribution'
p4554
sg9
I00
sg10
(lp4555
sg12
(lp4556
(S'float'
p4557
S'mean'
p4558
g4558
S'mu'
p4559
I0
I0
I01
Ntp4560
a(S'float'
p4561
S'sigma'
p4562
g4562
S'sigma'
p4563
I0
I0
I01
Ntp4564
ag2150
ag2154
ag2158
ag2162
ag2166
ag2171
ag2176
ag2181
asg29
(dp4565
sbsS'TDomainBasicAttrStat'
p4566
(i__main__
ClassDefinition
p4567
(dp4568
g4
I1
sg5
I0
sg6
g4566
sg7
g2531
sg9
I00
sg10
(lp4569
sg12
(lp4570
(S'bool'
p4571
S'hasClassVar'
p4572
S'has_class_var'
p4573
S'has class var'
p4574
I0
I0
I01
Ntp4575
asg29
(dp4576
sbsS'TBayesClassifier'
p4577
(i__main__
ClassDefinition
p4578
(dp4579
g4
I1
sg5
I0
sg6
g4577
sg7
S'TClassifierFD'
p4580
sg9
I00
sg10
(lp4581
sg12
(lp4582
(S'TDistribution'
p4583
S'distribution'
p4584
g4584
S'class distributions (P(C))'
p4585
I0
I0
I00
Ntp4586
a(S'TDomainContingency'
p4587
S'conditionalDistributions'
p4588
S'conditional_distributions'
p4589
S'conditional distributions, P(C|A)'
p4590
I0
I0
I00
Ntp4591
a(S'TProbabilityEstimator'
p4592
S'estimator'
p4593
g4593
S'a probability estimator for P(C)'
p4594
I0
I0
I00
Ntp4595
a(S'TConditionalProbabilityEstimatorList'
p4596
S'conditionalEstimators'
p4597
S'conditional_estimators'
p4598
S'a probability estimator for P(C|A)'
p4599
I0
I0
I00
Ntp4600
a(S'bool'
p4601
S'normalizePredictions'
p4602
S'normalize_predictions'
p4603
S'if true, classifier will normalize predictions'
p4604
I0
I0
I01
Ntp4605
a(S'float'
p4606
S'threshold'
p4607
g4607
S'threshold probability for class 1 (for binary classes only)'
p4608
I0
I0
I01
Ntp4609
ag882
ag772
ag777
asg29
(dp4610
sbsS'TCostWrapperClassifier'
p4611
(i__main__
ClassDefinition
p4612
(dp4613
g4
I1
sg5
I0
sg6
g4611
sg7
S'TClassifier'
p4614
sg9
I00
sg10
(lp4615
sg12
(lp4616
(S'TClassifier'
p4617
S'classifier'
p4618
g4618
S'basic classifier'
p4619
I0
I0
I00
Ntp4620
a(S'TCostMatrix'
p4621
S'costMatrix'
p4622
S'cost_matrix'
p4623
S'cost matrix'
p4624
I0
I0
I00
Ntp4625
ag772
ag777
asg29
(dp4626
sbsS'TPreprocessor_ignore'
p4627
(i__main__
ClassDefinition
p4628
(dp4629
g4
I1
sg5
I0
sg6
g4627
sg7
S'TPreprocessor'
p4630
sg9
I00
sg10
(lp4631
sg12
(lp4632
(S'TVarList'
p4633
S'attributes'
p4634
g4634
S'tells which attributes to remove'
p4635
I0
I0
I00
Ntp4636
asg29
(dp4637
sbsS'TEVDist'
p4638
(i__main__
ClassDefinition
p4639
(dp4640
g4
I1
sg5
I0
sg6
g4638
sg7
S'TOrange'
p4641
sg9
I00
sg10
(lp4642
sg12
(lp4643
(S'float'
p4644
S'mu'
p4645
g4645
S'mu of Fisher-Tippett distribution'
p4646
I0
I0
I01
Ntp4647
a(S'float'
p4648
S'beta'
p4649
g4649
S'beta of Fisher-Tippett distribution'
p4650
I0
I0
I01
Ntp4651
a(S'TFloatList'
p4652
S'percentiles'
p4653
g4653
S'usually 10 values - 0 = 5th percentile, 1 = 15th percentile, 9 = 95th percentile, change maxPercentile and step for other settings'
p4654
I0
I0
I00
Ntp4655
a(S'float'
p4656
S'maxPercentile'
p4657
S'max_percentile'
p4658
S'maxPercentile Value, default 0.95'
p4659
I0
I0
I01
Ntp4660
a(S'float'
p4661
S'step'
p4662
g4662
S'step of percentiles, default 0.1'
p4663
I0
I0
I01
Ntp4664
asg29
(dp4665
sbsS'TMeasureAttribute_Python'
p4666
(i__main__
ClassDefinition
p4667
(dp4668
g4
I1
sg5
I0
sg6
g4666
sg7
S'TMeasureAttribute'
p4669
sg9
I00
sg10
(lp4670
sg12
(lp4671
g438
ag443
ag448
ag453
asg29
(dp4672
sbsS'TPreprocessor_take'
p4673
(i__main__
ClassDefinition
p4674
(dp4675
g4
I1
sg5
I0
sg6
g4673
sg7
S'TPreprocessor'
p4676
sg9
I00
sg10
(lp4677
sg12
(lp4678
(S'TVariableFilterMap'
p4679
S'values'
p4680
g4680
S'variable-filter pairs'
p4681
I0
I0
I00
Ntp4682
a(S'bool'
p4683
S'conjunction'
p4684
g4684
S'decides whether to take conjunction or disjunction of values'
p4685
I0
I0
I01
Ntp4686
asg29
(dp4687
sbsS'TDistributionAssessor_m'
p4688
(i__main__
ClassDefinition
p4689
(dp4690
g4
I1
sg5
I0
sg6
g4688
sg7
S'TDistributionAssessor'
p4691
sg9
I00
sg10
(lp4692
sg12
(lp4693
(S'float'
p4694
g984
g984
S'm for m-estimate'
p4695
I0
I0
I01
Ntp4696
asg29
(dp4697
sbsS'TEVDistGetter'
p4698
(i__main__
ClassDefinition
p4699
(dp4700
g4
I1
sg5
I0
sg6
g4698
sg7
S'TOrange'
p4701
sg9
I01
sg10
(lp4702
sg12
(lp4703
sg29
(dp4704
sbsS'TStopDistributionClustering_n'
p4705
(i__main__
ClassDefinition
p4706
(dp4707
g4
I1
sg5
I0
sg6
g4705
sg7
S'TStopDistributionClustering'
p4708
sg9
I00
sg10
(lp4709
sg12
(lp4710
(S'int'
p4711
g361
g361
S'number of clusters'
p4712
I0
I0
I01
Ntp4713
asg29
(dp4714
sbsS'TTreeExampleSplitter_UnknownsAsSelector'
p4715
(i__main__
ClassDefinition
p4716
(dp4717
g4
I1
sg5
I0
sg6
g4715
sg7
S'TTreeExampleSplitter'
p4718
sg9
I00
sg10
(lp4719
sg12
(lp4720
sg29
(dp4721
sbsS'TClassifier_Python'
p4722
(i__main__
ClassDefinition
p4723
(dp4724
g4
I1
sg5
I0
sg6
g4722
sg7
S'TClassifier'
p4725
sg9
I00
sg10
(lp4726
sg12
(lp4727
g772
ag777
asg29
(dp4728
sbsS'TFilter_isDefined'
p4729
(i__main__
ClassDefinition
p4730
(dp4731
g4
I1
sg5
I0
sg6
g4729
sg7
S'TFilter'
p4732
sg9
I00
sg10
(lp4733
sg12
(lp4734
(S'TAttributedBoolList'
p4735
S'check'
p4736
g4736
S'tells which attributes to check; checks all if the list is empty'
p4737
I0
I0
I00
Ntp4738
ag235
ag239
asg29
(dp4739
sbsS'TProbabilityEstimatorConstructor_m'
p4740
(i__main__
ClassDefinition
p4741
(dp4742
g4
I1
sg5
I0
sg6
g4740
sg7
S'TProbabilityEstimatorConstructor'
p4743
sg9
I00
sg10
(lp4744
sg12
(lp4745
(S'float'
p4746
g984
g984
S'parameter m for m-estimation'
p4747
I0
I0
I01
Ntp4748
a(S'bool'
p4749
S'renormalize'
p4750
g4750
S'computes the estimate on the original (not the normalized) distribution'
p4751
I0
I0
I01
Ntp4752
asg29
(dp4753
sbsS'TStopDistributionClustering_noBigChange'
p4754
(i__main__
ClassDefinition
p4755
(dp4756
g4
I1
sg5
I0
sg6
g4754
sg7
S'TStopDistributionClustering'
p4757
sg9
I00
sg10
(lp4758
sg12
(lp4759
sg29
(dp4760
sbsS'TRuleLearner'
p4761
(i__main__
ClassDefinition
p4762
(dp4763
g4
I1
sg5
I0
sg6
g4761
sg7
S'TLearner'
p4764
sg9
I00
sg10
(lp4765
sg12
(lp4766
(S'TRuleDataStoppingCriteria'
p4767
S'dataStopping'
p4768
S'data_stopping'
p4769
g1285
I0
I0
I00
Ntp4770
a(S'TRuleStoppingCriteria'
p4771
S'ruleStopping'
p4772
S'rule_stopping'
p4773
g1285
I0
I0
I00
Ntp4774
a(S'TRuleCovererAndRemover'
p4775
S'coverAndRemove'
p4776
S'cover_and_remove'
p4777
g1285
I0
I0
I00
Ntp4778
a(S'TRuleFinder'
p4779
S'ruleFinder'
p4780
S'rule_finder'
p4781
g1285
I0
I0
I00
Ntp4782
a(S'TRuleClassifierConstructor'
p4783
S'classifierConstructor'
p4784
S'classifier_constructor'
p4785
S'classifier'
p4786
I0
I0
I00
Ntp4787
a(S'TProgressCallback'
p4788
S'progressCallback'
p4789
S'progress_callback'
p4790
S'progress callback function'
p4791
I0
I0
I00
Ntp4792
a(S'bool'
p4793
S'storeExamples'
p4794
S'store_examples'
p4795
g1285
I0
I0
I01
Ntp4796
a(S'int'
p4797
S'targetClass'
p4798
S'target_class'
p4799
g1285
I0
I0
I01
Ntp4800
a(S'TRuleList'
p4801
S'baseRules'
p4802
S'base_rules'
p4803
g1285
I0
I0
I00
Ntp4804
ag47
asg29
(dp4805
sbsS'TLinearLearner'
p4806
(i__main__
ClassDefinition
p4807
(dp4808
g4
I1
sg5
I0
sg6
g4806
sg7
S'TLearner'
p4809
sg9
I00
sg10
(lp4810
sg12
(lp4811
(S'int'
p4812
S'solver_type'
p4813
g4813
S' Solver type (loss function1)'
p4814
I0
I0
I01
S'LinearLearner_Lossfunction1'
p4815
tp4816
a(S'float'
p4817
S'eps'
p4818
g4818
S'Stopping criteria'
p4819
I0
I0
I01
Ntp4820
a(S'float'
p4821
g2011
g2011
S'Regularization parameter'
p4822
I0
I0
I01
Ntp4823
ag47
asg29
(dp4824
S'LIBLINEAR_VERSION'
p4825
(lp4826
(S'VERSION'
p4827
S'180'
p4828
tp4829
asS'Lossfunction1'
p4830
(lp4831
(S'L2R_LR'
p4832
I0
tp4833
a(S'L2R_L2Loss_SVC_Dual'
p4834
I1
tp4835
a(S'L2R_L2Loss_SVC'
p4836
I2
tp4837
a(S'L2R_L1Loss_SVC_Dual'
p4838
I3
tp4839
a(S'MCSVM_CS'
p4840
I4
tp4841
a(S'L1R_L2Loss_SVC'
p4842
I5
tp4843
a(S'L1R_LR'
p4844
I6
tp4845
a(S'L2R_LR_Dual'
p4846
I7
tp4847
asS'Lossfunction1_old_'
p4848
(lp4849
(S'L2_LR'
p4850
I0
tp4851
a(S'L2Loss_SVM_Dual'
p4852
I1
tp4853
a(S'L2Loss_SVM'
p4854
I2
tp4855
a(S'L1Loss_SVM_Dual'
p4856
I3
tp4857
assbsS'TImputer'
p4858
(i__main__
ClassDefinition
p4859
(dp4860
g4
I1
sg5
I0
sg6
g4858
sg7
S'TOrange'
p4861
sg9
I01
sg10
(lp4862
sg12
(lp4863
sg29
(dp4864
sbsS'TTransformValue_Python'
p4865
(i__main__
ClassDefinition
p4866
(dp4867
g4
I1
sg5
I0
sg6
g4865
sg7
S'TTransformValue'
p4868
sg9
I00
sg10
(lp4869
sg12
(lp4870
g294
asg29
(dp4871
sbsS'TRuleStoppingCriteria_Python'
p4872
(i__main__
ClassDefinition
p4873
(dp4874
g4
I1
sg5
I0
sg6
g4872
sg7
S'TRuleStoppingCriteria'
p4875
sg9
I00
sg10
(lp4876
sg12
(lp4877
sg29
(dp4878
sbsS'TRuleBeamFilter_Width'
p4879
(i__main__
ClassDefinition
p4880
(dp4881
g4
I1
sg5
I0
sg6
g4879
sg7
S'TRuleBeamFilter'
p4882
sg9
I00
sg10
(lp4883
sg12
(lp4884
(S'int'
p4885
S'width'
p4886
g4886
g1285
I0
I0
I01
Ntp4887
asg29
(dp4888
sbsS'TRandomClassifier'
p4889
(i__main__
ClassDefinition
p4890
(dp4891
g4
I1
sg5
I0
sg6
g4889
sg7
S'TClassifier'
p4892
sg9
I00
sg10
(lp4893
sg12
(lp4894
(S'TDistribution'
p4895
S'probabilities'
p4896
g4896
S'probabilities of predictions'
p4897
I0
I0
I00
Ntp4898
ag772
ag777
asg29
(dp4899
sbsS'TFindNearest'
p4900
(i__main__
ClassDefinition
p4901
(dp4902
g4
I1
sg5
I0
sg6
g4900
sg7
S'TOrange'
p4903
sg9
I01
sg10
(lp4904
sg12
(lp4905
g398
ag403
asg29
(dp4906
sbsS'TLogRegFitter_Cholesky'
p4907
(i__main__
ClassDefinition
p4908
(dp4909
g4
I1
sg5
I0
sg6
g4907
sg7
S'TLogRegFitter'
p4910
sg9
I00
sg10
(lp4911
sg12
(lp4912
sg29
(dp4913
sbsS'TClassifierFromVar'
p4914
(i__main__
ClassDefinition
p4915
(dp4916
g4
I1
sg5
I0
sg6
g4914
sg7
S'TClassifier'
p4917
sg9
I00
sg10
(lp4918
sg12
(lp4919
(S'TVariable'
p4920
S'whichVar'
p4921
(g4921
S'variable'
p4922
tp4923
S' variable'
p4924
I0
I0
I00
Ntp4925
a(S'TTransformValue'
p4926
S'transformer'
p4927
g4927
S'transformer'
p4928
I0
I0
I00
Ntp4929
a(S'TDistribution'
p4930
S'distributionForUnknown'
p4931
S'distribution_for_unknown'
p4932
S'distribution for unknown value'
p4933
I0
I0
I00
Ntp4934
a(S'bool'
p4935
S'transformUnknowns'
p4936
S'transform_unknowns'
p4937
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4938
I0
I0
I01
Ntp4939
ag772
ag777
asg29
(dp4940
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p4941
(i__main__
ClassDefinition
p4942
(dp4943
g4
I1
sg5
I0
sg6
g4941
sg7
S'TTreeExampleSplitter'
p4944
sg9
I00
sg10
(lp4945
sg12
(lp4946
sg29
(dp4947
sbsS'TTreeSplitConstructor_OneAgainstOthers'
p4948
(i__main__
ClassDefinition
p4949
(dp4950
g4
I1
sg5
I0
sg6
g4948
sg7
S'TTreeSplitConstructor_Measure'
p4951
sg9
I00
sg10
(lp4952
sg12
(lp4953
g2340
ag2345
ag1677
asg29
(dp4954
sbsS'TClassifier'
p4955
(i__main__
ClassDefinition
p4956
(dp4957
g4
I1
sg5
I0
sg6
g4955
sg7
S'TOrange'
p4958
sg9
I00
sg10
(lp4959
sg12
(lp4960
g772
ag777
asg29
(dp4961
sbsS'TIG'
p4962
(i__main__
ClassDefinition
p4963
(dp4964
g4
I1
sg5
I0
sg6
g4962
sg7
S'TOrange'
p4965
sg9
I00
sg10
(lp4966
sg12
(lp4967
sg29
(dp4968
sbsS'TTreeClassifier'
p4969
(i__main__
ClassDefinition
p4970
(dp4971
g4
I1
sg5
I0
sg6
g4969
sg7
S'TClassifierFD'
p4972
sg9
I00
sg10
(lp4973
sg12
(lp4974
(S'TTreeNode'
p4975
S'tree'
p4976
g4976
S'decision tree'
p4977
I0
I0
I00
Ntp4978
a(S'TTreeDescender'
p4979
S'descender'
p4980
g4980
S'object that descends down the tree'
p4981
I0
I0
I00
Ntp4982
ag882
ag772
ag777
asg29
(dp4983
sbsS'TMeasureAttribute_logOddsRatio'
p4984
(i__main__
ClassDefinition
p4985
(dp4986
g4
I1
sg5
I0
sg6
g4984
sg7
S'TMeasureAttributeFromProbabilities'
p4987
sg9
I00
sg10
(lp4988
sg12
(lp4989
g422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp4990
sbsS'TTreeExampleSplitter_Python'
p4991
(i__main__
ClassDefinition
p4992
(dp4993
g4
I1
sg5
I0
sg6
g4991
sg7
S'TTreeExampleSplitter'
p4994
sg9
I00
sg10
(lp4995
sg12
(lp4996
sg29
(dp4997
sbsS'TFilter_random'
p4998
(i__main__
ClassDefinition
p4999
(dp5000
g4
I1
sg5
I0
sg6
g4998
sg7
S'TFilter'
p5001
sg9
I00
sg10
(lp5002
sg12
(lp5003
(S'float'
p5004
S'prob'
p5005
g5005
S'probability of selecting an example'
p5006
I0
I0
I01
Ntp5007
a(S'TRandomGenerator'
p5008
S'randomGenerator'
p5009
S'random_generator'
p5010
S'random generator'
p5011
I0
I0
I00
Ntp5012
ag235
ag239
asg29
(dp5013
sbsS'TC45ExampleGenerator'
p5014
(i__main__
ClassDefinition
p5015
(dp5016
g4
I1
sg5
I0
sg6
g5014
sg7
S'TFileExampleGenerator'
p5017
sg9
I00
sg10
(lp5018
sg12
(lp5019
(S'TBoolList'
p5020
S'skip'
p5021
g5021
S'a boolean list, one element per attribute, denoting which attributes to skip'
p5022
I0
I0
I00
Ntp5023
ag718
ag723
ag728
ag97
ag101
asg29
(dp5024
sbsS'TProbabilityEstimatorConstructor_loess'
p5025
(i__main__
ClassDefinition
p5026
(dp5027
g4
I1
sg5
I0
sg6
g5025
sg7
S'TProbabilityEstimatorConstructor'
p5028
sg9
I00
sg10
(lp5029
sg12
(lp5030
(S'float'
p5031
S'windowProportion'
p5032
S'window_proportion'
p5033
S'The proportion of points in a window for LR'
p5034
I0
I0
I01
Ntp5035
a(S'int'
p5036
S'nPoints'
p5037
S'n_points'
p5038
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p5039
I0
I0
I01
Ntp5040
a(S'int'
p5041
S'distributionMethod'
p5042
S'distribution_method'
p5043
S" Meaning of the 'nPoints'"
p5044
I0
I0
I01
S'ProbabilityEstimatorConstructor_loess_DistributionMethod'
p5045
tp5046
asg29
(dp5047
S'DistributionMethod'
p5048
(lp5049
(S'Minimal'
p5050
S'DISTRIBUTE_MINIMAL'
p5051
tp5052
a(S'Factor'
p5053
S'DISTRIBUTE_FACTOR'
p5054
tp5055
a(S'Fixed'
p5056
S'DISTRIBUTE_FIXED'
p5057
tp5058
a(S'Uniform'
p5059
S'DISTRIBUTE_UNIFORM'
p5060
tp5061
a(S'Maximal'
p5062
S'DISTRIBUTE_MAXIMAL'
p5063
tp5064
assbsS'TLogRegFitter'
p5065
(i__main__
ClassDefinition
p5066
(dp5067
g4
I1
sg5
I0
sg6
g5065
sg7
S'TOrange'
p5068
sg9
I01
sg10
(lp5069
sg12
(lp5070
sg29
(dp5071
S'ErrorCode'
p5072
(lp5073
(S'OK'
p5074
I0
tp5075
a(S'Infinity'
p5076
I1
tp5077
a(S'Divergence'
p5078
I2
tp5079
a(S'Constant'
p5080
I3
tp5081
a(S'Singularity'
p5082
I4
tp5083
assbsS'TIntervalDiscretizer'
p5084
(i__main__
ClassDefinition
p5085
(dp5086
g4
I1
sg5
I0
sg6
g5084
sg7
S'TDiscretizer'
p5087
sg9
I00
sg10
(lp5088
sg12
(lp5089
(S'TFloatList'
p5090
S'points'
p5091
g5091
S'cut-off points'
p5092
I0
I0
I00
Ntp5093
ag294
asg29
(dp5094
sbsS'TImputerConstructor_random'
p5095
(i__main__
ClassDefinition
p5096
(dp5097
g4
I1
sg5
I0
sg6
g5095
sg7
S'TImputerConstructor'
p5098
sg9
I00
sg10
(lp5099
sg12
(lp5100
(S'bool'
p5101
S'deterministic'
p5102
g5102
S"tells whether to initialize random by example's CRC (default: false)"
p5103
I0
I0
I01
Ntp5104
ag1467
asg29
(dp5105
sbsS'TRandomLearner'
p5106
(i__main__
ClassDefinition
p5107
(dp5108
g4
I1
sg5
I0
sg6
g5106
sg7
S'TLearner'
p5109
sg9
I00
sg10
(lp5110
sg12
(lp5111
(S'TDistribution'
p5112
S'probabilities'
p5113
g5113
S'probabilities of predictions'
p5114
I0
I0
I00
Ntp5115
ag47
asg29
(dp5116
sbsS'TItemsetsSparseInducer'
p5117
(i__main__
ClassDefinition
p5118
(dp5119
g4
I1
sg5
I0
sg6
g5117
sg7
S'TOrange'
p5120
sg9
I00
sg10
(lp5121
sg12
(lp5122
(S'int'
p5123
S'maxItemSets'
p5124
S'max_item_sets'
p5125
S'maximal number of itemsets (increase if you want)'
p5126
I0
I0
I01
Ntp5127
a(S'float'
p5128
S'support'
p5129
g5129
S'required support'
p5130
I0
I0
I01
Ntp5131
a(S'bool'
p5132
S'storeExamples'
p5133
S'store_examples'
p5134
S'stores examples corresponding to itemsets'
p5135
I0
I0
I01
Ntp5136
asg29
(dp5137
sbsS'TRuleBeamInitializer_Default'
p5138
(i__main__
ClassDefinition
p5139
(dp5140
g4
I1
sg5
I0
sg6
g5138
sg7
S'TRuleBeamInitializer'
p5141
sg9
I00
sg10
(lp5142
sg12
(lp5143
sg29
(dp5144
sbsS'TImputerConstructor_minimal'
p5145
(i__main__
ClassDefinition
p5146
(dp5147
g4
I1
sg5
I0
sg6
g5145
sg7
S'TImputerConstructor'
p5148
sg9
I00
sg10
(lp5149
sg12
(lp5150
g1467
asg29
(dp5151
sbsS'TMeasureAttribute_cost'
p5152
(i__main__
ClassDefinition
p5153
(dp5154
g4
I1
sg5
I0
sg6
g5152
sg7
S'TMeasureAttributeFromProbabilities'
p5155
sg9
I00
sg10
(lp5156
sg12
(lp5157
(S'TCostMatrix'
p5158
S'cost'
p5159
g5159
S'cost matrix'
p5160
I0
I0
I00
Ntp5161
ag422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp5162
sbsS'TClustersFromIM'
p5163
(i__main__
ClassDefinition
p5164
(dp5165
g4
I1
sg5
I0
sg6
g5163
sg7
S'TOrange'
p5166
sg9
I01
sg10
(lp5167
sg12
(lp5168
sg29
(dp5169
sbsS'TRuleCovererAndRemover_Default'
p5170
(i__main__
ClassDefinition
p5171
(dp5172
g4
I1
sg5
I0
sg6
g5170
sg7
S'TRuleCovererAndRemover'
p5173
sg9
I00
sg10
(lp5174
sg12
(lp5175
sg29
(dp5176
sbsS'TClustersFromIMByAssessor'
p5177
(i__main__
ClassDefinition
p5178
(dp5179
g4
I1
sg5
I0
sg6
g5177
sg7
S'TClustersFromIM'
p5180
sg9
I00
sg10
(lp5181
sg12
(lp5182
(S'TColumnAssessor'
p5183
S'columnAssessor'
p5184
S'column_assessor'
p5185
S'column quality assessor'
p5186
I0
I0
I00
Ntp5187
a(S'TStopIMClusteringByAssessor'
p5188
S'stopCriterion'
p5189
S'stop_criterion'
p5190
S'stop criterion'
p5191
I0
I0
I00
Ntp5192
asg29
(dp5193
sbsS'TDomainContingency'
p5194
(i__main__
ClassDefinition
p5195
(dp5196
g4
I1
sg5
I0
sg6
g5194
sg7
g2531
sg9
I00
sg10
(lp5197
sg12
(lp5198
(S'TDistribution'
p5199
S'classes'
p5200
g5200
S'distribution of class values'
p5201
I0
I0
I00
Ntp5202
a(S'bool'
p5203
S'classIsOuter'
p5204
S'class_is_outer'
p5205
S'tells whether the class is the outer variable'
p5206
I0
I0
I01
Ntp5207
asg29
(dp5208
sbsS'TMakeRandomIndices2'
p5209
(i__main__
ClassDefinition
p5210
(dp5211
g4
I1
sg5
I0
sg6
g5209
sg7
S'TMakeRandomIndices'
p5212
sg9
I00
sg10
(lp5213
sg12
(lp5214
(S'float'
p5215
S'p0'
p5216
g5216
S"a proportion or a number of 0's"
p5217
I0
I0
I01
Ntp5218
ag258
ag262
ag267
asg29
(dp5219
sbsS'TValueList'
p5220
(i__main__
ClassDefinition
p5221
(dp5222
g4
I1
sg5
I0
sg6
g5220
sg7
g2531
sg9
I00
sg10
(lp5223
sg12
(lp5224
(S'TVariable'
p5225
S'variable'
p5226
g5226
S'the variable to which the list applies'
p5227
I0
I0
I00
Ntp5228
asg29
(dp5229
sbsS'TTreeExampleSplitter_UnknownsToCommon'
p5230
(i__main__
ClassDefinition
p5231
(dp5232
g4
I1
sg5
I0
sg6
g5230
sg7
S'TTreeExampleSplitter'
p5233
sg9
I00
sg10
(lp5234
sg12
(lp5235
sg29
(dp5236
sbsS'TDomainTransformerConstructor'
p5237
(i__main__
ClassDefinition
p5238
(dp5239
g4
I1
sg5
I0
sg6
g5237
sg7
S'TOrange'
p5240
sg9
I01
sg10
(lp5241
sg12
(lp5242
(S'bool'
p5243
S'preservesOrder'
p5244
S'preserves_order'
p5245
S'a flag telling that original attributes have corresponding attribute in the same order'
p5246
I01
I0
I01
Ntp5247
a(S'bool'
p5248
S'preservesAttributes'
p5249
S'preserves_attributes'
p5250
S'a flag telling whether each original has a corresponding new attribute'
p5251
I01
I0
I01
Ntp5252
asg29
(dp5253
sbsS'TIGConstructor'
p5254
(i__main__
ClassDefinition
p5255
(dp5256
g4
I1
sg5
I0
sg6
g5254
sg7
S'TOrange'
p5257
sg9
I01
sg10
(lp5258
sg12
(lp5259
sg29
(dp5260
sbsS'TTreeDescender_UnknownToNode'
p5261
(i__main__
ClassDefinition
p5262
(dp5263
g4
I1
sg5
I0
sg6
g5261
sg7
g2657
sg9
I0
sg10
(lp5264
sg12
(lp5265
sg29
(dp5266
sbsS'TMakeRandomIndices'
p5267
(i__main__
ClassDefinition
p5268
(dp5269
g4
I1
sg5
I0
sg6
g5267
sg7
S'TOrange'
p5270
sg9
I00
sg10
(lp5271
sg12
(lp5272
g258
ag262
ag267
asg29
(dp5273
S'Stratification'
p5274
(lp5275
(S'StratifiedIfPossible'
p5276
S'-1'
p5277
tp5278
a(S'NotStratified'
p5279
I0
tp5280
a(S'Stratified'
p5281
I1
tp5282
assbsS'TFilter_Python'
p5283
(i__main__
ClassDefinition
p5284
(dp5285
g4
I1
sg5
I0
sg6
g5283
sg7
S'TFilter'
p5286
sg9
I00
sg10
(lp5287
sg12
(lp5288
g235
ag239
asg29
(dp5289
sbsS'TExamplesDistanceConstructor_Maximal'
p5290
(i__main__
ClassDefinition
p5291
(dp5292
g4
I1
sg5
I0
sg6
g5290
sg7
S'TExamplesDistanceConstructor_Normalized'
p5293
sg9
I00
sg10
(lp5294
sg12
(lp5295
g1147
ag1152
ag544
asg29
(dp5296
sbsS'TExamplesDistanceConstructor_Python'
p5297
(i__main__
ClassDefinition
p5298
(dp5299
g4
I1
sg5
I0
sg6
g5297
sg7
S'TExamplesDistanceConstructor'
p5300
sg9
I00
sg10
(lp5301
sg12
(lp5302
g544
asg29
(dp5303
sbsS'TPythonVariable'
p5304
(i__main__
ClassDefinition
p5305
(dp5306
g4
I1
sg5
I0
sg6
g5304
sg7
S'TVariable'
p5307
sg9
I00
sg10
(lp5308
sg12
(lp5309
(S'bool'
p5310
S'usePickle'
p5311
S'use_pickle'
p5312
S'tells whether to use pickle for saving to/loading from files'
p5313
I0
I0
I01
Ntp5314
a(S'bool'
p5315
S'useSomeValue'
p5316
S'use_some_value'
p5317
S'tells whether the Variable will operate on Value or SomeValue (default)'
p5318
I0
I0
I01
Ntp5319
ag623
ag627
ag631
ag636
ag641
ag646
ag651
asg29
(dp5320
sbsS'TGaussianNoiseGenerator'
p5321
(i__main__
ClassDefinition
p5322
(dp5323
g4
I1
sg5
I0
sg6
g5321
sg7
S'TChangeExampleGenerator'
p5324
sg9
I00
sg10
(lp5325
sg12
(lp5326
(S'TIntFloatList'
p5327
S'deviations'
p5328
g5328
S"deviations for attributes' values"
p5329
I0
I0
I00
Ntp5330
a(S'TRandomGenerator'
p5331
S'randomGenerator'
p5332
S'random_generator'
p5333
S'random generator'
p5334
I0
I0
I00
Ntp5335
ag97
ag101
asg29
(dp5336
sbsS'TClustersFromDistributionsByAssessor'
p5337
(i__main__
ClassDefinition
p5338
(dp5339
g4
I1
sg5
I0
sg6
g5337
sg7
S'TClustersFromDistributions'
p5340
sg9
I00
sg10
(lp5341
sg12
(lp5342
(S'TDistributionAssessor'
p5343
S'distributionAssessor'
p5344
S'distribution_assessor'
p5345
S'column quality assessor'
p5346
I0
I0
I00
Ntp5347
a(S'TStopDistributionClustering'
p5348
S'stopCriterion'
p5349
S'stop_criterion'
p5350
S'stop criterion'
p5351
I0
I0
I00
Ntp5352
a(S'float'
p5353
S'minProfitProportion'
p5354
S'min_profit_proportion'
p5355
S'minimal merge profit'
p5356
I0
I0
I01
Ntp5357
asg29
(dp5358
sbsS'TExamplesDistance_Hamming'
p5359
(i__main__
ClassDefinition
p5360
(dp5361
g4
I1
sg5
I0
sg6
g5359
sg7
S'TExamplesDistance'
p5362
sg9
I00
sg10
(lp5363
sg12
(lp5364
(S'bool'
p5365
S'ignoreClass'
p5366
S'ignore_class'
p5367
S'if true (default), class value is ignored when computing distances'
p5368
I0
I0
I01
Ntp5369
a(S'bool'
p5370
S'ignoreUnknowns'
p5371
S'ignore_unknowns'
p5372
S'if true (default: false) unknown values are ignored in computation'
p5373
I0
I0
I01
Ntp5374
asg29
(dp5375
sbsS'TColumnAssessor_Kramer'
p5376
(i__main__
ClassDefinition
p5377
(dp5378
g4
I1
sg5
I0
sg6
g5376
sg7
S'TColumnAssessor'
p5379
sg9
I00
sg10
(lp5380
sg12
(lp5381
sg29
(dp5382
sbsS'TEVDistGetter_Python'
p5383
(i__main__
ClassDefinition
p5384
(dp5385
g4
I1
sg5
I0
sg6
g5383
sg7
S'TEVDistGetter'
p5386
sg9
I00
sg10
(lp5387
sg12
(lp5388
sg29
(dp5389
sbsS'TDiscretization'
p5390
(i__main__
ClassDefinition
p5391
(dp5392
g4
I1
sg5
I0
sg6
g5390
sg7
S'TOrange'
p5393
sg9
I01
sg10
(lp5394
sg12
(lp5395
sg29
(dp5396
sbsS'TIMByRows'
p5397
(i__main__
ClassDefinition
p5398
(dp5399
g4
I1
sg5
I0
sg6
g5397
sg7
S'TOrange'
p5400
sg9
I00
sg10
(lp5401
sg12
(lp5402
(S'int'
p5403
S'varType'
p5404
S'var_type'
p5405
S' class variable type'
p5406
I0
I0
I01
S'Variable_Type'
p5407
tp5408
asg29
(dp5409
sbsS'TAssessIMQuality'
p5410
(i__main__
ClassDefinition
p5411
(dp5412
g4
I1
sg5
I0
sg6
g5410
sg7
S'TOrange'
p5413
sg9
I00
sg10
(lp5414
sg12
(lp5415
(S'TColumnAssessor'
p5416
S'columnAssessor'
p5417
S'column_assessor'
p5418
S'column quality assessor'
p5419
I0
I0
I00
Ntp5420
asg29
(dp5421
sbsS'TRule'
p5422
(i__main__
ClassDefinition
p5423
(dp5424
g4
I1
sg5
I0
sg6
g5422
sg7
S'TOrange'
p5425
sg9
I00
sg10
(lp5426
sg12
(lp5427
(S'TFilter'
p5428
S'filter'
p5429
g5429
S'stored filter for this rule'
p5430
I0
I0
I00
Ntp5431
a(S'TFilter'
p5432
S'valuesFilter'
p5433
S'values_filter'
p5434
S'Filter_values representation of main filter (sometimes needed)'
p5435
I0
I0
I00
Ntp5436
a(S'TClassifier'
p5437
S'classifier'
p5438
g5438
S'classifies an example'
p5439
I0
I0
I00
Ntp5440
a(S'TLearner'
p5441
S'learner'
p5442
g5442
S'learns a classifier from data'
p5443
I0
I0
I00
Ntp5444
a(S'TRule'
p5445
S'parentRule'
p5446
S'parent_rule'
p5447
g1285
I0
I0
I00
Ntp5448
a(S'TDistribution'
p5449
S'baseDist'
p5450
S'base_dist'
p5451
S'initial distribution'
p5452
I0
I0
I00
Ntp5453
a(S'TDistribution'
p5454
S'classDistribution'
p5455
S'class_distribution'
p5456
S'distribution of classes covered by the rule'
p5457
I0
I0
I00
Ntp5458
a(S'TExampleTable'
p5459
S'examples'
p5460
g5460
S'covered examples'
p5461
I0
I0
I00
Ntp5462
a(S'int'
p5463
S'weightID'
p5464
S'weight_ID'
p5465
S'weight for the stored examples'
p5466
I0
I0
I01
Ntp5467
a(S'float'
p5468
S'quality'
p5469
g5469
S'some measure of rule quality'
p5470
I0
I0
I01
Ntp5471
a(S'int'
p5472
S'complexity'
p5473
g5473
g1285
I0
I0
I01
Ntp5474
a(S'float'
p5475
S'chi'
p5476
g5476
g1285
I0
I0
I01
Ntp5477
a(S'int'
p5478
S'requiredConditions'
p5479
S'required_conditions'
p5480
S'conditions that are mandatory in rule - rule attribute significance avoids these'
p5481
I0
I0
I01
Ntp5482
asg29
(dp5483
sbsS'TPreprocessor_addClassNoise'
p5484
(i__main__
ClassDefinition
p5485
(dp5486
g4
I1
sg5
I0
sg6
g5484
sg7
S'TPreprocessor'
p5487
sg9
I00
sg10
(lp5488
sg12
(lp5489
(S'float'
p5490
S'proportion'
p5491
g5491
S'proportion of changed class values'
p5492
I0
I0
I01
Ntp5493
a(S'TRandomGenerator'
p5494
S'randomGenerator'
p5495
S'random_generator'
p5496
S'random number generator'
p5497
I0
I0
I00
Ntp5498
asg29
(dp5499
sbsS'TFilter'
p5500
(i__main__
ClassDefinition
p5501
(dp5502
g4
I1
sg5
I0
sg6
g5500
sg7
S'TOrange'
p5503
sg9
I01
sg10
(lp5504
sg12
(lp5505
g235
ag239
asg29
(dp5506
sbsS'TRuleBeamCandidateSelector_TakeAll'
p5507
(i__main__
ClassDefinition
p5508
(dp5509
g4
I1
sg5
I0
sg6
g5507
sg7
S'TRuleBeamCandidateSelector'
p5510
sg9
I00
sg10
(lp5511
sg12
(lp5512
sg29
(dp5513
sbsS'TPreprocessor_addMissing'
p5514
(i__main__
ClassDefinition
p5515
(dp5516
g4
I1
sg5
I0
sg6
g5514
sg7
S'TPreprocessor'
p5517
sg9
I00
sg10
(lp5518
sg12
(lp5519
(S'TVariableFloatMap'
p5520
S'proportions'
p5521
g5521
S'proportion of removed values for individual values'
p5522
I0
I0
I00
Ntp5523
a(S'float'
p5524
S'defaultProportion'
p5525
S'default_proportion'
p5526
S'default proportion of removed values (for attributes not specified above)'
p5527
I0
I0
I01
Ntp5528
a(S'int'
p5529
S'specialType'
p5530
S'special_type'
p5531
S'special value type (1=DC, 2=DK)'
p5532
I0
I0
I01
Ntp5533
a(S'TRandomGenerator'
p5534
S'randomGenerator'
p5535
S'random_generator'
p5536
S'random number generator'
p5537
I0
I0
I00
Ntp5538
asg29
(dp5539
sbsS'TThresholdDiscretizer'
p5540
(i__main__
ClassDefinition
p5541
(dp5542
g4
I1
sg5
I0
sg6
g5540
sg7
S'TDiscretizer'
p5543
sg9
I00
sg10
(lp5544
sg12
(lp5545
(S'float'
p5546
S'threshold'
p5547
g5547
S'threshold'
p5548
I0
I0
I01
Ntp5549
ag294
asg29
(dp5550
sbsS'TMakeRandomIndicesN'
p5551
(i__main__
ClassDefinition
p5552
(dp5553
g4
I1
sg5
I0
sg6
g5551
sg7
S'TMakeRandomIndices'
p5554
sg9
I00
sg10
(lp5555
sg12
(lp5556
(S'TFloatList'
p5557
g1758
g1758
S'probabilities of indices (last is 1-sum(p))'
p5558
I0
I0
I00
Ntp5559
ag258
ag262
ag267
asg29
(dp5560
sbsS'TValueFilter_stringList'
p5561
(i__main__
ClassDefinition
p5562
(dp5563
g4
I1
sg5
I0
sg6
g5561
sg7
S'TValueFilter'
p5564
sg9
I00
sg10
(lp5565
sg12
(lp5566
(S'TStringList'
p5567
S'values'
p5568
g5568
S'accepted values'
p5569
I0
I0
I00
Ntp5570
a(S'bool'
p5571
S'caseSensitive'
p5572
S'case_sensitive'
p5573
S'if true (default), the comparison is case sensitive'
p5574
I0
I0
I01
Ntp5575
ag2738
ag2743
asg29
(dp5576
sbsS'TDomain'
p5577
(i__main__
ClassDefinition
p5578
(dp5579
g4
I1
sg5
I0
sg6
g5577
sg7
S'TOrange'
p5580
sg9
I00
sg10
(lp5581
sg12
(lp5582
(S'TVariable'
p5583
S'classVar'
p5584
S'class_var'
p5585
S'class variable'
p5586
I01
I0
I00
Ntp5587
a(S'TVarList'
p5588
S'attributes'
p5589
(g5589
S'features'
p5590
tp5591
S' list of attributes, excluding the class'
p5592
I01
I0
I00
Ntp5593
a(S'TVarList'
p5594
S'variables'
p5595
g5595
S'list of attributes, including the class at the end of the list'
p5596
I01
I0
I00
Ntp5597
a(S'TVarList'
p5598
S'classVars'
p5599
S'class_vars'
p5600
S'list of class variables, if multiple; else None'
p5601
I01
I0
I00
Ntp5602
a(S'int'
p5603
S'version'
p5604
g5604
S"unique version identifier; it's changed each time a domain is changed"
p5605
I01
I0
I01
Ntp5606
asg29
(dp5607
sbsS'TTreePruner_SameMajority'
p5608
(i__main__
ClassDefinition
p5609
(dp5610
g4
I1
sg5
I0
sg6
g5608
sg7
S'TTreePruner'
p5611
sg9
I00
sg10
(lp5612
sg12
(lp5613
sg29
(dp5614
sbsS'TDomainDiscretization'
p5615
(i__main__
ClassDefinition
p5616
(dp5617
g4
I1
sg5
I0
sg6
g5615
sg7
S'TOrange'
p5618
sg9
I00
sg10
(lp5619
sg12
(lp5620
(S'TDiscretization'
p5621
S'discretization'
p5622
g5622
S'discretization'
p5623
I0
I0
I00
Ntp5624
asg29
(dp5625
sbsS'TRuleEvaluator_mEVC'
p5626
(i__main__
ClassDefinition
p5627
(dp5628
g4
I1
sg5
I0
sg6
g5626
sg7
S'TRuleEvaluator'
p5629
sg9
I00
sg10
(lp5630
sg12
(lp5631
(S'float'
p5632
g984
g984
S'Parameter m for m-estimate after EVC correction'
p5633
I0
I0
I01
Ntp5634
a(S'TEVDistGetter'
p5635
S'evDistGetter'
p5636
S'ev_dist_getter'
p5637
S'get EVC distribution for chi correction'
p5638
I0
I0
I00
Ntp5639
a(S'TVariable'
p5640
S'probVar'
p5641
S'prob_var'
p5642
S'probability coverage variable (meta usually)'
p5643
I0
I0
I00
Ntp5644
a(S'TRuleValidator'
p5645
S'validator'
p5646
g5646
S'rule validator for best rule'
p5647
I0
I0
I00
Ntp5648
a(S'int'
p5649
S'min_improved'
p5650
g5650
S'minimal number of improved examples'
p5651
I0
I0
I01
Ntp5652
a(S'float'
p5653
S'min_improved_perc'
p5654
g5654
S'minimal percentage of improved examples'
p5655
I0
I0
I01
Ntp5656
a(S'TRule'
p5657
S'bestRule'
p5658
S'best_rule'
p5659
S'best rule found and evaluated given conditions (min_improved, validator)'
p5660
I0
I0
I00
Ntp5661
a(S'float'
p5662
S'ruleAlpha'
p5663
S'rule_alpha'
p5664
S"minimal 'true' rule significance"
p5665
I0
I0
I01
Ntp5666
a(S'float'
p5667
S'attributeAlpha'
p5668
S'attribute_alpha'
p5669
S'minimal attribute significance'
p5670
I0
I0
I01
Ntp5671
a(S'bool'
p5672
S'returnExpectedProb'
p5673
S'return_expected_prob'
p5674
S'if true, evaluator returns expected class probability, if false, current class probability'
p5675
I0
I0
I01
Ntp5676
a(S'int'
p5677
S'optimismReduction'
p5678
S'optimism_reduction'
p5679
S'to select optimstic (0), pessimistic (1) or EVC (2) evaluation'
p5680
I0
I0
I01
Ntp5681
asg29
(dp5682
sbsS'TTreeDescender_Python'
p5683
(i__main__
ClassDefinition
p5684
(dp5685
g4
I1
sg5
I0
sg6
g5683
sg7
S'TTreeDescender'
p5686
sg9
I00
sg10
(lp5687
sg12
(lp5688
sg29
(dp5689
sbsS'TKernelFunc'
p5690
(i__main__
ClassDefinition
p5691
(dp5692
g4
I1
sg5
I0
sg6
g5690
sg7
S'TOrange'
p5693
sg9
I01
sg10
(lp5694
sg12
(lp5695
sg29
(dp5696
sbsS'TRuleClassifierConstructor_Python'
p5697
(i__main__
ClassDefinition
p5698
(dp5699
g4
I1
sg5
I0
sg6
g5697
sg7
S'TRuleClassifierConstructor'
p5700
sg9
I00
sg10
(lp5701
sg12
(lp5702
sg29
(dp5703
sbsS'THierarchicalCluster'
p5704
(i__main__
ClassDefinition
p5705
(dp5706
g4
I1
sg5
I0
sg6
g5704
sg7
S'TOrange'
p5707
sg9
I00
sg10
(lp5708
sg12
(lp5709
(S'THierarchicalClusterList'
p5710
S'branches'
p5711
g5711
S'subclusters'
p5712
I0
I0
I00
Ntp5713
a(S'float'
p5714
S'height'
p5715
g5715
S'height'
p5716
I0
I0
I01
Ntp5717
a(S'TIntList'
p5718
S'mapping'
p5719
g5719
S'indices to the list of all elements in the clustering'
p5720
I0
I0
I00
Ntp5721
a(S'int'
p5722
S'first'
p5723
g5723
S"the index into 'elements' to the first element of the cluster"
p5724
I0
I0
I01
Ntp5725
a(S'int'
p5726
S'last'
p5727
g5727
S"the index into 'elements' to the one after the last element of the cluster"
p5728
I0
I0
I01
Ntp5729
asg29
(dp5730
sbsS'TBasketFeeder'
p5731
(i__main__
ClassDefinition
p5732
(dp5733
g4
I1
sg5
I0
sg6
g5731
sg7
S'TOrange'
p5734
sg9
I00
sg10
(lp5735
sg12
(lp5736
(S'bool'
p5737
S'dontStore'
p5738
S'dont_store'
p5739
S'disables items storing'
p5740
I0
I0
I01
Ntp5741
a(S'bool'
p5742
S'dontCheckStored'
p5743
S'dont_check_stored'
p5744
S'disables items lookup in the global cache'
p5745
I0
I0
I01
Ntp5746
a(S'TDomain'
p5747
S'domain'
p5748
g5748
S'domain where the meta attributes are stored'
p5749
I0
I0
I00
Ntp5750
a(S'TDomain'
p5751
S'sourceDomain'
p5752
S'source_domain'
p5753
S'domain with items that can be reused'
p5754
I0
I0
I00
Ntp5755
asg29
(dp5756
sbsS'TSubsetsGenerator_minMaxSize_iterator'
p5757
(i__main__
ClassDefinition
p5758
(dp5759
g4
I1
sg5
I0
sg6
g5757
sg7
S'TSubsetsGenerator_iterator'
p5760
sg9
I00
sg10
(lp5761
sg12
(lp5762
(S'int'
p5763
g4282
g4282
g1285
I01
I0
I01
Ntp5764
a(S'int'
p5765
S'max'
p5766
g5766
S'maximal subset size'
p5767
I0
I0
I01
Ntp5768
a(S'bool'
p5769
S'moreToCome'
p5770
S'more_to_come'
p5771
g1285
I01
I0
I01
Ntp5772
ag168
asg29
(dp5773
sbsS'TExamplesDistanceConstructor_Lp'
p5774
(i__main__
ClassDefinition
p5775
(dp5776
g4
I1
sg5
I0
sg6
g5774
sg7
S'TExamplesDistanceConstructor_Normalized'
p5777
sg9
I00
sg10
(lp5778
sg12
(lp5779
(S'float'
p5780
g1758
g1758
g1758
I0
I0
I01
Ntp5781
ag1147
ag1152
ag544
asg29
(dp5782
sbsS'TComputeDomainContingency'
p5783
(i__main__
ClassDefinition
p5784
(dp5785
g4
I1
sg5
I0
sg6
g5783
sg7
S'TOrange'
p5786
sg9
I00
sg10
(lp5787
sg12
(lp5788
g28
asg29
(dp5789
sbsS'TFixedDiscretization'
p5790
(i__main__
ClassDefinition
p5791
(dp5792
g4
I1
sg5
I0
sg6
g5790
sg7
S'TDiscretization'
p5793
sg9
I00
sg10
(lp5794
sg12
(lp5795
(S'TFloatList'
p5796
S'points'
p5797
g5797
S'cut-off points'
p5798
I0
I0
I00
Ntp5799
asg29
(dp5800
sbsS'TExampleClusters'
p5801
(i__main__
ClassDefinition
p5802
(dp5803
g4
I1
sg5
I0
sg6
g5801
sg7
S'TGeneralExampleClustering'
p5804
sg9
I00
sg10
(lp5805
sg12
(lp5806
(S'TExampleCluster'
p5807
S'root'
p5808
g5808
S'root of cluster hierarchy'
p5809
I0
I0
I00
Ntp5810
a(S'float'
p5811
S'quality'
p5812
g5812
S"'quality' of clustering"
p5813
I0
I0
I01
Ntp5814
asg29
(dp5815
sbsS'TRuleDataStoppingCriteria'
p5816
(i__main__
ClassDefinition
p5817
(dp5818
g4
I1
sg5
I0
sg6
g5816
sg7
S'TOrange'
p5819
sg9
I01
sg10
(lp5820
sg12
(lp5821
sg29
(dp5822
sbsS'TPreprocessor_filter'
p5823
(i__main__
ClassDefinition
p5824
(dp5825
g4
I1
sg5
I0
sg6
g5823
sg7
S'TPreprocessor'
p5826
sg9
I00
sg10
(lp5827
sg12
(lp5828
(S'TFilter'
p5829
S'filter'
p5830
g5830
S'filter'
p5831
I0
I0
I00
Ntp5832
asg29
(dp5833
sbsS'TEarthClassifier'
p5834
(i__main__
ClassDefinition
p5835
(dp5836
g4
I1
sg5
I0
sg6
g5834
sg7
S'TClassifierFD'
p5837
sg9
I00
sg10
(lp5838
sg12
(lp5839
(S'int'
p5840
S'num_preds'
p5841
g5841
S'Number of predictor variables'
p5842
I0
I0
I01
Ntp5843
a(S'int'
p5844
S'num_terms'
p5845
g5845
S'Number of used terms'
p5846
I0
I0
I01
Ntp5847
a(S'int'
p5848
S'max_terms'
p5849
g5849
S'Maximum number of terms'
p5850
I0
I0
I01
Ntp5851
a(S'int'
p5852
S'num_responses'
p5853
g5853
S'Number of response variables'
p5854
I0
I0
I01
Ntp5855
a(S'TBoolList'
p5856
S'best_set'
p5857
g5857
S'Used terms.'
p5858
I0
I0
I00
Ntp5859
a(S'TFloatListList'
p5860
S'dirs'
p5861
g5861
S'max_preds x num_preds matrix'
p5862
I0
I0
I00
Ntp5863
a(S'TFloatListList'
p5864
S'cuts'
p5865
g5865
S'max_preds x num_preds matrix of cuts'
p5866
I0
I0
I00
Ntp5867
a(S'TFloatList'
p5868
S'betas'
p5869
g5869
S'Term coefficients;'
p5870
I0
I0
I00
Ntp5871
ag882
ag772
ag777
asg29
(dp5872
sbsS'TMeasureAttribute_info'
p5873
(i__main__
ClassDefinition
p5874
(dp5875
g4
I1
sg5
I0
sg6
g5873
sg7
S'TMeasureAttributeFromProbabilities'
p5876
sg9
I00
sg10
(lp5877
sg12
(lp5878
g422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp5879
sbsS'TImputeClassifier'
p5880
(i__main__
ClassDefinition
p5881
(dp5882
g4
I1
sg5
I0
sg6
g5880
sg7
S'TClassifier'
p5883
sg9
I00
sg10
(lp5884
sg12
(lp5885
(S'TClassifierFromVar'
p5886
S'classifierFromVar'
p5887
S'classifier_from_var'
p5888
S'ClassifierFromVar that is used to retrieve defined values'
p5889
I0
I0
I00
Ntp5890
a(S'TClassifier'
p5891
S'imputer'
p5892
g5892
S'classifier that is used to determine the missing values '
p5893
I0
I0
I00
Ntp5894
ag772
ag777
asg29
(dp5895
sbsS'TMeasureAttribute_chiSquare'
p5896
(i__main__
ClassDefinition
p5897
(dp5898
g4
I1
sg5
I0
sg6
g5896
sg7
S'TMeasureAttributeFromProbabilities'
p5899
sg9
I00
sg10
(lp5900
sg12
(lp5901
(S'bool'
p5902
S'computeProbabilities'
p5903
S'compute_probabilities'
p5904
g1285
I0
I0
I01
Ntp5905
ag422
ag427
ag433
ag438
ag443
ag448
ag453
asg29
(dp5906
sbsS'TDistribution'
p5907
(i__main__
ClassDefinition
p5908
(dp5909
g4
I1
sg5
I0
sg6
g5907
sg7
S'TSomeValue'
p5910
sg9
I01
sg10
(lp5911
sg12
(lp5912
g2150
ag2154
ag2158
ag2162
ag2166
ag2171
ag2176
ag2181
asg29
(dp5913
sbsS'TTreePruner_m'
p5914
(i__main__
ClassDefinition
p5915
(dp5916
g4
I1
sg5
I0
sg6
g5914
sg7
S'TTreePruner'
p5917
sg9
I00
sg10
(lp5918
sg12
(lp5919
(S'float'
p5920
g984
g984
S'm for m-estimate'
p5921
I0
I0
I01
Ntp5922
asg29
(dp5923
sbsS'TBiModalDiscretization'
p5924
(i__main__
ClassDefinition
p5925
(dp5926
g4
I1
sg5
I0
sg6
g5924
sg7
S'TDiscretization'
p5927
sg9
I00
sg10
(lp5928
sg12
(lp5929
(S'bool'
p5930
S'splitInTwo'
p5931
S'split_in_two'
p5932
S'if true (default), flanks are merged into a single interval'
p5933
I0
I0
I01
Ntp5934
asg29
(dp5935
sbsS'TRuleBeamRefiner_Python'
p5936
(i__main__
ClassDefinition
p5937
(dp5938
g4
I1
sg5
I0
sg6
g5936
sg7
S'TRuleBeamRefiner'
p5939
sg9
I00
sg10
(lp5940
sg12
(lp5941
sg29
(dp5942
sbsS'TClassifierFromVarFD'
p5943
(i__main__
ClassDefinition
p5944
(dp5945
g4
I1
sg5
I0
sg6
g5943
sg7
S'TClassifierFD'
p5946
sg9
I00
sg10
(lp5947
sg12
(lp5948
(S'int'
p5949
S'position'
p5950
g5950
S'position of the attribute in domain'
p5951
I0
I0
I01
Ntp5952
a(S'TTransformValue'
p5953
S'transformer'
p5954
g5954
S'transformer'
p5955
I0
I0
I00
Ntp5956
a(S'TDistribution'
p5957
S'distributionForUnknown'
p5958
S'distribution_for_unknown'
p5959
S'distribution for unknown value'
p5960
I0
I0
I00
Ntp5961
a(S'bool'
p5962
S'transformUnknowns'
p5963
S'transform_unknowns'
p5964
S'if false (default is true), unknowns stay unknown or are changed into distribution if given'
p5965
I0
I0
I01
Ntp5966
ag882
ag772
ag777
asg29
(dp5967
sbsS'TImputer_model'
p5968
(i__main__
ClassDefinition
p5969
(dp5970
g4
I1
sg5
I0
sg6
g5968
sg7
S'TImputer'
p5971
sg9
I00
sg10
(lp5972
sg12
(lp5973
(S'TClassifierList'
p5974
S'models'
p5975
g5975
S'classifiers'
p5976
I0
I0
I00
Ntp5977
asg29
(dp5978
sbsS'TFeatureByDistributions'
p5979
(i__main__
ClassDefinition
p5980
(dp5981
g4
I1
sg5
I0
sg6
g5979
sg7
S'TFeatureInducer'
p5982
sg9
I00
sg10
(lp5983
sg12
(lp5984
(S'TClustersFromDistributions'
p5985
S'clustersFromDistributions'
p5986
S'clusters_from_distributions'
p5987
S'clustering algorithm'
p5988
I0
I0
I00
Ntp5989
a(S'int'
p5990
S'completion'
p5991
g5991
S' decides how to determine the class for points not covered by any cluster'
p5992
I0
I0
I01
S'FeatureByDistributions_Completion'
p5993
tp5994
asg29
(dp5995
S'Completion'
p5996
(lp5997
(S'NoCompletion'
p5998
S'completion_no'
p5999
tp6000
a(S'CompletionByDefault'
p6001
S'completion_default'
p6002
tp6003
a(S'CompletionByBayes'
p6004
S'completion_bayes'
p6005
tp6006
assbsS'TPreprocessor_takeMissing'
p6007
(i__main__
ClassDefinition
p6008
(dp6009
g4
I1
sg5
I0
sg6
g6007
sg7
S'TPreprocessor'
p6010
sg9
I00
sg10
(lp6011
sg12
(lp6012
sg29
(dp6013
sbsS'TTreeDescender_UnknownToBranch'
p6014
(i__main__
ClassDefinition
p6015
(dp6016
g4
I1
sg5
I0
sg6
g6014
sg7
g2657
sg9
I0
sg10
(lp6017
sg12
(lp6018
sg29
(dp6019
sbsS'TTreeSplitConstructor_Attribute'
p6020
(i__main__
ClassDefinition
p6021
(dp6022
g4
I1
sg5
I0
sg6
g6020
sg7
S'TTreeSplitConstructor_Measure'
p6023
sg9
I00
sg10
(lp6024
sg12
(lp6025
g2340
ag2345
ag1677
asg29
(dp6026
sbsS'TExamplesDistanceConstructor_Relief'
p6027
(i__main__
ClassDefinition
p6028
(dp6029
g4
I1
sg5
I0
sg6
g6027
sg7
S'TExamplesDistanceConstructor'
p6030
sg9
I00
sg10
(lp6031
sg12
(lp6032
g544
asg29
(dp6033
sbsS'TFilter_sameValue'
p6034
(i__main__
ClassDefinition
p6035
(dp6036
g4
I1
sg5
I0
sg6
g6034
sg7
S'TFilter'
p6037
sg9
I00
sg10
(lp6038
sg12
(lp6039
(S'int'
p6040
S'position'
p6041
g6041
S'position of the observed attribute'
p6042
I0
I0
I01
Ntp6043
a(S'TValue'
p6044
S'value'
p6045
g6045
S'value that the selected examples should have'
p6046
I0
I0
I01
Ntp6047
ag235
ag239
asg29
(dp6048
sbsS'TC45TreeNode'
p6049
(i__main__
ClassDefinition
p6050
(dp6051
g4
I1
sg5
I0
sg6
g6049
sg7
S'TOrange'
p6052
sg9
I00
sg10
(lp6053
sg12
(lp6054
(S'int'
p6055
S'nodeType'
p6056
S'node_type'
p6057
S' 0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p6058
I0
I0
I01
S'C45TreeNode_NodeType'
p6059
tp6060
a(S'TValue'
p6061
S'leaf'
p6062
g6062
S'most frequent class at this node'
p6063
I0
I0
I01
Ntp6064
a(S'float'
p6065
S'items'
p6066
g6066
S'no of items at this node'
p6067
I0
I0
I01
Ntp6068
a(S'TDiscDistribution'
p6069
S'classDist'
p6070
S'class_dist'
p6071
S'class distribution of items'
p6072
I0
I0
I00
Ntp6073
a(S'TVariable'
p6074
S'tested'
p6075
g6075
S'attribute referenced in test'
p6076
I0
I0
I00
Ntp6077
a(S'float'
p6078
S'cut'
p6079
g6079
S'threshold for continuous attribute'
p6080
I0
I0
I01
Ntp6081
a(S'float'
p6082
S'lower'
p6083
g6083
S'lower limit of soft threshold'
p6084
I0
I0
I01
Ntp6085
a(S'float'
p6086
S'upper'
p6087
g6087
S'upper limit of soft threshold'
p6088
I0
I0
I01
Ntp6089
a(S'TIntList'
p6090
S'mapping'
p6091
g6091
S'mapping for discrete value'
p6092
I0
I0
I00
Ntp6093
a(S'TC45TreeNodeList'
p6094
S'branch'
p6095
g6095
S'branch[x] = (sub)tree for outcome x */'
p6096
I0
I0
I00
Ntp6097
asg29
(dp6098
S'NodeType'
p6099
(lp6100
(S'Leaf'
p6101
S'0'
p6102
tp6103
a(S'Branch'
p6104
I1
tp6105
a(S'Cut'
p6106
I2
tp6107
a(S'Subset'
p6108
I3
tp6109
assbsS'TIMConstructor'
p6110
(i__main__
ClassDefinition
p6111
(dp6112
g4
I1
sg5
I0
sg6
g6110
sg7
S'TOrange'
p6113
sg9
I01
sg10
(lp6114
sg12
(lp6115
g2579
asg29
(dp6116
sbsS'TConditionalProbabilityEstimatorConstructor_loess'
p6117
(i__main__
ClassDefinition
p6118
(dp6119
g4
I1
sg5
I0
sg6
g6117
sg7
S'TConditionalProbabilityEstimatorConstructor'
p6120
sg9
I00
sg10
(lp6121
sg12
(lp6122
(S'float'
p6123
S'windowProportion'
p6124
S'window_proportion'
p6125
S'The proportion of points in a window for LR'
p6126
I0
I0
I01
Ntp6127
a(S'int'
p6128
S'nPoints'
p6129
S'n_points'
p6130
S'The number of points on curve'
p6131
I0
I0
I01
Ntp6132
a(S'int'
p6133
S'distributionMethod'
p6134
S'distribution_method'
p6135
S" Meaning of the 'nPoints'"
p6136
I0
I0
I01
S'ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod'
p6137
tp6138
asg29
(dp6139
S'DistributionMethod'
p6140
(lp6141
(S'Minimal'
p6142
S'DISTRIBUTE_MINIMAL'
p6143
tp6144
a(S'Factor'
p6145
S'DISTRIBUTE_FACTOR'
p6146
tp6147
a(S'Fixed'
p6148
S'DISTRIBUTE_FIXED'
p6149
tp6150
a(S'Uniform'
p6151
S'DISTRIBUTE_UNIFORM'
p6152
tp6153
a(S'Maximal'
p6154
S'DISTRIBUTE_MAXIMAL'
p6155
tp6156
assbsS'TTreeSplitConstructor_Threshold'
p6157
(i__main__
ClassDefinition
p6158
(dp6159
g4
I1
sg5
I0
sg6
g6157
sg7
S'TTreeSplitConstructor_Measure'
p6160
sg9
I00
sg10
(lp6161
sg12
(lp6162
g2340
ag2345
ag1677
asg29
(dp6163
sbsS'TDistanceMap'
p6164
(i__main__
ClassDefinition
p6165
(dp6166
g4
I1
sg5
I0
sg6
g6164
sg7
S'TOrange'
p6167
sg9
I00
sg10
(lp6168
sg12
(lp6169
(S'int'
p6170
S'dim'
p6171
g6171
S'bitmap dimension (in cells)'
p6172
I01
I0
I01
Ntp6173
a(S'int'
p6174
S'matrixType'
p6175
S'matrix_type'
p6176
S'0 lower, 1 upper, 2 symmetric'
p6177
I0
I0
I01
Ntp6178
a(S'TIntList'
p6179
S'elementIndices'
p6180
S'element_indices'
p6181
S'indices to elements (one for row + one at the end)'
p6182
I01
I0
I00
Ntp6183
asg29
(dp6184
sbsS'TExampleForMissing'
p6185
(i__main__
ClassDefinition
p6186
(dp6187
g4
I1
sg5
I0
sg6
g6185
sg7
S'TExample'
p6188
sg9
I00
sg10
(lp6189
sg12
(lp6190
(S'TEFMDataDescription'
p6191
S'dataDescription'
p6192
S'data_description'
p6193
S'data description'
p6194
I0
I0
I00
Ntp6195
ag2698
ag2701
asg29
(dp6196
sbsS'TCostLearner'
p6197
(i__main__
ClassDefinition
p6198
(dp6199
g4
I1
sg5
I0
sg6
g6197
sg7
S'TMajorityLearner'
p6200
sg9
I00
sg10
(lp6201
sg12
(lp6202
(S'TCostMatrix'
p6203
S'cost'
p6204
g6204
S'cost matrix'
p6205
I0
I0
I00
Ntp6206
ag1967
ag1972
ag47
asg29
(dp6207
sbsS'TPreprocessor_drop'
p6208
(i__main__
ClassDefinition
p6209
(dp6210
g4
I1
sg5
I0
sg6
g6208
sg7
S'TPreprocessor'
p6211
sg9
I00
sg10
(lp6212
sg12
(lp6213
(S'TVariableFilterMap'
p6214
S'values'
p6215
g6215
S'variable-filter pairs'
p6216
I0
I0
I00
Ntp6217
a(S'bool'
p6218
S'conjunction'
p6219
g6219
S'decides whether to take conjunction or disjunction of values'
p6220
I0
I0
I01
Ntp6221
asg29
(dp6222
sbsS'TPreprocessor_addNoise'
p6223
(i__main__
ClassDefinition
p6224
(dp6225
g4
I1
sg5
I0
sg6
g6223
sg7
S'TPreprocessor'
p6226
sg9
I00
sg10
(lp6227
sg12
(lp6228
(S'TVariableFloatMap'
p6229
S'proportions'
p6230
g6230
S'proportion of changed values for individual attributes'
p6231
I0
I0
I00
Ntp6232
a(S'float'
p6233
S'defaultProportion'
p6234
S'default_proportion'
p6235
S'default proportion of changed values (for attributes not specified above)'
p6236
I0
I0
I01
Ntp6237
a(S'TRandomGenerator'
p6238
S'randomGenerator'
p6239
S'random_generator'
p6240
S'random number generator'
p6241
I0
I0
I00
Ntp6242
asg29
(dp6243
sbsS'TColumnAssessor_mf'
p6244
(i__main__
ClassDefinition
p6245
(dp6246
g4
I1
sg5
I0
sg6
g6244
sg7
S'TColumnAssessor'
p6247
sg9
I00
sg10
(lp6248
sg12
(lp6249
(S'float'
p6250
g984
g984
S'm for m-estimate'
p6251
I0
I0
I01
Ntp6252
asg29
(dp6253
sbsS'TSubsetsGenerator'
p6254
(i__main__
ClassDefinition
p6255
(dp6256
g4
I1
sg5
I0
sg6
g6254
sg7
S'TOrange'
p6257
sg9
I01
sg10
(lp6258
sg12
(lp6259
g2312
asg29
(dp6260
sbsS'TPreprocessor_addCensorWeight'
p6261
(i__main__
ClassDefinition
p6262
(dp6263
g4
I1
sg5
I0
sg6
g6261
sg7
S'TPreprocessor'
p6264
sg9
I00
sg10
(lp6265
sg12
(lp6266
(S'TVariable'
p6267
S'outcomeVar'
p6268
S'outcome_var'
p6269
S'outcome variable'
p6270
I0
I0
I00
Ntp6271
a(S'TVariable'
p6272
S'timeVar'
p6273
S'time_var'
p6274
S'time variable'
p6275
I0
I0
I00
Ntp6276
a(S'TValue'
p6277
S'eventValue'
p6278
S'event_value'
p6279
S'event (fail) value'
p6280
I0
I0
I01
Ntp6281
a(S'int'
p6282
S'method'
p6283
g6283
S' weighting method'
p6284
I0
I0
I01
S'Preprocessor_addCensorWeight_Method'
p6285
tp6286
a(S'float'
p6287
S'maxTime'
p6288
S'max_time'
p6289
S'maximal time'
p6290
I0
I0
I01
Ntp6291
a(S'bool'
p6292
S'addComplementary'
p6293
S'add_complementary'
p6294
S'if true (default is false), complementary examples are added for censored examples'
p6295
I0
I0
I01
Ntp6296
asg29
(dp6297
S'Method'
p6298
(lp6299
(S'Linear'
p6300
S'TPreprocessor_addCensorWeight::linear'
p6301
tp6302
a(S'KM'
p6303
S'TPreprocessor_addCensorWeight::km'
p6304
tp6305
a(S'Bayes'
p6306
S'TPreprocessor_addCensorWeight::bayes'
p6307
tp6308
assbsS'TTreeDescender_UnknownMergeAsSelector'
p6309
(i__main__
ClassDefinition
p6310
(dp6311
g4
I1
sg5
I0
sg6
g6309
sg7
g2657
sg9
I0
sg10
(lp6312
sg12
(lp6313
sg29
(dp6314
sbsS'TProbabilityEstimator'
p6315
(i__main__
ClassDefinition
p6316
(dp6317
g4
I1
sg5
I0
sg6
g6315
sg7
S'TOrange'
p6318
sg9
I01
sg10
(lp6319
sg12
(lp6320
g695
ag700
asg29
(dp6321
sbsS'TPreprocessor'
p6322
(i__main__
ClassDefinition
p6323
(dp6324
g4
I1
sg5
I0
sg6
g6322
sg7
S'TOrange'
p6325
sg9
I01
sg10
(lp6326
sg12
(lp6327
sg29
(dp6328
sbsS'TExampleGenerator'
p6329
(i__main__
ClassDefinition
p6330
(dp6331
g4
I1
sg5
I0
sg6
g6329
sg7
S'TOrange'
p6332
sg9
I01
sg10
(lp6333
sg12
(lp6334
g97
ag101
asg29
(dp6335
sbsS'TGeneralExampleClustering'
p6336
(i__main__
ClassDefinition
p6337
(dp6338
g4
I1
sg5
I0
sg6
g6336
sg7
S'TOrange'
p6339
sg9
I01
sg10
(lp6340
sg12
(lp6341
sg29
(dp6342
sbs.