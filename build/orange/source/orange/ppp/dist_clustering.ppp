 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../dist_clustering.hpp"
#include <cstddef>



/****** TDistributionAssessor *****/


TPropertyDescription TDistributionAssessor_properties[] = {
  {NULL}
};

size_t const TDistributionAssessor_components[] = { 0};
TClassDescription TDistributionAssessor::st_classDescription = { "TDistributionAssessor", &typeid(TDistributionAssessor), &TOrange::st_classDescription, TDistributionAssessor_properties, TDistributionAssessor_components };
TClassDescription const *TDistributionAssessor::classDescription() const { return &TDistributionAssessor::st_classDescription; }


/****** TStopDistributionClustering *****/


TPropertyDescription TStopDistributionClustering_properties[] = {
  {NULL}
};

size_t const TStopDistributionClustering_components[] = { 0};
TClassDescription TStopDistributionClustering::st_classDescription = { "TStopDistributionClustering", &typeid(TStopDistributionClustering), &TOrange::st_classDescription, TStopDistributionClustering_properties, TStopDistributionClustering_components };
TClassDescription const *TStopDistributionClustering::classDescription() const { return &TStopDistributionClustering::st_classDescription; }


/****** TExampleDistVector *****/


TPropertyDescription TExampleDistVector_properties[] = {
  {NULL}
};

size_t const TExampleDistVector_components[] = { 0};
TClassDescription TExampleDistVector::st_classDescription = { "TExampleDistVector", &typeid(TExampleDistVector), &TOrange::st_classDescription, TExampleDistVector_properties, TExampleDistVector_components };
TClassDescription const *TExampleDistVector::classDescription() const { return &TExampleDistVector::st_classDescription; }
TOrange *TExampleDistVector::clone() const { return mlnew TExampleDistVector(*this); }


/****** TExampleDistConstructor *****/


TPropertyDescription TExampleDistConstructor_properties[] = {
  {NULL}
};

size_t const TExampleDistConstructor_components[] = { 0};
TClassDescription TExampleDistConstructor::st_classDescription = { "TExampleDistConstructor", &typeid(TExampleDistConstructor), &TOrange::st_classDescription, TExampleDistConstructor_properties, TExampleDistConstructor_components };
TClassDescription const *TExampleDistConstructor::classDescription() const { return &TExampleDistConstructor::st_classDescription; }


/****** TExampleDistBySorting *****/


TPropertyDescription TExampleDistBySorting_properties[] = {
  {NULL}
};

size_t const TExampleDistBySorting_components[] = { 0};
TClassDescription TExampleDistBySorting::st_classDescription = { "TExampleDistBySorting", &typeid(TExampleDistBySorting), &TExampleDistConstructor::st_classDescription, TExampleDistBySorting_properties, TExampleDistBySorting_components };
TClassDescription const *TExampleDistBySorting::classDescription() const { return &TExampleDistBySorting::st_classDescription; }
TOrange *TExampleDistBySorting::clone() const { return mlnew TExampleDistBySorting(*this); }


/****** TClustersFromDistributions *****/


TPropertyDescription TClustersFromDistributions_properties[] = {
  {NULL}
};

size_t const TClustersFromDistributions_components[] = { 0};
TClassDescription TClustersFromDistributions::st_classDescription = { "TClustersFromDistributions", &typeid(TClustersFromDistributions), &TOrange::st_classDescription, TClustersFromDistributions_properties, TClustersFromDistributions_components };
TClassDescription const *TClustersFromDistributions::classDescription() const { return &TClustersFromDistributions::st_classDescription; }


/****** TClustersFromDistributionsByAssessor *****/


TPropertyDescription TClustersFromDistributionsByAssessor_properties[] = {
  {"distribution_assessor", "column quality assessor", &typeid(POrange), &TDistributionAssessor::st_classDescription, offsetof(TClustersFromDistributionsByAssessor, distributionAssessor), false, false, 0},
  {"stop_criterion", "stop criterion", &typeid(POrange), &TStopDistributionClustering::st_classDescription, offsetof(TClustersFromDistributionsByAssessor, stopCriterion), false, false, 0},
  {"min_profit_proportion", "minimal merge profit", &typeid(float), NULL, offsetof(TClustersFromDistributionsByAssessor, minProfitProportion), false, false, 0},
  {NULL}
};

size_t const TClustersFromDistributionsByAssessor_components[] = { offsetof(TClustersFromDistributionsByAssessor, distributionAssessor), offsetof(TClustersFromDistributionsByAssessor, stopCriterion), 0};
TClassDescription TClustersFromDistributionsByAssessor::st_classDescription = { "TClustersFromDistributionsByAssessor", &typeid(TClustersFromDistributionsByAssessor), &TClustersFromDistributions::st_classDescription, TClustersFromDistributionsByAssessor_properties, TClustersFromDistributionsByAssessor_components };
TClassDescription const *TClustersFromDistributionsByAssessor::classDescription() const { return &TClustersFromDistributionsByAssessor::st_classDescription; }
TOrange *TClustersFromDistributionsByAssessor::clone() const { return mlnew TClustersFromDistributionsByAssessor(*this); }


/****** TFeatureByDistributions *****/

void *PTFeatureByDistributions_Completion(void *);

TPropertyDescription TFeatureByDistributions_properties[] = {
  {"clusters_from_distributions", "clustering algorithm", &typeid(POrange), &TClustersFromDistributions::st_classDescription, offsetof(TFeatureByDistributions, clustersFromDistributions), false, false, 0},
  {"completion", " decides how to determine the class for points not covered by any cluster", &typeid(int), NULL, offsetof(TFeatureByDistributions, completion), false, false, PTFeatureByDistributions_Completion},
  {NULL}
};

size_t const TFeatureByDistributions_components[] = { offsetof(TFeatureByDistributions, clustersFromDistributions), 0};
TClassDescription TFeatureByDistributions::st_classDescription = { "TFeatureByDistributions", &typeid(TFeatureByDistributions), &TFeatureInducer::st_classDescription, TFeatureByDistributions_properties, TFeatureByDistributions_components };
TClassDescription const *TFeatureByDistributions::classDescription() const { return &TFeatureByDistributions::st_classDescription; }
TOrange *TFeatureByDistributions::clone() const { return mlnew TFeatureByDistributions(*this); }


/****** TDistributionAssessor_m *****/


TPropertyDescription TDistributionAssessor_m_properties[] = {
  {"m", "m for m-estimate", &typeid(float), NULL, offsetof(TDistributionAssessor_m, m), false, false, 0},
  {NULL}
};

size_t const TDistributionAssessor_m_components[] = { 0};
TClassDescription TDistributionAssessor_m::st_classDescription = { "TDistributionAssessor_m", &typeid(TDistributionAssessor_m), &TDistributionAssessor::st_classDescription, TDistributionAssessor_m_properties, TDistributionAssessor_m_components };
TClassDescription const *TDistributionAssessor_m::classDescription() const { return &TDistributionAssessor_m::st_classDescription; }
TOrange *TDistributionAssessor_m::clone() const { return mlnew TDistributionAssessor_m(*this); }


/****** TDistributionAssessor_Laplace *****/


TPropertyDescription TDistributionAssessor_Laplace_properties[] = {
  {NULL}
};

size_t const TDistributionAssessor_Laplace_components[] = { 0};
TClassDescription TDistributionAssessor_Laplace::st_classDescription = { "TDistributionAssessor_Laplace", &typeid(TDistributionAssessor_Laplace), &TDistributionAssessor::st_classDescription, TDistributionAssessor_Laplace_properties, TDistributionAssessor_Laplace_components };
TClassDescription const *TDistributionAssessor_Laplace::classDescription() const { return &TDistributionAssessor_Laplace::st_classDescription; }
TOrange *TDistributionAssessor_Laplace::clone() const { return mlnew TDistributionAssessor_Laplace(*this); }


/****** TDistributionAssessor_Relief *****/


TPropertyDescription TDistributionAssessor_Relief_properties[] = {
  {NULL}
};

size_t const TDistributionAssessor_Relief_components[] = { 0};
TClassDescription TDistributionAssessor_Relief::st_classDescription = { "TDistributionAssessor_Relief", &typeid(TDistributionAssessor_Relief), &TDistributionAssessor::st_classDescription, TDistributionAssessor_Relief_properties, TDistributionAssessor_Relief_components };
TClassDescription const *TDistributionAssessor_Relief::classDescription() const { return &TDistributionAssessor_Relief::st_classDescription; }
TOrange *TDistributionAssessor_Relief::clone() const { return mlnew TDistributionAssessor_Relief(*this); }


/****** TDistributionAssessor_Kramer *****/


TPropertyDescription TDistributionAssessor_Kramer_properties[] = {
  {NULL}
};

size_t const TDistributionAssessor_Kramer_components[] = { 0};
TClassDescription TDistributionAssessor_Kramer::st_classDescription = { "TDistributionAssessor_Kramer", &typeid(TDistributionAssessor_Kramer), &TDistributionAssessor::st_classDescription, TDistributionAssessor_Kramer_properties, TDistributionAssessor_Kramer_components };
TClassDescription const *TDistributionAssessor_Kramer::classDescription() const { return &TDistributionAssessor_Kramer::st_classDescription; }
TOrange *TDistributionAssessor_Kramer::clone() const { return mlnew TDistributionAssessor_Kramer(*this); }


/****** TDistributionAssessor_Measure *****/


TPropertyDescription TDistributionAssessor_Measure_properties[] = {
  {"measure", "attribute quality measure", &typeid(POrange), &TMeasureAttribute::st_classDescription, offsetof(TDistributionAssessor_Measure, measure), false, false, 0},
  {NULL}
};

size_t const TDistributionAssessor_Measure_components[] = { offsetof(TDistributionAssessor_Measure, measure), 0};
TClassDescription TDistributionAssessor_Measure::st_classDescription = { "TDistributionAssessor_Measure", &typeid(TDistributionAssessor_Measure), &TDistributionAssessor::st_classDescription, TDistributionAssessor_Measure_properties, TDistributionAssessor_Measure_components };
TClassDescription const *TDistributionAssessor_Measure::classDescription() const { return &TDistributionAssessor_Measure::st_classDescription; }
TOrange *TDistributionAssessor_Measure::clone() const { return mlnew TDistributionAssessor_Measure(*this); }


/****** TDistributionAssessor_mf *****/


TPropertyDescription TDistributionAssessor_mf_properties[] = {
  {"m", "m for m-estimate", &typeid(float), NULL, offsetof(TDistributionAssessor_mf, m), false, false, 0},
  {NULL}
};

size_t const TDistributionAssessor_mf_components[] = { 0};
TClassDescription TDistributionAssessor_mf::st_classDescription = { "TDistributionAssessor_mf", &typeid(TDistributionAssessor_mf), &TDistributionAssessor::st_classDescription, TDistributionAssessor_mf_properties, TDistributionAssessor_mf_components };
TClassDescription const *TDistributionAssessor_mf::classDescription() const { return &TDistributionAssessor_mf::st_classDescription; }
TOrange *TDistributionAssessor_mf::clone() const { return mlnew TDistributionAssessor_mf(*this); }


/****** TStopDistributionClustering_noProfit *****/


TPropertyDescription TStopDistributionClustering_noProfit_properties[] = {
  {"min_profit_proportion", "minimal allowable profit proportion", &typeid(float), NULL, offsetof(TStopDistributionClustering_noProfit, minProfitProportion), false, false, 0},
  {NULL}
};

size_t const TStopDistributionClustering_noProfit_components[] = { 0};
TClassDescription TStopDistributionClustering_noProfit::st_classDescription = { "TStopDistributionClustering_noProfit", &typeid(TStopDistributionClustering_noProfit), &TStopDistributionClustering::st_classDescription, TStopDistributionClustering_noProfit_properties, TStopDistributionClustering_noProfit_components };
TClassDescription const *TStopDistributionClustering_noProfit::classDescription() const { return &TStopDistributionClustering_noProfit::st_classDescription; }
TOrange *TStopDistributionClustering_noProfit::clone() const { return mlnew TStopDistributionClustering_noProfit(*this); }


/****** TStopDistributionClustering_noBigChange *****/


TPropertyDescription TStopDistributionClustering_noBigChange_properties[] = {
  {NULL}
};

size_t const TStopDistributionClustering_noBigChange_components[] = { 0};
TClassDescription TStopDistributionClustering_noBigChange::st_classDescription = { "TStopDistributionClustering_noBigChange", &typeid(TStopDistributionClustering_noBigChange), &TStopDistributionClustering::st_classDescription, TStopDistributionClustering_noBigChange_properties, TStopDistributionClustering_noBigChange_components };
TClassDescription const *TStopDistributionClustering_noBigChange::classDescription() const { return &TStopDistributionClustering_noBigChange::st_classDescription; }
TOrange *TStopDistributionClustering_noBigChange::clone() const { return mlnew TStopDistributionClustering_noBigChange(*this); }


/****** TStopDistributionClustering_binary *****/


TPropertyDescription TStopDistributionClustering_binary_properties[] = {
  {NULL}
};

size_t const TStopDistributionClustering_binary_components[] = { 0};
TClassDescription TStopDistributionClustering_binary::st_classDescription = { "TStopDistributionClustering_binary", &typeid(TStopDistributionClustering_binary), &TStopDistributionClustering::st_classDescription, TStopDistributionClustering_binary_properties, TStopDistributionClustering_binary_components };
TClassDescription const *TStopDistributionClustering_binary::classDescription() const { return &TStopDistributionClustering_binary::st_classDescription; }
TOrange *TStopDistributionClustering_binary::clone() const { return mlnew TStopDistributionClustering_binary(*this); }


/****** TStopDistributionClustering_n *****/


TPropertyDescription TStopDistributionClustering_n_properties[] = {
  {"n", "number of clusters", &typeid(int), NULL, offsetof(TStopDistributionClustering_n, n), false, false, 0},
  {NULL}
};

size_t const TStopDistributionClustering_n_components[] = { 0};
TClassDescription TStopDistributionClustering_n::st_classDescription = { "TStopDistributionClustering_n", &typeid(TStopDistributionClustering_n), &TStopDistributionClustering::st_classDescription, TStopDistributionClustering_n_properties, TStopDistributionClustering_n_components };
TClassDescription const *TStopDistributionClustering_n::classDescription() const { return &TStopDistributionClustering_n::st_classDescription; }
TOrange *TStopDistributionClustering_n::clone() const { return mlnew TStopDistributionClustering_n(*this); }
