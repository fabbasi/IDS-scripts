 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../majority.hpp"
#include <cstddef>



/****** TMajorityLearner *****/


TPropertyDescription TMajorityLearner_properties[] = {
  {"estimator_constructor", "constructs probability estimator", &typeid(POrange), &TProbabilityEstimatorConstructor::st_classDescription, offsetof(TMajorityLearner, estimatorConstructor), false, false, 0},
  {"apriori_distribution", "apriori class distribution", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TMajorityLearner, aprioriDistribution), false, false, 0},
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TMajorityLearner, needs), true, false, 0},
  {NULL}
};

size_t const TMajorityLearner_components[] = { offsetof(TMajorityLearner, estimatorConstructor), offsetof(TMajorityLearner, aprioriDistribution), 0};
TClassDescription TMajorityLearner::st_classDescription = { "TMajorityLearner", &typeid(TMajorityLearner), &TLearner::st_classDescription, TMajorityLearner_properties, TMajorityLearner_components };
TClassDescription const *TMajorityLearner::classDescription() const { return &TMajorityLearner::st_classDescription; }
TOrange *TMajorityLearner::clone() const { return mlnew TMajorityLearner(*this); }


/****** TCostLearner *****/


TPropertyDescription TCostLearner_properties[] = {
  {"cost", "cost matrix", &typeid(POrange), &TCostMatrix::st_classDescription, offsetof(TCostLearner, cost), false, false, 0},
  {"estimator_constructor", "constructs probability estimator", &typeid(POrange), &TProbabilityEstimatorConstructor::st_classDescription, offsetof(TCostLearner, estimatorConstructor), false, false, 0},
  {"apriori_distribution", "apriori class distribution", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TCostLearner, aprioriDistribution), false, false, 0},
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TCostLearner, needs), true, false, 0},
  {NULL}
};

size_t const TCostLearner_components[] = { offsetof(TCostLearner, cost), offsetof(TCostLearner, estimatorConstructor), offsetof(TCostLearner, aprioriDistribution), 0};
TClassDescription TCostLearner::st_classDescription = { "TCostLearner", &typeid(TCostLearner), &TMajorityLearner::st_classDescription, TCostLearner_properties, TCostLearner_components };
TClassDescription const *TCostLearner::classDescription() const { return &TCostLearner::st_classDescription; }
TOrange *TCostLearner::clone() const { return mlnew TCostLearner(*this); }


/****** TRandomLearner *****/


TPropertyDescription TRandomLearner_properties[] = {
  {"probabilities", "probabilities of predictions", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TRandomLearner, probabilities), false, false, 0},
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TRandomLearner, needs), true, false, 0},
  {NULL}
};

size_t const TRandomLearner_components[] = { offsetof(TRandomLearner, probabilities), 0};
TClassDescription TRandomLearner::st_classDescription = { "TRandomLearner", &typeid(TRandomLearner), &TLearner::st_classDescription, TRandomLearner_properties, TRandomLearner_components };
TClassDescription const *TRandomLearner::classDescription() const { return &TRandomLearner::st_classDescription; }
TOrange *TRandomLearner::clone() const { return mlnew TRandomLearner(*this); }
