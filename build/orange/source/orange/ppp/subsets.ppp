 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../subsets.hpp"
#include <cstddef>



/****** TSubsetsGenerator *****/


TPropertyDescription TSubsetsGenerator_properties[] = {
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_components[] = { offsetof(TSubsetsGenerator, varList), 0};
TClassDescription TSubsetsGenerator::st_classDescription = { "TSubsetsGenerator", &typeid(TSubsetsGenerator), &TOrange::st_classDescription, TSubsetsGenerator_properties, TSubsetsGenerator_components };
TClassDescription const *TSubsetsGenerator::classDescription() const { return &TSubsetsGenerator::st_classDescription; }


/****** TSubsetsGenerator_iterator *****/


TPropertyDescription TSubsetsGenerator_iterator_properties[] = {
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_iterator, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_iterator_components[] = { offsetof(TSubsetsGenerator_iterator, varList), 0};
TClassDescription TSubsetsGenerator_iterator::st_classDescription = { "TSubsetsGenerator_iterator", &typeid(TSubsetsGenerator_iterator), &TOrange::st_classDescription, TSubsetsGenerator_iterator_properties, TSubsetsGenerator_iterator_components };
TClassDescription const *TSubsetsGenerator_iterator::classDescription() const { return &TSubsetsGenerator_iterator::st_classDescription; }


/****** TSubsetsGenerator_constSize *****/


TPropertyDescription TSubsetsGenerator_constSize_properties[] = {
  {"B", "subset size", &typeid(int), NULL, offsetof(TSubsetsGenerator_constSize, B), false, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_constSize, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_constSize_components[] = { offsetof(TSubsetsGenerator_constSize, varList), 0};
TClassDescription TSubsetsGenerator_constSize::st_classDescription = { "TSubsetsGenerator_constSize", &typeid(TSubsetsGenerator_constSize), &TSubsetsGenerator::st_classDescription, TSubsetsGenerator_constSize_properties, TSubsetsGenerator_constSize_components };
TClassDescription const *TSubsetsGenerator_constSize::classDescription() const { return &TSubsetsGenerator_constSize::st_classDescription; }
TOrange *TSubsetsGenerator_constSize::clone() const { return mlnew TSubsetsGenerator_constSize(*this); }


/****** TSubsetsGenerator_constSize_iterator *****/


TPropertyDescription TSubsetsGenerator_constSize_iterator_properties[] = {
  {"more_to_come", "", &typeid(bool), NULL, offsetof(TSubsetsGenerator_constSize_iterator, moreToCome), true, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_constSize_iterator, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_constSize_iterator_components[] = { offsetof(TSubsetsGenerator_constSize_iterator, varList), 0};
TClassDescription TSubsetsGenerator_constSize_iterator::st_classDescription = { "TSubsetsGenerator_constSize_iterator", &typeid(TSubsetsGenerator_constSize_iterator), &TSubsetsGenerator_iterator::st_classDescription, TSubsetsGenerator_constSize_iterator_properties, TSubsetsGenerator_constSize_iterator_components };
TClassDescription const *TSubsetsGenerator_constSize_iterator::classDescription() const { return &TSubsetsGenerator_constSize_iterator::st_classDescription; }
TOrange *TSubsetsGenerator_constSize_iterator::clone() const { return mlnew TSubsetsGenerator_constSize_iterator(*this); }


/****** TSubsetsGenerator_minMaxSize *****/


TPropertyDescription TSubsetsGenerator_minMaxSize_properties[] = {
  {"min", "minimal subset size", &typeid(int), NULL, offsetof(TSubsetsGenerator_minMaxSize, min), false, false, 0},
  {"max", "maximal subset size", &typeid(int), NULL, offsetof(TSubsetsGenerator_minMaxSize, max), false, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_minMaxSize, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_minMaxSize_components[] = { offsetof(TSubsetsGenerator_minMaxSize, varList), 0};
TClassDescription TSubsetsGenerator_minMaxSize::st_classDescription = { "TSubsetsGenerator_minMaxSize", &typeid(TSubsetsGenerator_minMaxSize), &TSubsetsGenerator::st_classDescription, TSubsetsGenerator_minMaxSize_properties, TSubsetsGenerator_minMaxSize_components };
TClassDescription const *TSubsetsGenerator_minMaxSize::classDescription() const { return &TSubsetsGenerator_minMaxSize::st_classDescription; }
TOrange *TSubsetsGenerator_minMaxSize::clone() const { return mlnew TSubsetsGenerator_minMaxSize(*this); }


/****** TSubsetsGenerator_minMaxSize_iterator *****/


TPropertyDescription TSubsetsGenerator_minMaxSize_iterator_properties[] = {
  {"B", "", &typeid(int), NULL, offsetof(TSubsetsGenerator_minMaxSize_iterator, B), true, false, 0},
  {"max", "maximal subset size", &typeid(int), NULL, offsetof(TSubsetsGenerator_minMaxSize_iterator, max), false, false, 0},
  {"more_to_come", "", &typeid(bool), NULL, offsetof(TSubsetsGenerator_minMaxSize_iterator, moreToCome), true, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_minMaxSize_iterator, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_minMaxSize_iterator_components[] = { offsetof(TSubsetsGenerator_minMaxSize_iterator, varList), 0};
TClassDescription TSubsetsGenerator_minMaxSize_iterator::st_classDescription = { "TSubsetsGenerator_minMaxSize_iterator", &typeid(TSubsetsGenerator_minMaxSize_iterator), &TSubsetsGenerator_iterator::st_classDescription, TSubsetsGenerator_minMaxSize_iterator_properties, TSubsetsGenerator_minMaxSize_iterator_components };
TClassDescription const *TSubsetsGenerator_minMaxSize_iterator::classDescription() const { return &TSubsetsGenerator_minMaxSize_iterator::st_classDescription; }
TOrange *TSubsetsGenerator_minMaxSize_iterator::clone() const { return mlnew TSubsetsGenerator_minMaxSize_iterator(*this); }


/****** TSubsetsGenerator_constant *****/


TPropertyDescription TSubsetsGenerator_constant_properties[] = {
  {"constant", "a subset that is returned (once!)", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_constant, constant), false, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_constant, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_constant_components[] = { offsetof(TSubsetsGenerator_constant, constant), offsetof(TSubsetsGenerator_constant, varList), 0};
TClassDescription TSubsetsGenerator_constant::st_classDescription = { "TSubsetsGenerator_constant", &typeid(TSubsetsGenerator_constant), &TSubsetsGenerator::st_classDescription, TSubsetsGenerator_constant_properties, TSubsetsGenerator_constant_components };
TClassDescription const *TSubsetsGenerator_constant::classDescription() const { return &TSubsetsGenerator_constant::st_classDescription; }
TOrange *TSubsetsGenerator_constant::clone() const { return mlnew TSubsetsGenerator_constant(*this); }


/****** TSubsetsGenerator_constant_iterator *****/


TPropertyDescription TSubsetsGenerator_constant_iterator_properties[] = {
  {"constant", "a subset that is returned (once!)", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_constant_iterator, constant), false, false, 0},
  {"more_to_come", "", &typeid(bool), NULL, offsetof(TSubsetsGenerator_constant_iterator, moreToCome), false, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_constant_iterator, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_constant_iterator_components[] = { offsetof(TSubsetsGenerator_constant_iterator, constant), offsetof(TSubsetsGenerator_constant_iterator, varList), 0};
TClassDescription TSubsetsGenerator_constant_iterator::st_classDescription = { "TSubsetsGenerator_constant_iterator", &typeid(TSubsetsGenerator_constant_iterator), &TSubsetsGenerator_iterator::st_classDescription, TSubsetsGenerator_constant_iterator_properties, TSubsetsGenerator_constant_iterator_components };
TClassDescription const *TSubsetsGenerator_constant_iterator::classDescription() const { return &TSubsetsGenerator_constant_iterator::st_classDescription; }
TOrange *TSubsetsGenerator_constant_iterator::clone() const { return mlnew TSubsetsGenerator_constant_iterator(*this); }


/****** TSubsetsGenerator_withRestrictions *****/


TPropertyDescription TSubsetsGenerator_withRestrictions_properties[] = {
  {"sub_generator", "subset generator", &typeid(POrange), &TSubsetsGenerator::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions, subGenerator), false, false, 0},
  {"required", "set of required attributes", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions, required), false, false, 0},
  {"forbidden", "set of forbidden attributes", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions, forbidden), false, false, 0},
  {"forbidden_sub_subsets", "set of forbidden subsets (attributes that must not occur together)", &typeid(POrange), &TVarListList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions, forbiddenSubSubsets), false, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_withRestrictions_components[] = { offsetof(TSubsetsGenerator_withRestrictions, subGenerator), offsetof(TSubsetsGenerator_withRestrictions, required), offsetof(TSubsetsGenerator_withRestrictions, forbidden), offsetof(TSubsetsGenerator_withRestrictions, forbiddenSubSubsets), offsetof(TSubsetsGenerator_withRestrictions, varList), 0};
TClassDescription TSubsetsGenerator_withRestrictions::st_classDescription = { "TSubsetsGenerator_withRestrictions", &typeid(TSubsetsGenerator_withRestrictions), &TSubsetsGenerator::st_classDescription, TSubsetsGenerator_withRestrictions_properties, TSubsetsGenerator_withRestrictions_components };
TClassDescription const *TSubsetsGenerator_withRestrictions::classDescription() const { return &TSubsetsGenerator_withRestrictions::st_classDescription; }
TOrange *TSubsetsGenerator_withRestrictions::clone() const { return mlnew TSubsetsGenerator_withRestrictions(*this); }


/****** TSubsetsGenerator_withRestrictions_iterator *****/


TPropertyDescription TSubsetsGenerator_withRestrictions_iterator_properties[] = {
  {"sub_generator_iterator", "subset generator", &typeid(POrange), &TSubsetsGenerator_iterator::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions_iterator, subGenerator_iterator), false, false, 0},
  {"required", "set of required attributes", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions_iterator, required), false, false, 0},
  {"forbidden", "set of forbidden attributes", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions_iterator, forbidden), false, false, 0},
  {"forbidden_sub_subsets", "set of forbidden subsets (attributes that must not occur together)", &typeid(POrange), &TVarListList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions_iterator, forbiddenSubSubsets), false, false, 0},
  {"var_list", "a set of attributes from which subsets are generated", &typeid(POrange), &TVarList::st_classDescription, offsetof(TSubsetsGenerator_withRestrictions_iterator, varList), false, false, 0},
  {NULL}
};

size_t const TSubsetsGenerator_withRestrictions_iterator_components[] = { offsetof(TSubsetsGenerator_withRestrictions_iterator, subGenerator_iterator), offsetof(TSubsetsGenerator_withRestrictions_iterator, required), offsetof(TSubsetsGenerator_withRestrictions_iterator, forbidden), offsetof(TSubsetsGenerator_withRestrictions_iterator, forbiddenSubSubsets), offsetof(TSubsetsGenerator_withRestrictions_iterator, varList), 0};
TClassDescription TSubsetsGenerator_withRestrictions_iterator::st_classDescription = { "TSubsetsGenerator_withRestrictions_iterator", &typeid(TSubsetsGenerator_withRestrictions_iterator), &TSubsetsGenerator_iterator::st_classDescription, TSubsetsGenerator_withRestrictions_iterator_properties, TSubsetsGenerator_withRestrictions_iterator_components };
TClassDescription const *TSubsetsGenerator_withRestrictions_iterator::classDescription() const { return &TSubsetsGenerator_withRestrictions_iterator::st_classDescription; }
TOrange *TSubsetsGenerator_withRestrictions_iterator::clone() const { return mlnew TSubsetsGenerator_withRestrictions_iterator(*this); }
