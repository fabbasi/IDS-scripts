 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../contingency.hpp"
#include <cstddef>



/****** TContingency *****/

void *PTVariable_Type(void *);

TPropertyDescription TContingency_properties[] = {
  {"outer_variable", "outer attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingency, outerVariable), false, false, 0},
  {"inner_variable", "inner attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingency, innerVariable), false, false, 0},
  {"var_type", " outer attribute type", &typeid(int), NULL, offsetof(TContingency, varType), false, false, PTVariable_Type},
  {"outer_distribution", "distribution of values of outer attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingency, outerDistribution), false, false, 0},
  {"inner_distribution", "distribution of values of inner attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingency, innerDistribution), false, false, 0},
  {"inner_distribution_unknown", "distribution of inner variable for examples where the outer value was unknown", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingency, innerDistributionUnknown), false, false, 0},
  {NULL}
};

size_t const TContingency_components[] = { offsetof(TContingency, outerVariable), offsetof(TContingency, innerVariable), offsetof(TContingency, outerDistribution), offsetof(TContingency, innerDistribution), offsetof(TContingency, innerDistributionUnknown), 0};
TClassDescription TContingency::st_classDescription = { "TContingency", &typeid(TContingency), &TOrange::st_classDescription, TContingency_properties, TContingency_components };
TClassDescription const *TContingency::classDescription() const { return &TContingency::st_classDescription; }
TOrange *TContingency::clone() const { return mlnew TContingency(*this); }


/****** TContingencyClass *****/

void *PTVariable_Type(void *);

TPropertyDescription TContingencyClass_properties[] = {
  {"outer_variable", "outer attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyClass, outerVariable), false, false, 0},
  {"inner_variable", "inner attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyClass, innerVariable), false, false, 0},
  {"var_type", " outer attribute type", &typeid(int), NULL, offsetof(TContingencyClass, varType), false, false, PTVariable_Type},
  {"outer_distribution", "distribution of values of outer attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyClass, outerDistribution), false, false, 0},
  {"inner_distribution", "distribution of values of inner attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyClass, innerDistribution), false, false, 0},
  {"inner_distribution_unknown", "distribution of inner variable for examples where the outer value was unknown", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyClass, innerDistributionUnknown), false, false, 0},
  {NULL}
};

size_t const TContingencyClass_components[] = { offsetof(TContingencyClass, outerVariable), offsetof(TContingencyClass, innerVariable), offsetof(TContingencyClass, outerDistribution), offsetof(TContingencyClass, innerDistribution), offsetof(TContingencyClass, innerDistributionUnknown), 0};
TClassDescription TContingencyClass::st_classDescription = { "TContingencyClass", &typeid(TContingencyClass), &TContingency::st_classDescription, TContingencyClass_properties, TContingencyClass_components };
TClassDescription const *TContingencyClass::classDescription() const { return &TContingencyClass::st_classDescription; }


/****** TContingencyClassAttr *****/

void *PTVariable_Type(void *);

TPropertyDescription TContingencyClassAttr_properties[] = {
  {"outer_variable", "outer attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyClassAttr, outerVariable), false, false, 0},
  {"inner_variable", "inner attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyClassAttr, innerVariable), false, false, 0},
  {"var_type", " outer attribute type", &typeid(int), NULL, offsetof(TContingencyClassAttr, varType), false, false, PTVariable_Type},
  {"outer_distribution", "distribution of values of outer attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyClassAttr, outerDistribution), false, false, 0},
  {"inner_distribution", "distribution of values of inner attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyClassAttr, innerDistribution), false, false, 0},
  {"inner_distribution_unknown", "distribution of inner variable for examples where the outer value was unknown", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyClassAttr, innerDistributionUnknown), false, false, 0},
  {NULL}
};

size_t const TContingencyClassAttr_components[] = { offsetof(TContingencyClassAttr, outerVariable), offsetof(TContingencyClassAttr, innerVariable), offsetof(TContingencyClassAttr, outerDistribution), offsetof(TContingencyClassAttr, innerDistribution), offsetof(TContingencyClassAttr, innerDistributionUnknown), 0};
TClassDescription TContingencyClassAttr::st_classDescription = { "TContingencyClassAttr", &typeid(TContingencyClassAttr), &TContingencyClass::st_classDescription, TContingencyClassAttr_properties, TContingencyClassAttr_components };
TClassDescription const *TContingencyClassAttr::classDescription() const { return &TContingencyClassAttr::st_classDescription; }
TOrange *TContingencyClassAttr::clone() const { return mlnew TContingencyClassAttr(*this); }


/****** TContingencyAttrClass *****/

void *PTVariable_Type(void *);

TPropertyDescription TContingencyAttrClass_properties[] = {
  {"outer_variable", "outer attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyAttrClass, outerVariable), false, false, 0},
  {"inner_variable", "inner attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyAttrClass, innerVariable), false, false, 0},
  {"var_type", " outer attribute type", &typeid(int), NULL, offsetof(TContingencyAttrClass, varType), false, false, PTVariable_Type},
  {"outer_distribution", "distribution of values of outer attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyAttrClass, outerDistribution), false, false, 0},
  {"inner_distribution", "distribution of values of inner attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyAttrClass, innerDistribution), false, false, 0},
  {"inner_distribution_unknown", "distribution of inner variable for examples where the outer value was unknown", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyAttrClass, innerDistributionUnknown), false, false, 0},
  {NULL}
};

size_t const TContingencyAttrClass_components[] = { offsetof(TContingencyAttrClass, outerVariable), offsetof(TContingencyAttrClass, innerVariable), offsetof(TContingencyAttrClass, outerDistribution), offsetof(TContingencyAttrClass, innerDistribution), offsetof(TContingencyAttrClass, innerDistributionUnknown), 0};
TClassDescription TContingencyAttrClass::st_classDescription = { "TContingencyAttrClass", &typeid(TContingencyAttrClass), &TContingencyClass::st_classDescription, TContingencyAttrClass_properties, TContingencyAttrClass_components };
TClassDescription const *TContingencyAttrClass::classDescription() const { return &TContingencyAttrClass::st_classDescription; }
TOrange *TContingencyAttrClass::clone() const { return mlnew TContingencyAttrClass(*this); }


/****** TContingencyAttrAttr *****/

void *PTVariable_Type(void *);

TPropertyDescription TContingencyAttrAttr_properties[] = {
  {"outer_variable", "outer attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyAttrAttr, outerVariable), false, false, 0},
  {"inner_variable", "inner attribute", &typeid(POrange), &TVariable::st_classDescription, offsetof(TContingencyAttrAttr, innerVariable), false, false, 0},
  {"var_type", " outer attribute type", &typeid(int), NULL, offsetof(TContingencyAttrAttr, varType), false, false, PTVariable_Type},
  {"outer_distribution", "distribution of values of outer attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyAttrAttr, outerDistribution), false, false, 0},
  {"inner_distribution", "distribution of values of inner attributes", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyAttrAttr, innerDistribution), false, false, 0},
  {"inner_distribution_unknown", "distribution of inner variable for examples where the outer value was unknown", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TContingencyAttrAttr, innerDistributionUnknown), false, false, 0},
  {NULL}
};

size_t const TContingencyAttrAttr_components[] = { offsetof(TContingencyAttrAttr, outerVariable), offsetof(TContingencyAttrAttr, innerVariable), offsetof(TContingencyAttrAttr, outerDistribution), offsetof(TContingencyAttrAttr, innerDistribution), offsetof(TContingencyAttrAttr, innerDistributionUnknown), 0};
TClassDescription TContingencyAttrAttr::st_classDescription = { "TContingencyAttrAttr", &typeid(TContingencyAttrAttr), &TContingency::st_classDescription, TContingencyAttrAttr_properties, TContingencyAttrAttr_components };
TClassDescription const *TContingencyAttrAttr::classDescription() const { return &TContingencyAttrAttr::st_classDescription; }
TOrange *TContingencyAttrAttr::clone() const { return mlnew TContingencyAttrAttr(*this); }


/****** TDomainContingency *****/


TPropertyDescription TDomainContingency_properties[] = {
  {"classes", "distribution of class values", &typeid(POrange), &TDistribution::st_classDescription, offsetof(TDomainContingency, classes), false, false, 0},
  {"class_is_outer", "tells whether the class is the outer variable", &typeid(bool), NULL, offsetof(TDomainContingency, classIsOuter), false, false, 0},
  {NULL}
};

size_t const TDomainContingency_components[] = { offsetof(TDomainContingency, classes), 0};
TClassDescription TDomainContingency::st_classDescription = { "TDomainContingency", &typeid(TDomainContingency), &TOrange::st_classDescription, TDomainContingency_properties, TDomainContingency_components };
TClassDescription const *TDomainContingency::classDescription() const { return &TDomainContingency::st_classDescription; }
TOrange *TDomainContingency::clone() const { return mlnew TDomainContingency(*this); }


/****** TComputeDomainContingency *****/


TPropertyDescription TComputeDomainContingency_properties[] = {
  {"class_is_outer", "tells whether the class is the outer variable in contingencies", &typeid(bool), NULL, offsetof(TComputeDomainContingency, classIsOuter), false, false, 0},
  {NULL}
};

size_t const TComputeDomainContingency_components[] = { 0};
TClassDescription TComputeDomainContingency::st_classDescription = { "TComputeDomainContingency", &typeid(TComputeDomainContingency), &TOrange::st_classDescription, TComputeDomainContingency_properties, TComputeDomainContingency_components };
TClassDescription const *TComputeDomainContingency::classDescription() const { return &TComputeDomainContingency::st_classDescription; }
TOrange *TComputeDomainContingency::clone() const { return mlnew TComputeDomainContingency(*this); }
