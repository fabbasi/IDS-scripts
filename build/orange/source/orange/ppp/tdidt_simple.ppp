 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../tdidt_simple.hpp"
#include <cstddef>



/****** TSimpleTreeLearner *****/


TPropertyDescription TSimpleTreeLearner_properties[] = {
  {"max_majority", "", &typeid(float), NULL, offsetof(TSimpleTreeLearner, maxMajority), false, false, 0},
  {"min_instances", "", &typeid(int), NULL, offsetof(TSimpleTreeLearner, minInstances), false, false, 0},
  {"max_depth", "", &typeid(int), NULL, offsetof(TSimpleTreeLearner, maxDepth), false, false, 0},
  {"skip_prob", "", &typeid(float), NULL, offsetof(TSimpleTreeLearner, skipProb), false, false, 0},
  {"random_generator", "", &typeid(POrange), &TRandomGenerator::st_classDescription, offsetof(TSimpleTreeLearner, randomGenerator), false, false, 0},
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TSimpleTreeLearner, needs), true, false, 0},
  {NULL}
};

size_t const TSimpleTreeLearner_components[] = { offsetof(TSimpleTreeLearner, randomGenerator), 0};
TClassDescription TSimpleTreeLearner::st_classDescription = { "TSimpleTreeLearner", &typeid(TSimpleTreeLearner), &TLearner::st_classDescription, TSimpleTreeLearner_properties, TSimpleTreeLearner_components };
TClassDescription const *TSimpleTreeLearner::classDescription() const { return &TSimpleTreeLearner::st_classDescription; }
TOrange *TSimpleTreeLearner::clone() const { return mlnew TSimpleTreeLearner(*this); }


/****** TSimpleTreeClassifier *****/


TPropertyDescription TSimpleTreeClassifier_properties[] = {
  {"class_var", "class variable", &typeid(POrange), &TVariable::st_classDescription, offsetof(TSimpleTreeClassifier, classVar), false, false, 0},
  {"computes_probabilities", "set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)", &typeid(bool), NULL, offsetof(TSimpleTreeClassifier, computesProbabilities), false, false, 0},
  {NULL}
};

size_t const TSimpleTreeClassifier_components[] = { offsetof(TSimpleTreeClassifier, classVar), 0};
TClassDescription TSimpleTreeClassifier::st_classDescription = { "TSimpleTreeClassifier", &typeid(TSimpleTreeClassifier), &TClassifier::st_classDescription, TSimpleTreeClassifier_properties, TSimpleTreeClassifier_components };
TClassDescription const *TSimpleTreeClassifier::classDescription() const { return &TSimpleTreeClassifier::st_classDescription; }
TOrange *TSimpleTreeClassifier::clone() const { return mlnew TSimpleTreeClassifier(*this); }
