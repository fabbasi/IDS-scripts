 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../discretize.hpp"
#include <cstddef>



/****** TDiscretization *****/


TPropertyDescription TDiscretization_properties[] = {
  {NULL}
};

size_t const TDiscretization_components[] = { 0};
TClassDescription TDiscretization::st_classDescription = { "TDiscretization", &typeid(TDiscretization), &TOrange::st_classDescription, TDiscretization_properties, TDiscretization_components };
TClassDescription const *TDiscretization::classDescription() const { return &TDiscretization::st_classDescription; }


/****** TDiscretizer *****/


TPropertyDescription TDiscretizer_properties[] = {
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TDiscretizer, subTransform), false, false, 0},
  {NULL}
};

size_t const TDiscretizer_components[] = { offsetof(TDiscretizer, subTransform), 0};
TClassDescription TDiscretizer::st_classDescription = { "TDiscretizer", &typeid(TDiscretizer), &TTransformValue::st_classDescription, TDiscretizer_properties, TDiscretizer_components };
TClassDescription const *TDiscretizer::classDescription() const { return &TDiscretizer::st_classDescription; }


/****** TDomainDiscretization *****/


TPropertyDescription TDomainDiscretization_properties[] = {
  {"discretization", "discretization", &typeid(POrange), &TDiscretization::st_classDescription, offsetof(TDomainDiscretization, discretization), false, false, 0},
  {NULL}
};

size_t const TDomainDiscretization_components[] = { offsetof(TDomainDiscretization, discretization), 0};
TClassDescription TDomainDiscretization::st_classDescription = { "TDomainDiscretization", &typeid(TDomainDiscretization), &TOrange::st_classDescription, TDomainDiscretization_properties, TDomainDiscretization_components };
TClassDescription const *TDomainDiscretization::classDescription() const { return &TDomainDiscretization::st_classDescription; }
TOrange *TDomainDiscretization::clone() const { return mlnew TDomainDiscretization(*this); }


/****** TEquiDistDiscretizer *****/


TPropertyDescription TEquiDistDiscretizer_properties[] = {
  {"numberOfIntervals", " number of intervals", &typeid(int), NULL, offsetof(TEquiDistDiscretizer, numberOfIntervals), false, false, 0},
  {"n", " number of intervals", &typeid(int), NULL, offsetof(TEquiDistDiscretizer, numberOfIntervals), false, false, 0},
  {"first_cut", "the first cut-off point", &typeid(float), NULL, offsetof(TEquiDistDiscretizer, firstCut), false, false, 0},
  {"step", "step (width of interval)", &typeid(float), NULL, offsetof(TEquiDistDiscretizer, step), false, false, 0},
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TEquiDistDiscretizer, subTransform), false, false, 0},
  {NULL}
};

size_t const TEquiDistDiscretizer_components[] = { offsetof(TEquiDistDiscretizer, subTransform), 0};
TClassDescription TEquiDistDiscretizer::st_classDescription = { "TEquiDistDiscretizer", &typeid(TEquiDistDiscretizer), &TDiscretizer::st_classDescription, TEquiDistDiscretizer_properties, TEquiDistDiscretizer_components };
TClassDescription const *TEquiDistDiscretizer::classDescription() const { return &TEquiDistDiscretizer::st_classDescription; }
TOrange *TEquiDistDiscretizer::clone() const { return mlnew TEquiDistDiscretizer(*this); }


/****** TThresholdDiscretizer *****/


TPropertyDescription TThresholdDiscretizer_properties[] = {
  {"threshold", "threshold", &typeid(float), NULL, offsetof(TThresholdDiscretizer, threshold), false, false, 0},
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TThresholdDiscretizer, subTransform), false, false, 0},
  {NULL}
};

size_t const TThresholdDiscretizer_components[] = { offsetof(TThresholdDiscretizer, subTransform), 0};
TClassDescription TThresholdDiscretizer::st_classDescription = { "TThresholdDiscretizer", &typeid(TThresholdDiscretizer), &TDiscretizer::st_classDescription, TThresholdDiscretizer_properties, TThresholdDiscretizer_components };
TClassDescription const *TThresholdDiscretizer::classDescription() const { return &TThresholdDiscretizer::st_classDescription; }
TOrange *TThresholdDiscretizer::clone() const { return mlnew TThresholdDiscretizer(*this); }


/****** TIntervalDiscretizer *****/


TPropertyDescription TIntervalDiscretizer_properties[] = {
  {"points", "cut-off points", &typeid(POrange), &TFloatList::st_classDescription, offsetof(TIntervalDiscretizer, points), false, false, 0},
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TIntervalDiscretizer, subTransform), false, false, 0},
  {NULL}
};

size_t const TIntervalDiscretizer_components[] = { offsetof(TIntervalDiscretizer, points), offsetof(TIntervalDiscretizer, subTransform), 0};
TClassDescription TIntervalDiscretizer::st_classDescription = { "TIntervalDiscretizer", &typeid(TIntervalDiscretizer), &TDiscretizer::st_classDescription, TIntervalDiscretizer_properties, TIntervalDiscretizer_components };
TClassDescription const *TIntervalDiscretizer::classDescription() const { return &TIntervalDiscretizer::st_classDescription; }
TOrange *TIntervalDiscretizer::clone() const { return mlnew TIntervalDiscretizer(*this); }


/****** TBiModalDiscretizer *****/


TPropertyDescription TBiModalDiscretizer_properties[] = {
  {"low", "low threshold", &typeid(float), NULL, offsetof(TBiModalDiscretizer, low), false, false, 0},
  {"high", "high threshold", &typeid(float), NULL, offsetof(TBiModalDiscretizer, high), false, false, 0},
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TBiModalDiscretizer, subTransform), false, false, 0},
  {NULL}
};

size_t const TBiModalDiscretizer_components[] = { offsetof(TBiModalDiscretizer, subTransform), 0};
TClassDescription TBiModalDiscretizer::st_classDescription = { "TBiModalDiscretizer", &typeid(TBiModalDiscretizer), &TDiscretizer::st_classDescription, TBiModalDiscretizer_properties, TBiModalDiscretizer_components };
TClassDescription const *TBiModalDiscretizer::classDescription() const { return &TBiModalDiscretizer::st_classDescription; }
TOrange *TBiModalDiscretizer::clone() const { return mlnew TBiModalDiscretizer(*this); }


/****** TEquiDistDiscretization *****/


TPropertyDescription TEquiDistDiscretization_properties[] = {
  {"numberOfIntervals", " number of intervals", &typeid(int), NULL, offsetof(TEquiDistDiscretization, numberOfIntervals), false, false, 0},
  {"n", " number of intervals", &typeid(int), NULL, offsetof(TEquiDistDiscretization, numberOfIntervals), false, false, 0},
  {NULL}
};

size_t const TEquiDistDiscretization_components[] = { 0};
TClassDescription TEquiDistDiscretization::st_classDescription = { "TEquiDistDiscretization", &typeid(TEquiDistDiscretization), &TDiscretization::st_classDescription, TEquiDistDiscretization_properties, TEquiDistDiscretization_components };
TClassDescription const *TEquiDistDiscretization::classDescription() const { return &TEquiDistDiscretization::st_classDescription; }
TOrange *TEquiDistDiscretization::clone() const { return mlnew TEquiDistDiscretization(*this); }


/****** TFixedDiscretization *****/


TPropertyDescription TFixedDiscretization_properties[] = {
  {"points", "cut-off points", &typeid(POrange), &TFloatList::st_classDescription, offsetof(TFixedDiscretization, points), false, false, 0},
  {NULL}
};

size_t const TFixedDiscretization_components[] = { offsetof(TFixedDiscretization, points), 0};
TClassDescription TFixedDiscretization::st_classDescription = { "TFixedDiscretization", &typeid(TFixedDiscretization), &TDiscretization::st_classDescription, TFixedDiscretization_properties, TFixedDiscretization_components };
TClassDescription const *TFixedDiscretization::classDescription() const { return &TFixedDiscretization::st_classDescription; }
TOrange *TFixedDiscretization::clone() const { return mlnew TFixedDiscretization(*this); }


/****** TEquiNDiscretization *****/


TPropertyDescription TEquiNDiscretization_properties[] = {
  {"numberOfIntervals", " number of intervals", &typeid(int), NULL, offsetof(TEquiNDiscretization, numberOfIntervals), false, false, 0},
  {"n", " number of intervals", &typeid(int), NULL, offsetof(TEquiNDiscretization, numberOfIntervals), false, false, 0},
  {"recursive_division", "find cut-off points by recursive division (default = true)", &typeid(bool), NULL, offsetof(TEquiNDiscretization, recursiveDivision), false, false, 0},
  {NULL}
};

size_t const TEquiNDiscretization_components[] = { 0};
TClassDescription TEquiNDiscretization::st_classDescription = { "TEquiNDiscretization", &typeid(TEquiNDiscretization), &TDiscretization::st_classDescription, TEquiNDiscretization_properties, TEquiNDiscretization_components };
TClassDescription const *TEquiNDiscretization::classDescription() const { return &TEquiNDiscretization::st_classDescription; }
TOrange *TEquiNDiscretization::clone() const { return mlnew TEquiNDiscretization(*this); }


/****** TEntropyDiscretization *****/


TPropertyDescription TEntropyDiscretization_properties[] = {
  {"maxNumberOfIntervals", " maximal number of intervals; default = 0 (no limits)", &typeid(int), NULL, offsetof(TEntropyDiscretization, maxNumberOfIntervals), false, false, 0},
  {"n", " maximal number of intervals; default = 0 (no limits)", &typeid(int), NULL, offsetof(TEntropyDiscretization, maxNumberOfIntervals), false, false, 0},
  {"forceAttribute", " minimal number of intervals; default = 0 (no limits)", &typeid(bool), NULL, offsetof(TEntropyDiscretization, forceAttribute), false, false, 0},
  {"forced", " minimal number of intervals; default = 0 (no limits)", &typeid(bool), NULL, offsetof(TEntropyDiscretization, forceAttribute), false, false, 0},
  {NULL}
};

size_t const TEntropyDiscretization_components[] = { 0};
TClassDescription TEntropyDiscretization::st_classDescription = { "TEntropyDiscretization", &typeid(TEntropyDiscretization), &TDiscretization::st_classDescription, TEntropyDiscretization_properties, TEntropyDiscretization_components };
TClassDescription const *TEntropyDiscretization::classDescription() const { return &TEntropyDiscretization::st_classDescription; }
TOrange *TEntropyDiscretization::clone() const { return mlnew TEntropyDiscretization(*this); }


/****** TBiModalDiscretization *****/


TPropertyDescription TBiModalDiscretization_properties[] = {
  {"split_in_two", "if true (default), flanks are merged into a single interval", &typeid(bool), NULL, offsetof(TBiModalDiscretization, splitInTwo), false, false, 0},
  {NULL}
};

size_t const TBiModalDiscretization_components[] = { 0};
TClassDescription TBiModalDiscretization::st_classDescription = { "TBiModalDiscretization", &typeid(TBiModalDiscretization), &TDiscretization::st_classDescription, TBiModalDiscretization_properties, TBiModalDiscretization_components };
TClassDescription const *TBiModalDiscretization::classDescription() const { return &TBiModalDiscretization::st_classDescription; }
TOrange *TBiModalDiscretization::clone() const { return mlnew TBiModalDiscretization(*this); }
