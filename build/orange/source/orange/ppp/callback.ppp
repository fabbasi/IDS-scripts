 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../callback.hpp"
#include <cstddef>



/****** TFilter_Python *****/


TPropertyDescription TFilter_Python_properties[] = {
  {"negate", "if true, filter output should be negated.", &typeid(bool), NULL, offsetof(TFilter_Python, negate), false, false, 0},
  {"domain", "domain to which the examples are converted (if needed)", &typeid(POrange), &TDomain::st_classDescription, offsetof(TFilter_Python, domain), false, false, 0},
  {NULL}
};

size_t const TFilter_Python_components[] = { offsetof(TFilter_Python, domain), 0};
TClassDescription TFilter_Python::st_classDescription = { "TFilter_Python", &typeid(TFilter_Python), &TFilter::st_classDescription, TFilter_Python_properties, TFilter_Python_components };
TClassDescription const *TFilter_Python::classDescription() const { return &TFilter_Python::st_classDescription; }
TOrange *TFilter_Python::clone() const { return mlnew TFilter_Python(*this); }


/****** TTransformValue_Python *****/


TPropertyDescription TTransformValue_Python_properties[] = {
  {"sub_transform", "transformation executed prior to this", &typeid(POrange), &TTransformValue::st_classDescription, offsetof(TTransformValue_Python, subTransform), false, false, 0},
  {NULL}
};

size_t const TTransformValue_Python_components[] = { offsetof(TTransformValue_Python, subTransform), 0};
TClassDescription TTransformValue_Python::st_classDescription = { "TTransformValue_Python", &typeid(TTransformValue_Python), &TTransformValue::st_classDescription, TTransformValue_Python_properties, TTransformValue_Python_components };
TClassDescription const *TTransformValue_Python::classDescription() const { return &TTransformValue_Python::st_classDescription; }
TOrange *TTransformValue_Python::clone() const { return mlnew TTransformValue_Python(*this); }


/****** TMeasureAttribute_Python *****/

void *PTMeasureAttribute_Needs(void *);

TPropertyDescription TMeasureAttribute_Python_properties[] = {
  {"needs", " describes what kind of data is needed for computation", &typeid(int), NULL, offsetof(TMeasureAttribute_Python, needs), false, false, PTMeasureAttribute_Needs},
  {"handles_discrete", "tells whether the measure can handle discrete attributes", &typeid(bool), NULL, offsetof(TMeasureAttribute_Python, handlesDiscrete), false, false, 0},
  {"handles_continuous", "tells whether the measure can handle continuous attributes", &typeid(bool), NULL, offsetof(TMeasureAttribute_Python, handlesContinuous), false, false, 0},
  {"computes_thresholds", "tells whether the measure can compute threshold functions/maxima for continuous attributes", &typeid(bool), NULL, offsetof(TMeasureAttribute_Python, computesThresholds), false, false, 0},
  {NULL}
};

size_t const TMeasureAttribute_Python_components[] = { 0};
TClassDescription TMeasureAttribute_Python::st_classDescription = { "TMeasureAttribute_Python", &typeid(TMeasureAttribute_Python), &TMeasureAttribute::st_classDescription, TMeasureAttribute_Python_properties, TMeasureAttribute_Python_components };
TClassDescription const *TMeasureAttribute_Python::classDescription() const { return &TMeasureAttribute_Python::st_classDescription; }
TOrange *TMeasureAttribute_Python::clone() const { return mlnew TMeasureAttribute_Python(*this); }


/****** TLearner_Python *****/


TPropertyDescription TLearner_Python_properties[] = {
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TLearner_Python, needs), true, false, 0},
  {NULL}
};

size_t const TLearner_Python_components[] = { 0};
TClassDescription TLearner_Python::st_classDescription = { "TLearner_Python", &typeid(TLearner_Python), &TLearner::st_classDescription, TLearner_Python_properties, TLearner_Python_components };
TClassDescription const *TLearner_Python::classDescription() const { return &TLearner_Python::st_classDescription; }
TOrange *TLearner_Python::clone() const { return mlnew TLearner_Python(*this); }


/****** TLogRegFitter_Python *****/


TPropertyDescription TLogRegFitter_Python_properties[] = {
  {NULL}
};

size_t const TLogRegFitter_Python_components[] = { 0};
TClassDescription TLogRegFitter_Python::st_classDescription = { "TLogRegFitter_Python", &typeid(TLogRegFitter_Python), &TLogRegFitter::st_classDescription, TLogRegFitter_Python_properties, TLogRegFitter_Python_components };
TClassDescription const *TLogRegFitter_Python::classDescription() const { return &TLogRegFitter_Python::st_classDescription; }
TOrange *TLogRegFitter_Python::clone() const { return mlnew TLogRegFitter_Python(*this); }


/****** TClassifier_Python *****/


TPropertyDescription TClassifier_Python_properties[] = {
  {"class_var", "class variable", &typeid(POrange), &TVariable::st_classDescription, offsetof(TClassifier_Python, classVar), false, false, 0},
  {"computes_probabilities", "set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)", &typeid(bool), NULL, offsetof(TClassifier_Python, computesProbabilities), false, false, 0},
  {NULL}
};

size_t const TClassifier_Python_components[] = { offsetof(TClassifier_Python, classVar), 0};
TClassDescription TClassifier_Python::st_classDescription = { "TClassifier_Python", &typeid(TClassifier_Python), &TClassifier::st_classDescription, TClassifier_Python_properties, TClassifier_Python_components };
TClassDescription const *TClassifier_Python::classDescription() const { return &TClassifier_Python::st_classDescription; }
TOrange *TClassifier_Python::clone() const { return mlnew TClassifier_Python(*this); }


/****** TTreeSplitConstructor_Python *****/


TPropertyDescription TTreeSplitConstructor_Python_properties[] = {
  {"min_subset", "minimal number of examples in a subset", &typeid(float), NULL, offsetof(TTreeSplitConstructor_Python, minSubset), false, false, 0},
  {NULL}
};

size_t const TTreeSplitConstructor_Python_components[] = { 0};
TClassDescription TTreeSplitConstructor_Python::st_classDescription = { "TTreeSplitConstructor_Python", &typeid(TTreeSplitConstructor_Python), &TTreeSplitConstructor::st_classDescription, TTreeSplitConstructor_Python_properties, TTreeSplitConstructor_Python_components };
TClassDescription const *TTreeSplitConstructor_Python::classDescription() const { return &TTreeSplitConstructor_Python::st_classDescription; }
TOrange *TTreeSplitConstructor_Python::clone() const { return mlnew TTreeSplitConstructor_Python(*this); }


/****** TTreeStopCriteria_Python *****/


TPropertyDescription TTreeStopCriteria_Python_properties[] = {
  {NULL}
};

size_t const TTreeStopCriteria_Python_components[] = { 0};
TClassDescription TTreeStopCriteria_Python::st_classDescription = { "TTreeStopCriteria_Python", &typeid(TTreeStopCriteria_Python), &TTreeStopCriteria::st_classDescription, TTreeStopCriteria_Python_properties, TTreeStopCriteria_Python_components };
TClassDescription const *TTreeStopCriteria_Python::classDescription() const { return &TTreeStopCriteria_Python::st_classDescription; }
TOrange *TTreeStopCriteria_Python::clone() const { return mlnew TTreeStopCriteria_Python(*this); }


/****** TTreeDescender_Python *****/


TPropertyDescription TTreeDescender_Python_properties[] = {
  {NULL}
};

size_t const TTreeDescender_Python_components[] = { 0};
TClassDescription TTreeDescender_Python::st_classDescription = { "TTreeDescender_Python", &typeid(TTreeDescender_Python), &TTreeDescender::st_classDescription, TTreeDescender_Python_properties, TTreeDescender_Python_components };
TClassDescription const *TTreeDescender_Python::classDescription() const { return &TTreeDescender_Python::st_classDescription; }
TOrange *TTreeDescender_Python::clone() const { return mlnew TTreeDescender_Python(*this); }


/****** TTreeExampleSplitter_Python *****/


TPropertyDescription TTreeExampleSplitter_Python_properties[] = {
  {NULL}
};

size_t const TTreeExampleSplitter_Python_components[] = { 0};
TClassDescription TTreeExampleSplitter_Python::st_classDescription = { "TTreeExampleSplitter_Python", &typeid(TTreeExampleSplitter_Python), &TTreeExampleSplitter::st_classDescription, TTreeExampleSplitter_Python_properties, TTreeExampleSplitter_Python_components };
TClassDescription const *TTreeExampleSplitter_Python::classDescription() const { return &TTreeExampleSplitter_Python::st_classDescription; }
TOrange *TTreeExampleSplitter_Python::clone() const { return mlnew TTreeExampleSplitter_Python(*this); }


/****** TProgressCallback_Python *****/


TPropertyDescription TProgressCallback_Python_properties[] = {
  {NULL}
};

size_t const TProgressCallback_Python_components[] = { 0};
TClassDescription TProgressCallback_Python::st_classDescription = { "TProgressCallback_Python", &typeid(TProgressCallback_Python), &TProgressCallback::st_classDescription, TProgressCallback_Python_properties, TProgressCallback_Python_components };
TClassDescription const *TProgressCallback_Python::classDescription() const { return &TProgressCallback_Python::st_classDescription; }
TOrange *TProgressCallback_Python::clone() const { return mlnew TProgressCallback_Python(*this); }


/****** TImputerConstruct_Python *****/


TPropertyDescription TImputerConstruct_Python_properties[] = {
  {"impute_class", "tells whether to impute the class value (default: true)", &typeid(bool), NULL, offsetof(TImputerConstruct_Python, imputeClass), false, false, 0},
  {NULL}
};

size_t const TImputerConstruct_Python_components[] = { 0};
TClassDescription TImputerConstruct_Python::st_classDescription = { "TImputerConstruct_Python", &typeid(TImputerConstruct_Python), &TImputerConstructor::st_classDescription, TImputerConstruct_Python_properties, TImputerConstruct_Python_components };
TClassDescription const *TImputerConstruct_Python::classDescription() const { return &TImputerConstruct_Python::st_classDescription; }
TOrange *TImputerConstruct_Python::clone() const { return mlnew TImputerConstruct_Python(*this); }


/****** TImputer_Python *****/


TPropertyDescription TImputer_Python_properties[] = {
  {NULL}
};

size_t const TImputer_Python_components[] = { 0};
TClassDescription TImputer_Python::st_classDescription = { "TImputer_Python", &typeid(TImputer_Python), &TImputer::st_classDescription, TImputer_Python_properties, TImputer_Python_components };
TClassDescription const *TImputer_Python::classDescription() const { return &TImputer_Python::st_classDescription; }
TOrange *TImputer_Python::clone() const { return mlnew TImputer_Python(*this); }


/****** TRuleEvaluator_Python *****/


TPropertyDescription TRuleEvaluator_Python_properties[] = {
  {NULL}
};

size_t const TRuleEvaluator_Python_components[] = { 0};
TClassDescription TRuleEvaluator_Python::st_classDescription = { "TRuleEvaluator_Python", &typeid(TRuleEvaluator_Python), &TRuleEvaluator::st_classDescription, TRuleEvaluator_Python_properties, TRuleEvaluator_Python_components };
TClassDescription const *TRuleEvaluator_Python::classDescription() const { return &TRuleEvaluator_Python::st_classDescription; }
TOrange *TRuleEvaluator_Python::clone() const { return mlnew TRuleEvaluator_Python(*this); }


/****** TEVDistGetter_Python *****/


TPropertyDescription TEVDistGetter_Python_properties[] = {
  {NULL}
};

size_t const TEVDistGetter_Python_components[] = { 0};
TClassDescription TEVDistGetter_Python::st_classDescription = { "TEVDistGetter_Python", &typeid(TEVDistGetter_Python), &TEVDistGetter::st_classDescription, TEVDistGetter_Python_properties, TEVDistGetter_Python_components };
TClassDescription const *TEVDistGetter_Python::classDescription() const { return &TEVDistGetter_Python::st_classDescription; }
TOrange *TEVDistGetter_Python::clone() const { return mlnew TEVDistGetter_Python(*this); }


/****** TRuleValidator_Python *****/


TPropertyDescription TRuleValidator_Python_properties[] = {
  {NULL}
};

size_t const TRuleValidator_Python_components[] = { 0};
TClassDescription TRuleValidator_Python::st_classDescription = { "TRuleValidator_Python", &typeid(TRuleValidator_Python), &TRuleValidator::st_classDescription, TRuleValidator_Python_properties, TRuleValidator_Python_components };
TClassDescription const *TRuleValidator_Python::classDescription() const { return &TRuleValidator_Python::st_classDescription; }
TOrange *TRuleValidator_Python::clone() const { return mlnew TRuleValidator_Python(*this); }


/****** TRuleCovererAndRemover_Python *****/


TPropertyDescription TRuleCovererAndRemover_Python_properties[] = {
  {NULL}
};

size_t const TRuleCovererAndRemover_Python_components[] = { 0};
TClassDescription TRuleCovererAndRemover_Python::st_classDescription = { "TRuleCovererAndRemover_Python", &typeid(TRuleCovererAndRemover_Python), &TRuleCovererAndRemover::st_classDescription, TRuleCovererAndRemover_Python_properties, TRuleCovererAndRemover_Python_components };
TClassDescription const *TRuleCovererAndRemover_Python::classDescription() const { return &TRuleCovererAndRemover_Python::st_classDescription; }
TOrange *TRuleCovererAndRemover_Python::clone() const { return mlnew TRuleCovererAndRemover_Python(*this); }


/****** TRuleStoppingCriteria_Python *****/


TPropertyDescription TRuleStoppingCriteria_Python_properties[] = {
  {NULL}
};

size_t const TRuleStoppingCriteria_Python_components[] = { 0};
TClassDescription TRuleStoppingCriteria_Python::st_classDescription = { "TRuleStoppingCriteria_Python", &typeid(TRuleStoppingCriteria_Python), &TRuleStoppingCriteria::st_classDescription, TRuleStoppingCriteria_Python_properties, TRuleStoppingCriteria_Python_components };
TClassDescription const *TRuleStoppingCriteria_Python::classDescription() const { return &TRuleStoppingCriteria_Python::st_classDescription; }
TOrange *TRuleStoppingCriteria_Python::clone() const { return mlnew TRuleStoppingCriteria_Python(*this); }


/****** TRuleDataStoppingCriteria_Python *****/


TPropertyDescription TRuleDataStoppingCriteria_Python_properties[] = {
  {NULL}
};

size_t const TRuleDataStoppingCriteria_Python_components[] = { 0};
TClassDescription TRuleDataStoppingCriteria_Python::st_classDescription = { "TRuleDataStoppingCriteria_Python", &typeid(TRuleDataStoppingCriteria_Python), &TRuleDataStoppingCriteria::st_classDescription, TRuleDataStoppingCriteria_Python_properties, TRuleDataStoppingCriteria_Python_components };
TClassDescription const *TRuleDataStoppingCriteria_Python::classDescription() const { return &TRuleDataStoppingCriteria_Python::st_classDescription; }
TOrange *TRuleDataStoppingCriteria_Python::clone() const { return mlnew TRuleDataStoppingCriteria_Python(*this); }


/****** TRuleFinder_Python *****/


TPropertyDescription TRuleFinder_Python_properties[] = {
  {"validator", "", &typeid(POrange), &TRuleValidator::st_classDescription, offsetof(TRuleFinder_Python, validator), false, false, 0},
  {"evaluator", "", &typeid(POrange), &TRuleEvaluator::st_classDescription, offsetof(TRuleFinder_Python, evaluator), false, false, 0},
  {NULL}
};

size_t const TRuleFinder_Python_components[] = { offsetof(TRuleFinder_Python, validator), offsetof(TRuleFinder_Python, evaluator), 0};
TClassDescription TRuleFinder_Python::st_classDescription = { "TRuleFinder_Python", &typeid(TRuleFinder_Python), &TRuleFinder::st_classDescription, TRuleFinder_Python_properties, TRuleFinder_Python_components };
TClassDescription const *TRuleFinder_Python::classDescription() const { return &TRuleFinder_Python::st_classDescription; }
TOrange *TRuleFinder_Python::clone() const { return mlnew TRuleFinder_Python(*this); }


/****** TRuleBeamRefiner_Python *****/


TPropertyDescription TRuleBeamRefiner_Python_properties[] = {
  {NULL}
};

size_t const TRuleBeamRefiner_Python_components[] = { 0};
TClassDescription TRuleBeamRefiner_Python::st_classDescription = { "TRuleBeamRefiner_Python", &typeid(TRuleBeamRefiner_Python), &TRuleBeamRefiner::st_classDescription, TRuleBeamRefiner_Python_properties, TRuleBeamRefiner_Python_components };
TClassDescription const *TRuleBeamRefiner_Python::classDescription() const { return &TRuleBeamRefiner_Python::st_classDescription; }
TOrange *TRuleBeamRefiner_Python::clone() const { return mlnew TRuleBeamRefiner_Python(*this); }


/****** TRuleBeamInitializer_Python *****/


TPropertyDescription TRuleBeamInitializer_Python_properties[] = {
  {NULL}
};

size_t const TRuleBeamInitializer_Python_components[] = { 0};
TClassDescription TRuleBeamInitializer_Python::st_classDescription = { "TRuleBeamInitializer_Python", &typeid(TRuleBeamInitializer_Python), &TRuleBeamInitializer::st_classDescription, TRuleBeamInitializer_Python_properties, TRuleBeamInitializer_Python_components };
TClassDescription const *TRuleBeamInitializer_Python::classDescription() const { return &TRuleBeamInitializer_Python::st_classDescription; }
TOrange *TRuleBeamInitializer_Python::clone() const { return mlnew TRuleBeamInitializer_Python(*this); }


/****** TRuleBeamCandidateSelector_Python *****/


TPropertyDescription TRuleBeamCandidateSelector_Python_properties[] = {
  {NULL}
};

size_t const TRuleBeamCandidateSelector_Python_components[] = { 0};
TClassDescription TRuleBeamCandidateSelector_Python::st_classDescription = { "TRuleBeamCandidateSelector_Python", &typeid(TRuleBeamCandidateSelector_Python), &TRuleBeamCandidateSelector::st_classDescription, TRuleBeamCandidateSelector_Python_properties, TRuleBeamCandidateSelector_Python_components };
TClassDescription const *TRuleBeamCandidateSelector_Python::classDescription() const { return &TRuleBeamCandidateSelector_Python::st_classDescription; }
TOrange *TRuleBeamCandidateSelector_Python::clone() const { return mlnew TRuleBeamCandidateSelector_Python(*this); }


/****** TRuleBeamFilter_Python *****/


TPropertyDescription TRuleBeamFilter_Python_properties[] = {
  {NULL}
};

size_t const TRuleBeamFilter_Python_components[] = { 0};
TClassDescription TRuleBeamFilter_Python::st_classDescription = { "TRuleBeamFilter_Python", &typeid(TRuleBeamFilter_Python), &TRuleBeamFilter::st_classDescription, TRuleBeamFilter_Python_properties, TRuleBeamFilter_Python_components };
TClassDescription const *TRuleBeamFilter_Python::classDescription() const { return &TRuleBeamFilter_Python::st_classDescription; }
TOrange *TRuleBeamFilter_Python::clone() const { return mlnew TRuleBeamFilter_Python(*this); }


/****** TRuleClassifierConstructor_Python *****/


TPropertyDescription TRuleClassifierConstructor_Python_properties[] = {
  {NULL}
};

size_t const TRuleClassifierConstructor_Python_components[] = { 0};
TClassDescription TRuleClassifierConstructor_Python::st_classDescription = { "TRuleClassifierConstructor_Python", &typeid(TRuleClassifierConstructor_Python), &TRuleClassifierConstructor::st_classDescription, TRuleClassifierConstructor_Python_properties, TRuleClassifierConstructor_Python_components };
TClassDescription const *TRuleClassifierConstructor_Python::classDescription() const { return &TRuleClassifierConstructor_Python::st_classDescription; }
TOrange *TRuleClassifierConstructor_Python::clone() const { return mlnew TRuleClassifierConstructor_Python(*this); }


/****** TKernelFunc_Python *****/


TPropertyDescription TKernelFunc_Python_properties[] = {
  {NULL}
};

size_t const TKernelFunc_Python_components[] = { 0};
TClassDescription TKernelFunc_Python::st_classDescription = { "TKernelFunc_Python", &typeid(TKernelFunc_Python), &TKernelFunc::st_classDescription, TKernelFunc_Python_properties, TKernelFunc_Python_components };
TClassDescription const *TKernelFunc_Python::classDescription() const { return &TKernelFunc_Python::st_classDescription; }
TOrange *TKernelFunc_Python::clone() const { return mlnew TKernelFunc_Python(*this); }


/****** TExamplesDistanceConstructor_Python *****/


TPropertyDescription TExamplesDistanceConstructor_Python_properties[] = {
  {"ignore_class", "if true (default), class value is ignored when computing distances", &typeid(bool), NULL, offsetof(TExamplesDistanceConstructor_Python, ignoreClass), false, false, 0},
  {NULL}
};

size_t const TExamplesDistanceConstructor_Python_components[] = { 0};
TClassDescription TExamplesDistanceConstructor_Python::st_classDescription = { "TExamplesDistanceConstructor_Python", &typeid(TExamplesDistanceConstructor_Python), &TExamplesDistanceConstructor::st_classDescription, TExamplesDistanceConstructor_Python_properties, TExamplesDistanceConstructor_Python_components };
TClassDescription const *TExamplesDistanceConstructor_Python::classDescription() const { return &TExamplesDistanceConstructor_Python::st_classDescription; }
TOrange *TExamplesDistanceConstructor_Python::clone() const { return mlnew TExamplesDistanceConstructor_Python(*this); }


/****** TExamplesDistance_Python *****/


TPropertyDescription TExamplesDistance_Python_properties[] = {
  {NULL}
};

size_t const TExamplesDistance_Python_components[] = { 0};
TClassDescription TExamplesDistance_Python::st_classDescription = { "TExamplesDistance_Python", &typeid(TExamplesDistance_Python), &TExamplesDistance::st_classDescription, TExamplesDistance_Python_properties, TExamplesDistance_Python_components };
TClassDescription const *TExamplesDistance_Python::classDescription() const { return &TExamplesDistance_Python::st_classDescription; }
TOrange *TExamplesDistance_Python::clone() const { return mlnew TExamplesDistance_Python(*this); }
