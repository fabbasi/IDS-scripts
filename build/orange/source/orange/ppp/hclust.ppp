 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../hclust.hpp"
#include <cstddef>



/****** THierarchicalCluster *****/


TPropertyDescription THierarchicalCluster_properties[] = {
  {"branches", "subclusters", &typeid(POrange), &THierarchicalClusterList::st_classDescription, offsetof(THierarchicalCluster, branches), false, false, 0},
  {"height", "height", &typeid(float), NULL, offsetof(THierarchicalCluster, height), false, false, 0},
  {"mapping", "indices to the list of all elements in the clustering", &typeid(POrange), &TIntList::st_classDescription, offsetof(THierarchicalCluster, mapping), false, false, 0},
  {"first", "the index into 'elements' to the first element of the cluster", &typeid(int), NULL, offsetof(THierarchicalCluster, first), false, false, 0},
  {"last", "the index into 'elements' to the one after the last element of the cluster", &typeid(int), NULL, offsetof(THierarchicalCluster, last), false, false, 0},
  {NULL}
};

size_t const THierarchicalCluster_components[] = { offsetof(THierarchicalCluster, branches), offsetof(THierarchicalCluster, mapping), 0};
TClassDescription THierarchicalCluster::st_classDescription = { "THierarchicalCluster", &typeid(THierarchicalCluster), &TOrange::st_classDescription, THierarchicalCluster_properties, THierarchicalCluster_components };
TClassDescription const *THierarchicalCluster::classDescription() const { return &THierarchicalCluster::st_classDescription; }
TOrange *THierarchicalCluster::clone() const { return mlnew THierarchicalCluster(*this); }


/****** THierarchicalClustering *****/

void *PTHierarchicalClustering_Linkage(void *);

TPropertyDescription THierarchicalClustering_properties[] = {
  {"linkage", " linkage", &typeid(int), NULL, offsetof(THierarchicalClustering, linkage), false, false, PTHierarchicalClustering_Linkage},
  {"overwrite_matrix", "if true (default is false) it will use (and destroy) the distance matrix given as argument", &typeid(bool), NULL, offsetof(THierarchicalClustering, overwriteMatrix), false, false, 0},
  {"progress_callback", "progress callback function", &typeid(POrange), &TProgressCallback::st_classDescription, offsetof(THierarchicalClustering, progressCallback), false, false, 0},
  {NULL}
};

size_t const THierarchicalClustering_components[] = { offsetof(THierarchicalClustering, progressCallback), 0};
TClassDescription THierarchicalClustering::st_classDescription = { "THierarchicalClustering", &typeid(THierarchicalClustering), &TOrange::st_classDescription, THierarchicalClustering_properties, THierarchicalClustering_components };
TClassDescription const *THierarchicalClustering::classDescription() const { return &THierarchicalClustering::st_classDescription; }
TOrange *THierarchicalClustering::clone() const { return mlnew THierarchicalClustering(*this); }


/****** THierarchicalClusterOrdering *****/


TPropertyDescription THierarchicalClusterOrdering_properties[] = {
  {"progress_callback", "progress callback function", &typeid(POrange), &TProgressCallback::st_classDescription, offsetof(THierarchicalClusterOrdering, progress_callback), false, false, 0},
  {NULL}
};

size_t const THierarchicalClusterOrdering_components[] = { offsetof(THierarchicalClusterOrdering, progress_callback), 0};
TClassDescription THierarchicalClusterOrdering::st_classDescription = { "THierarchicalClusterOrdering", &typeid(THierarchicalClusterOrdering), &TOrange::st_classDescription, THierarchicalClusterOrdering_properties, THierarchicalClusterOrdering_components };
TClassDescription const *THierarchicalClusterOrdering::classDescription() const { return &THierarchicalClusterOrdering::st_classDescription; }
TOrange *THierarchicalClusterOrdering::clone() const { return mlnew THierarchicalClusterOrdering(*this); }
