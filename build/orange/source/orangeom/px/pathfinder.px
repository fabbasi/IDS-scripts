/* This file was generated by pyxtract 
   Do not edit.*/

#include <cstddef>

extern IMPORT_DLL TOrangeType PyOrOrange_Type;


/* -------------- Pathfinder --------------*/

PyMethodDef Pathfinder_methods[] = {
     {"set_progress_callback", (binaryfunc)Pathfinder_setProgressCallback, METH_VARARGS, "(function) -> None"},
     {"simplify", (binaryfunc)Pathfinder_simplify, METH_VARARGS, "(r, q, graph) -> None"},
     {NULL, NULL}
};



PyTypeObject PyOrPathfinder_Type_inh = {
  PyObject_HEAD_INIT((_typeobject *)&PyType_Type)
  0,
  "Orange.core.Pathfinder",
  sizeof(TPyOrange), 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_RICHCOMPARE, /* tp_flags */
  "()",                                              /* tp_doc */
  0, 0, 0, 0, 0, 0,
  Pathfinder_methods,                                /* tp_methods */
  0, 0,
  (_typeobject *)&PyOrOrange_Type,                   /* tp_base */
  0, 0, 0, 0, 0,
  PyType_GenericAlloc,                               /* tp_alloc */
  (newfunc)Pathfinder_new,                           /* tp_new */
  _PyObject_GC_Del,                                  /* tp_free */
  0, 0, 0, 0, 0, 0,
};

int cc_func_Pathfinder(PyObject *obj, void *ptr) { if (!PyOrPathfinder_Check(obj)) return 0;      *(GCPtr<TPathfinder> *)(ptr) = PyOrange_AsPathfinder(obj); return 1; }
int ccn_func_Pathfinder(PyObject *obj, void *ptr) { if (obj == Py_None) { *(GCPtr<TPathfinder> *)(ptr) = GCPtr<TPathfinder>(); return 1; }      if (!PyOrPathfinder_Check(obj)) return 0;      *(GCPtr<TPathfinder> *)(ptr) = PyOrange_AsPathfinder(obj); return 1; }


ORANGEOM_API TOrangeType PyOrPathfinder_Type (PyOrPathfinder_Type_inh, typeid(TPathfinder), 0, cc_Pathfinder, ccn_Pathfinder, NULL, false, NULL, NULL);



