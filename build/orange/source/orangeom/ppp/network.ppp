 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../network.hpp"
#include <cstddef>



/****** TNetwork *****/


TPropertyDescription TNetwork_properties[] = {
  {"items", "ExampleTable of vertices data", &typeid(POrange), &TExampleTable::st_classDescription, offsetof(TNetwork, items), false, false, 0},
  {"links", "ExampleTable of edges data", &typeid(POrange), &TExampleTable::st_classDescription, offsetof(TNetwork, links), false, false, 0},
  {"n_vertices", "the number of vertices", &typeid(int), NULL, offsetof(TNetwork, nVertices), true, false, 0},
  {"n_edge_types", "the number of edge types", &typeid(int), NULL, offsetof(TNetwork, nEdgeTypes), true, false, 0},
  {"directed", "directed", &typeid(bool), NULL, offsetof(TNetwork, directed), true, false, 0},
  {NULL}
};

size_t const TNetwork_components[] = { offsetof(TNetwork, items), offsetof(TNetwork, links), 0};
TClassDescription TNetwork::st_classDescription = { "TNetwork", &typeid(TNetwork), &TGraphAsList::st_classDescription, TNetwork_properties, TNetwork_components };
TClassDescription const *TNetwork::classDescription() const { return &TNetwork::st_classDescription; }
TOrange *TNetwork::clone() const { return mlnew TNetwork(*this); }
