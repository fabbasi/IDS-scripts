/* This file was generated by pyxtract 
   Do not edit.*/

#include "externs.px"

PyObject *__pickleLoaderHeatmap(PyObject *, PyObject *args);
PyObject *__pickleLoaderHeatmapConstructor(PyObject *, PyObject *args);


PyMethodDef orangeneFunctions[]={
     {"__pickleLoaderHeatmap", (binaryfunc)__pickleLoaderHeatmap, METH_VARARGS, "(type, packed-data, examples, exampleIndices)"},
     {"__pickleLoaderHeatmapConstructor", (binaryfunc)__pickleLoaderHeatmapConstructor, METH_VARARGS, "(type, sortedExamples, packed-data)"},
     {NULL, NULL}
};

int noOforangeneClasses=3;

TOrangeType *orangeneClasses[]={
    &PyOrHeatmap_Type,
    &PyOrHeatmapConstructor_Type,
    &PyOrHeatmapList_Type,
    NULL};



void addorangeneConstants(PyObject *mod) {
     PyModule_AddObject(mod, "Heatmap", (PyObject *)&PyOrHeatmap_Type);
     PyModule_AddObject(mod, "HeatmapConstructor", (PyObject *)&PyOrHeatmapConstructor_Type);
     PyModule_AddObject(mod, "HeatmapList", (PyObject *)&PyOrHeatmapList_Type);
}


#ifdef _MSC_VER
  #define WIN32_LEAN_AND_MEAN
  #include <windows.h>
  BOOL APIENTRY DllMain( HANDLE, DWORD  ul_reason_for_call, LPVOID)  { return TRUE; }
#endif

extern ORANGENE_API PyObject *orangeneModule;

ORANGE_API void addClassList(TOrangeType **);

extern "C" ORANGENE_API void initorangene()
{ 
  if (!initorangeneExceptions())
    return;

  for(TOrangeType **type=orangeneClasses; *type; type++)
    if (PyType_Ready((PyTypeObject *)*type)<0)
      return;
  addClassList(orangeneClasses);

  gcorangeneUnsafeStaticInitialization();
  orangeneModule = Py_InitModule("orangene", orangeneFunctions);  
  addorangeneConstants(orangeneModule);
}
