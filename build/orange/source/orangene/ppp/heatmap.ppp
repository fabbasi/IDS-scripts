 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../heatmap.hpp"
#include <cstddef>



/****** THeatmap *****/


TPropertyDescription THeatmap_properties[] = {
  {"height", "bitmap height (in cells)", &typeid(int), NULL, offsetof(THeatmap, height), false, false, 0},
  {"width", "bitmap width (in cells)", &typeid(int), NULL, offsetof(THeatmap, width), false, false, 0},
  {"examples", "examples from the whole bitmap", &typeid(POrange), &TExampleTable::st_classDescription, offsetof(THeatmap, examples), true, false, 0},
  {"example_indices", "indices to 'examples' (one for row + one at the end)", &typeid(POrange), &TIntList::st_classDescription, offsetof(THeatmap, exampleIndices), true, false, 0},
  {NULL}
};

size_t const THeatmap_components[] = { offsetof(THeatmap, examples), offsetof(THeatmap, exampleIndices), 0};
TClassDescription THeatmap::st_classDescription = { "THeatmap", &typeid(THeatmap), &TOrange::st_classDescription, THeatmap_properties, THeatmap_components };
TClassDescription const *THeatmap::classDescription() const { return &THeatmap::st_classDescription; }
TOrange *THeatmap::clone() const { return mlnew THeatmap(*this); }


/****** THeatmapConstructor *****/


TPropertyDescription THeatmapConstructor_properties[] = {
  {"sorted_examples", "sortedExamples", &typeid(POrange), &TExampleTable::st_classDescription, offsetof(THeatmapConstructor, sortedExamples), true, false, 0},
  {"n_columns", "number of columns", &typeid(int), NULL, offsetof(THeatmapConstructor, nColumns), true, false, 0},
  {"n_rows", "number of rows", &typeid(int), NULL, offsetof(THeatmapConstructor, nRows), true, false, 0},
  {"n_classes", "number of classes (0 if the data is not classified)", &typeid(int), NULL, offsetof(THeatmapConstructor, nClasses), true, false, 0},
  {NULL}
};

size_t const THeatmapConstructor_components[] = { offsetof(THeatmapConstructor, sortedExamples), 0};
TClassDescription THeatmapConstructor::st_classDescription = { "THeatmapConstructor", &typeid(THeatmapConstructor), &TOrange::st_classDescription, THeatmapConstructor_properties, THeatmapConstructor_components };
TClassDescription const *THeatmapConstructor::classDescription() const { return &THeatmapConstructor::st_classDescription; }
TOrange *THeatmapConstructor::clone() const { return mlnew THeatmapConstructor(*this); }
