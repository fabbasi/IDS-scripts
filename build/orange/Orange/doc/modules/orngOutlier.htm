<html>
<HEAD>
<LINK REL=StyleSheet HREF="../style.css" TYPE="text/css">
<LINK REL=StyleSheet HREF="../style-print.css" TYPE="text/css" MEDIA=print>
</HEAD>

<BODY>
<index name="outlier detection">
<h1>orngOutlier: module for detecting outliers</h1>

<p>This page describes a class for detecting outliers.</p>
<p>The class first calculates average distances for each example to other examples in given data. Then it calculates Z-scores for all average distances. Z-scores higher than zero denote an example that is more distant to other examples than average.</p>
<p>Detection of outliers can be performed directly on examples or on already calculated distance matrix. Also, the number of nearest neighbours used for averaging distances can be set. Default is 0, which means that all examples are used when calculating average distances.</p>

<hr>

<H2>OutlierDetection</H2>
<index name="classes/OutlierDetection">

<P class=section>Methods</P>
<DL class=attributes><DT>setExamples(examples, distance)</DT>
<DD>Sets examples on which the outlier detection will be performed. Distance is a class capable of calculating example distance. If omitted, Manhattan distance is used.</DD>
</DL>
<DL class=attributes><DT>setDistanceMatrix(orange.SymMatrix)</DT>
<DD>Sets the distance matrix on which the outlier detection will be performed.</DD>
</DL>
<DL class=attributes><DT>setKNN(neighbours)</DT>
<DD>Set the number of nearest neighbours considered in determinating outliers.</DD>
</DL>
<DL class=attributes><DT>distanceMatrix()</DT>
<DD>Returns the distance matrix of the dataset.</DD>
</DL>
<DL class=attributes><DT>zValues()</DT>
<DD>Returns a list of Z values of average distances for each element to others. N-th number in the list is the Z-value of N-th example.</DD>
</DL>

<H2>Examples</H2>

<p>The following example prints a list of Z-values of examples in <CODE>bridges</CODE> dataset.</p>
<p class="header"><a href="outlier1.py">outlier1.py</a>
(uses <a href="bridges.tab">bridges.tab</a>)</p>
<XMP class=code>import orange, orngOutlier

data = orange.ExampleTable("bridges")
outlierDet = orngOutlier.OutlierDetection()
outlierDet.setExamples(data)
print outlierDet.zValues()
</XMP>

<p>The following example prints 5 examples with highest Z-scores. Euclidian distance is used as a distance measurement and average distance is calculated over 3 nearest neighbours.</p>
<p class="header"><a href="outlier2.py">outlier2.py</a>
(uses <a href="bridges.tab">bridges.tab</a>)</p>
<XMP class=code>import orange, orngOutlier

data = orange.ExampleTable("bridges")
outlierDet = orngOutlier.OutlierDetection()
outlierDet.setExamples(data, orange.ExamplesDistanceConstructor_Euclidean(data))
outlierDet.setKNN(3)
zValues = outlierDet.zValues()
sorted = []
for el in zValues: sorted.append(el)
sorted.sort()
for i,el in enumerate(zValues):
	if el > sorted[-6]: print  data[i], "Z-score: %5.3f" % el
</XMP> 
